/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IUpgradeExecutor,
  IUpgradeExecutorInterface,
} from "../../../../@offchainlabs/upgrade-executor/src/IUpgradeExecutor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "upgrade",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "upgradeCallData",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "targetCallData",
        type: "bytes",
      },
    ],
    name: "executeCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "executors",
        type: "address[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IUpgradeExecutor__factory {
  static readonly abi = _abi;
  static createInterface(): IUpgradeExecutorInterface {
    return new utils.Interface(_abi) as IUpgradeExecutorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IUpgradeExecutor {
    return new Contract(address, _abi, signerOrProvider) as IUpgradeExecutor;
  }
}
