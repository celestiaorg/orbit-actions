/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AdminFallbackProxy,
  AdminFallbackProxyInterface,
} from "../../../../src/libraries/AdminFallbackProxy.sol/AdminFallbackProxy";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "UpgradedSecondary",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60808060405234610016576101f9908161001c8239f35b600080fdfe6080604052366100a9576004361061007d57600080516020610184833981519152546001600160a01b039081163314610055576000805160206101a483398151915254165b610050813b1515610141565b610122565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416610044565b62461bcd60e51b6080526020608452600b60a4526a4e4f5f46554e435f53494760a81b60c45260646080fd5b600436106100ef57600080516020610184833981519152546001600160a01b039081163314610055576000805160206101a48339815191525416610050813b1515610141565b60405162461bcd60e51b815260206004820152600b60248201526a4e4f5f46554e435f53494760a81b6044820152606490fd5b6000808092368280378136915af43d82803e1561013d573d90f35b3d90fd5b1561014857565b60405162461bcd60e51b815260206004820152601360248201527215105491d15517d393d517d0d3d395149050d5606a1b6044820152606490fdfeb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61032b1dbce74324248c222f0ec2d5ed7bd323cfc425b336f0253c5ccfda7265546da264697066735822122016cc4f339b13b9f139207cd4f725a9a62a3cf5ebe34d5c5c4f4b7430c94eeff464736f6c63430008130033";

type AdminFallbackProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AdminFallbackProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AdminFallbackProxy__factory extends ContractFactory {
  constructor(...args: AdminFallbackProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AdminFallbackProxy> {
    return super.deploy(overrides || {}) as Promise<AdminFallbackProxy>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AdminFallbackProxy {
    return super.attach(address) as AdminFallbackProxy;
  }
  override connect(signer: Signer): AdminFallbackProxy__factory {
    return super.connect(signer) as AdminFallbackProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AdminFallbackProxyInterface {
    return new utils.Interface(_abi) as AdminFallbackProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AdminFallbackProxy {
    return new Contract(address, _abi, signerOrProvider) as AdminFallbackProxy;
  }
}
