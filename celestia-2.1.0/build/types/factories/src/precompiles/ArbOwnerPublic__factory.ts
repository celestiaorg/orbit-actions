/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ArbOwnerPublic,
  ArbOwnerPublicInterface,
} from "../../../src/precompiles/ArbOwnerPublic";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "rectifiedOwner",
        type: "address",
      },
    ],
    name: "ChainOwnerRectified",
    type: "event",
  },
  {
    inputs: [],
    name: "getAllChainOwners",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBrotliCompressionLevel",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getInfraFeeAccount",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNetworkFeeAccount",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getScheduledUpgrade",
    outputs: [
      {
        internalType: "uint64",
        name: "arbosVersion",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "scheduledForTimestamp",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "isChainOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ownerToRectify",
        type: "address",
      },
    ],
    name: "rectifyChainOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class ArbOwnerPublic__factory {
  static readonly abi = _abi;
  static createInterface(): ArbOwnerPublicInterface {
    return new utils.Interface(_abi) as ArbOwnerPublicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArbOwnerPublic {
    return new Contract(address, _abi, signerOrProvider) as ArbOwnerPublic;
  }
}
