/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  OneStepProverMath,
  OneStepProverMathInterface,
} from "../../../src/osp/OneStepProverMath";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "maxInboxMessagesRead",
            type: "uint256",
          },
          {
            internalType: "contract IBridge",
            name: "bridge",
            type: "address",
          },
        ],
        internalType: "struct ExecutionContext",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum MachineStatus",
            name: "status",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "enum ValueType",
                        name: "valueType",
                        type: "uint8",
                      },
                      {
                        internalType: "uint256",
                        name: "contents",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct Value[]",
                    name: "inner",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct ValueArray",
                name: "proved",
                type: "tuple",
              },
              {
                internalType: "bytes32",
                name: "remainingHash",
                type: "bytes32",
              },
            ],
            internalType: "struct ValueStack",
            name: "valueStack",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "inactiveStackHash",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "remainingHash",
                type: "bytes32",
              },
            ],
            internalType: "struct MultiStack",
            name: "valueMultiStack",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "enum ValueType",
                        name: "valueType",
                        type: "uint8",
                      },
                      {
                        internalType: "uint256",
                        name: "contents",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct Value[]",
                    name: "inner",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct ValueArray",
                name: "proved",
                type: "tuple",
              },
              {
                internalType: "bytes32",
                name: "remainingHash",
                type: "bytes32",
              },
            ],
            internalType: "struct ValueStack",
            name: "internalStack",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "enum ValueType",
                        name: "valueType",
                        type: "uint8",
                      },
                      {
                        internalType: "uint256",
                        name: "contents",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct Value",
                    name: "returnPc",
                    type: "tuple",
                  },
                  {
                    internalType: "bytes32",
                    name: "localsMerkleRoot",
                    type: "bytes32",
                  },
                  {
                    internalType: "uint32",
                    name: "callerModule",
                    type: "uint32",
                  },
                  {
                    internalType: "uint32",
                    name: "callerModuleInternals",
                    type: "uint32",
                  },
                ],
                internalType: "struct StackFrame[]",
                name: "proved",
                type: "tuple[]",
              },
              {
                internalType: "bytes32",
                name: "remainingHash",
                type: "bytes32",
              },
            ],
            internalType: "struct StackFrameWindow",
            name: "frameStack",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "inactiveStackHash",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "remainingHash",
                type: "bytes32",
              },
            ],
            internalType: "struct MultiStack",
            name: "frameMultiStack",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "globalStateHash",
            type: "bytes32",
          },
          {
            internalType: "uint32",
            name: "moduleIdx",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "functionIdx",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "functionPc",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "recoveryPc",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "modulesRoot",
            type: "bytes32",
          },
        ],
        internalType: "struct Machine",
        name: "startMach",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "globalsMerkleRoot",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "uint64",
                name: "size",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "maxSize",
                type: "uint64",
              },
              {
                internalType: "bytes32",
                name: "merkleRoot",
                type: "bytes32",
              },
            ],
            internalType: "struct ModuleMemory",
            name: "moduleMemory",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "tablesMerkleRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "functionsMerkleRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "extraHash",
            type: "bytes32",
          },
          {
            internalType: "uint32",
            name: "internalsOffset",
            type: "uint32",
          },
        ],
        internalType: "struct Module",
        name: "startMod",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint16",
            name: "opcode",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "argumentData",
            type: "uint256",
          },
        ],
        internalType: "struct Instruction",
        name: "inst",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "executeOneStep",
    outputs: [
      {
        components: [
          {
            internalType: "enum MachineStatus",
            name: "status",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "enum ValueType",
                        name: "valueType",
                        type: "uint8",
                      },
                      {
                        internalType: "uint256",
                        name: "contents",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct Value[]",
                    name: "inner",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct ValueArray",
                name: "proved",
                type: "tuple",
              },
              {
                internalType: "bytes32",
                name: "remainingHash",
                type: "bytes32",
              },
            ],
            internalType: "struct ValueStack",
            name: "valueStack",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "inactiveStackHash",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "remainingHash",
                type: "bytes32",
              },
            ],
            internalType: "struct MultiStack",
            name: "valueMultiStack",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "enum ValueType",
                        name: "valueType",
                        type: "uint8",
                      },
                      {
                        internalType: "uint256",
                        name: "contents",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct Value[]",
                    name: "inner",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct ValueArray",
                name: "proved",
                type: "tuple",
              },
              {
                internalType: "bytes32",
                name: "remainingHash",
                type: "bytes32",
              },
            ],
            internalType: "struct ValueStack",
            name: "internalStack",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "enum ValueType",
                        name: "valueType",
                        type: "uint8",
                      },
                      {
                        internalType: "uint256",
                        name: "contents",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct Value",
                    name: "returnPc",
                    type: "tuple",
                  },
                  {
                    internalType: "bytes32",
                    name: "localsMerkleRoot",
                    type: "bytes32",
                  },
                  {
                    internalType: "uint32",
                    name: "callerModule",
                    type: "uint32",
                  },
                  {
                    internalType: "uint32",
                    name: "callerModuleInternals",
                    type: "uint32",
                  },
                ],
                internalType: "struct StackFrame[]",
                name: "proved",
                type: "tuple[]",
              },
              {
                internalType: "bytes32",
                name: "remainingHash",
                type: "bytes32",
              },
            ],
            internalType: "struct StackFrameWindow",
            name: "frameStack",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "inactiveStackHash",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "remainingHash",
                type: "bytes32",
              },
            ],
            internalType: "struct MultiStack",
            name: "frameMultiStack",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "globalStateHash",
            type: "bytes32",
          },
          {
            internalType: "uint32",
            name: "moduleIdx",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "functionIdx",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "functionPc",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "recoveryPc",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "modulesRoot",
            type: "bytes32",
          },
        ],
        internalType: "struct Machine",
        name: "mach",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "globalsMerkleRoot",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "uint64",
                name: "size",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "maxSize",
                type: "uint64",
              },
              {
                internalType: "bytes32",
                name: "merkleRoot",
                type: "bytes32",
              },
            ],
            internalType: "struct ModuleMemory",
            name: "moduleMemory",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "tablesMerkleRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "functionsMerkleRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "extraHash",
            type: "bytes32",
          },
          {
            internalType: "uint32",
            name: "internalsOffset",
            type: "uint32",
          },
        ],
        internalType: "struct Module",
        name: "mod",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657611ec4908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c633604366f1461002757600080fd5b34610dc05736600319016101c08112610dc057604013610dc0576001600160401b0360443511610dc0576101c060443536036003190112610dc057610100366063190112610dc057604036610163190112610dc0576101a4356001600160401b038111610dc05736602382011215610dc05760048101356001600160401b038111610dc05736910160240111610dc05760006101606100c4610ec9565b8281526100cf610f8a565b60208201526100dc610ee9565b83815283602082015260408201526100f2610f8a565b60608201526100ff610ee9565b606081528360208201526080820152610116610ee9565b83815283602082015260a08201528260c08201528260e08201528261010082015282610120820152826101408201520152600060a0610153610f08565b82815261015e610f27565b8381528360208201528360408201526020820152826040820152826060820152826080820152015261018e610ec9565b60046044358101351015610dc057604435600481013582526001600160401b0360249091013511610dc0576101ce36604435602481013501600401610ff0565b60208201526101e13660448035016110b6565b60408201526001600160401b036044356084013511610dc05761020f36604435608481013501600401610ff0565b606082015260443560a401356001600160401b038111610dc0576040604435820136036003190112610dc057610243610ee9565b906044358101600401356001600160401b038111610dc05736602382846044350101011215610dc05760048183604435010101359061028961028483610faa565b610f65565b91602083828152019136602460a0840283886044350101010111610dc0579160248386604435010101925b602460a084028288604435010101018410610dc5578787602488888352604435010135602082015260808201526102f03660c4604435016110b6565b60a0820152610104604435013560c0820152610311610124604435016110da565b60e0820152610325610144604435016110da565b61010082015261033a610164604435016110da565b6101208201526044356101848101356101408301526101a40135610160820152610362610f08565b6064358152906060366083190112610dc05761037c610f27565b6084356001600160401b0381169003610dc057608435815260a4356001600160401b0381169003610dc05760a435602082015260c4356040820152602083015260e435604083015261010435606083015261012435608083015263ffffffff61014435166101443503610dc0576101443560a083015261ffff6103fd6110eb565b16604581148015610db6575b15610c345750600b5b80600b14610b775780600a14610ac85780600714610a735780600914610a2757806006146109dc57806008146109d257806005146109c8578060041461099b578060031461094757806002146107775760011461047f57634e487b7160e01b600052605160045260246000fd5b60bc61ffff61048c6110eb565b16036106e857600060025b6104a46020840151611cd5565b908151600781101561069257600782101561069257036106a8576007821015610692576104d79181526020830151611e10565b604051906101208252805160048110156106925761012083015261050d60208201516101c06101408501526102e0840190610e6c565b90602060408201518051610160860152015161018084015261054360608201519261011f199384868303016101a0870152610e6c565b608082015192848203016101c08501528251926040825260408201845180915260206060840195019060005b81811061064b575050509461016063ffffffff9360a093602080899a015191015260208482015180516101e08a0152015161020088015260c08101516102208801528460e082015116610240880152846101008201511661026088015284610120820151166102808801526101408101516102a088015201516102c08601528051602086015260406020820151600180831b0381511682880152600180831b03602082015116606088015201516080860152604081015182860152606081015160c0860152608081015160e08601520151166101008301520390f35b909195602060a060019263ffffffff60608b51610669848251610e54565b85810151604085015282604082015116828501520151166080820152019701910191909161056f565b634e487b7160e01b600052602160045260246000fd5b60405162461bcd60e51b8152602060048201526018602482015277494e56414c49445f5245494e544552505245545f5459504560401b6044820152606490fd5b60bd61ffff6106f56110eb565b16036107045760016003610497565b60be61ffff6107116110eb565b16036107205760026000610497565b60bf61ffff61072d6110eb565b160361073c5760036001610497565b60405162461bcd60e51b81526020600482015260136024820152721253959053125117d491525395115494149155606a1b6044820152606490fd5b5060c061ffff6107856110eb565b160361089757600860005b6007811015610692578061088a5763ffffffff5b6107b16020850151611cd5565b9182516007811015610692570361084957600160ff84161b8060001981011161083357600019810160208401511680602085015260ff600019818716011161083357600160ff6108169681600019911601161b1661081b575b50506020830151611e10565b6104d7565b6000190119166020820151176020820152848061080a565b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b81526020600482015260196024820152784241445f455854454e445f53414d455f545950455f5459504560381b6044820152606490fd5b6001600160401b036107a4565b60c161ffff6108a46110eb565b16036108b35760106000610790565b60c261ffff6108c06110eb565b16036108cf5760086001610790565b60c361ffff6108dc6110eb565b16036108eb5760106001610790565b60c461ffff6108f86110eb565b16036109075760206001610790565b60405162461bcd60e51b8152602060048201526018602482015277494e56414c49445f455854454e445f53414d455f5459504560401b6044820152606490fd5b5061081661096061095b6020840151611cd5565b611b55565b60ac61ffff61096d6110eb565b16036109905761097c90611169565b61098a602084015191611c42565b90611e10565b63ffffffff1661097c565b5061081663ffffffff6109b96109b46020850151611cd5565b611bb3565b1661098a602084015191611c16565b5061081681611925565b5061081681611602565b506109ed6109b46020830151611cd5565b60781961ffff6109fb6110eb565b160161ffff811161083357610a1863ffffffff91610816936114aa565b1661098a602084015191611c42565b50610a3861095b6020830151611cd5565b60661961ffff610a466110eb565b16019061ffff8211610833576108169163ffffffff610a65921661131e565b61098a602084015191611c16565b50610a846109b46020830151611cd5565b610a946109b46020840151611cd5565b60501961ffff610aa26110eb565b160161ffff81116108335761081692610aba9261118f565b61098a602084015191611c72565b50610ad961095b6020830151611cd5565b610ae961095b6020840151611cd5565b60451961ffff610af76110eb565b160161ffff81116108335761081692610aba9261ffff831660028114908115610b6c575b8115610b61575b8115610b56575b5015610b4757610b3b610b4191611169565b91611169565b9061118f565b63ffffffff918216911661118f565b600891501488610b29565b600681149150610b22565b600481149150610b1b565b50610b856020820151611cd5565b604561ffff610b926110eb565b1603610bd357805190600782101561069257610bb060209215611133565b0151610bc957610816600161098a602084015191611c16565b6108166000610a65565b605061ffff610be06110eb565b1603610c0557805190600782101561069257610c006001602093146110fd565b610bb0565b60405162461bcd60e51b81526020600482015260076024820152662120a22fa2a8ad60c91b6044820152606490fd5b604681101580610dab575b15610c4c5750600a610412565b606781101580610da0575b15610c6457506009610412565b606a81101580610d95575b15610c7c57506008610412565b605181101580610d8a575b15610c9457506007610412565b607981101580610d7f575b15610cac57506006610412565b607c81101580610d74575b15610cc457506005610412565b60a78103610cd457506004610412565b60ac81148015610d6a575b15610cec57506003610412565b60c081101580610d5f575b15610d0457506002610412565b60bc8110159081610d53575b5015610d1d576001610412565b60405162461bcd60e51b815260206004820152600e60248201526d494e56414c49445f4f50434f444560901b6044820152606490fd5b60bf9150111583610d10565b5060c4811115610cf7565b5060ad8114610cdf565b50608a811115610cb7565b50607b811115610c9f565b50605a811115610c87565b506078811115610c6f565b506069811115610c57565b50604f811115610c3f565b5060508114610409565b600080fd5b60a084360312610dc0576040516001600160401b036080820190811190821117610e3e5760a06020602494836080849501604052610e03368a610fc1565b8152604089013583820152610e1a60608a016110da565b6040820152610e2b60808a016110da565b60608201528152019501949250506102b4565b634e487b7160e01b600052604160045260246000fd5b80516007811015610692578252602090810151910152565b908151604092838352606083019151936020928382860152855180915283608086019601916000905b828210610ea9575050505081015191015290565b90919296858282610ebd6001948c51610e54565b01980193920190610e95565b6040519061018082016001600160401b03811183821017610e3e57604052565b60408051919082016001600160401b03811183821017610e3e57604052565b6040519060c082016001600160401b03811183821017610e3e57604052565b60405190606082016001600160401b03811183821017610e3e57604052565b60405190602082016001600160401b03811183821017610e3e57604052565b6040519190601f01601f191682016001600160401b03811183821017610e3e57604052565b610f92610ee9565b90610f9b610f46565b60608152825260006020830152565b6001600160401b038111610e3e5760051b60200190565b9190826040910312610dc057610fd5610ee9565b918035906007821015610dc057602091845201356020830152565b91906040928381830312610dc057611006610ee9565b936001600160401b03928235848111610dc0578301916020948584840312610dc057611030610f46565b938035918211610dc0570182601f82011215610dc057803561105461028482610faa565b93878086848152019260061b84010192818411610dc0579088809897969594939201915b83831061109057505050505081528552013590830152565b9784959697986110a4838596979495610fc1565b81520192019088979695949392611078565b9190826040910312610dc05760206110cc610ee9565b928035845201356020830152565b359063ffffffff82168203610dc057565b6101643561ffff81168103610dc05790565b1561110457565b60405162461bcd60e51b81526020600482015260076024820152661393d517d24d8d60ca1b6044820152606490fd5b1561113a57565b60405162461bcd60e51b81526020600482015260076024820152662727aa2fa4999960c91b6044820152606490fd5b6380000000811661117d5763ffffffff1690565b63ffffffff1663ffffffff60201b1790565b9161ffff16806111ab57506001600160401b0391821691161490565b600181036111c657506001600160401b039182169116141590565b600281036111e5575060018060401b0380911660070b911660070b1290565b600381036111ff57506001600160401b0390811691161090565b6004810361121e575060018060401b0380911660070b911660070b1390565b6005810361123857506001600160401b0390811691161190565b60068103611258575060018060401b0380911660070b911660070b131590565b6007810361127357506001600160401b039081169116111590565b60088103611293575060018060401b0380911660070b911660070b121590565b6009036112ac576001600160401b039081169116101590565b60405162461bcd60e51b815260206004820152600a6024820152690424144204952454c4f560b41b6044820152606490fd5b90600163ffffffff8093160191821161083357565b63ffffffff908116600019019190821161083357565b9063ffffffff80921660200391821161083357565b9060009061ffff16806113a1575060205b63ffffffff8082161515908161137f575b50156113545761134f906112f3565b61132f565b63ffffffff9081166020039250821161136b575090565b634e487b7160e01b81526011600452602490fd5b6001600160401b039150600190611395846112f3565b161b8416161538611340565b600192839290918381036113ff5750925b6113bb57505090565b63ffffffff83166020811090816113e8575b50156113e3576113dd82936112de565b926113b2565b505090565b83901b82166001600160401b0316159050386113cd565b6002919293501461143b5760405162461bcd60e51b815260206004820152600960248201526804241442049556e4f760bc1b6044820152606490fd5b82918182945b61144d575b5050505090565b63ffffffff8091169060208210156114a45784821b83166001600160401b0316611494575b811461148057830183611441565b634e487b7160e01b83526011600452602483fd5b9461149e906112de565b94611472565b50611446565b9060009061ffff1680611519575060405b63ffffffff808216151590816114f7575b50156114e0576114db906112f3565b6114bb565b63ffffffff9081166040039250821161136b575090565b6001600160401b03915060019061150d846112f3565b161b84161615386114cc565b600192839290918381036115725750925b61153357505090565b63ffffffff831660408110908161155b575b50156113e35761155582936112de565b9261152a565b83901b82166001600160401b031615905038611545565b600291929350146115ae5760405162461bcd60e51b815260206004820152600960248201526804241442049556e4f760bc1b6044820152606490fd5b82918182945b6115bf575050505090565b63ffffffff8091169060408210156114a45784821b83166001600160401b03166115f2575b8114611480578301836115b4565b946115fc906112de565b946115e4565b6020810161161361095b8251611cd5565b61162061095b8351611cd5565b906000936101643561ffff9081811680910361182557606919019581871161136b57506003959081168681036116cb57505063ffffffff80921690811580156116ab575b6116a05750840b801561168a57611688948261098a9416900b0516915b5191611c16565b565b634e487b7160e01b600052601260045260246000fd5b600290525050505050565b50838316860b637fffffff19148015611664575081860b60001914611664565b6005810361170157505063ffffffff8092169081156116a05750840b801561168a57611688948261098a9416900b071691611681565b929592600a810361172c575050505061098a9061168893601f63ffffffff80931691161b1691611681565b600c8103611754575050505061098a9061168893601f63ffffffff80931691161c1691611681565b600b810361177e575050509061168893601f61098a9363ffffffff809416900b91161d1691611681565b91925090600d81036117ba5750505061098a90601f61168894169063ffffffff8091168181816117ad86611309565b161c16921b161791611681565b600e036117f057505061098a90601f61168894169063ffffffff8091168181816117e386611309565b161b16921c161791611681565b611805919263ffffffff808097169116611829565b91909161181c57506116889261098a911691611681565b60029052505050565b8680fd5b6000939261ffff16806118455750016001600160401b03169190565b6001810361185c5750036001600160401b03169190565b600281036118735750026001600160401b03169190565b6004810361189d57506001600160401b03918216919082156118955716049190565b505050600190565b600681036118bf57506001600160401b03918216919082156118955716069190565b600781036118cd5750169190565b600881036118db5750179190565b6009036118e757189190565b60405162461bcd60e51b81526020600482015260166024820152750494e56414c49445f47454e455249435f42494e5f4f560541b6044820152606490fd5b602081016119366109b48251611cd5565b916119446109b48351611cd5565b9060006101643561ffff90818116809103611b3957607b19019181831161136b57508116600381036119de57506001600160401b03948516919050811580156119b9575b6119af575060070b92831561168a57611688938161098a931660070b0516915b5191611c42565b6002905250505050565b5082851660070b60016001603f1b031914801561198857506000198260070b14611988565b60058103611a1b57506001600160401b0394851691905081156119af575060070b92831561168a57611688938161098a931660070b0716916119a8565b600a8103611a445750505061098a9061168893603f60018060401b0380931691161b16916119a8565b600c8103611a6d5750505061098a9061168893603f60018060401b0380931691161c16916119a8565b600b8103611a995750505061098a9061168893603f60018060401b0380931660070b91161d16916119a8565b600d8103611ad657506116889461098a93603f90911692506001600160401b0391508116818181611ac986611b3d565b161c16921b1617916119a8565b600e03611b1157506116889361098a92603f90911691506001600160401b03908116818181611b0486611b3d565b161b16921c1617916119a8565b909293611b1d92611829565b919091611b31575061098a611688926119a8565b600290525050565b8280fd5b6001600160401b039081166040039190821161083357565b60208101519051600781101561069257611b6f9015611133565b600160201b811015611b845763ffffffff1690565b60405162461bcd60e51b81526020600482015260076024820152662120a22fa4999960c91b6044820152606490fd5b602081015190516007811015610692576001611bcf91146110fd565b600160401b811015611be7576001600160401b031690565b60405162461bcd60e51b815260206004820152600760248201526610905117d24d8d60ca1b6044820152606490fd5b60006020611c22610ee9565b828152015263ffffffff611c34610ee9565b916000835216602082015290565b60006020611c4e610ee9565b8281520152611c5b610ee9565b600181526001600160401b03909116602082015290565b602090611c7d610ee9565b6000808252920182905215611cb157806020611c97610ee9565b8281520152611ca4610ee9565b9081526001602082015290565b806020611cbc610ee9565b8281520152611cc9610ee9565b90808252602082015290565b90602091611ce1610ee9565b600093818580935201525191806020611cf8610ee9565b8281520152825180516000199391848201918211611d735790611d1a91611d87565b519284515190810190811161148057611d3290611db1565b915b8251811015611d6d5780611d4c611d68928751611d87565b51611d578286611d87565b52611d628185611d87565b50611e01565b611d34565b50925290565b634e487b7160e01b84526011600452602484fd5b8051821015611d9b5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b90611dbe61028483610faa565b8281528092611dcf601f1991610faa565b01906000805b838110611de25750505050565b602090611ded610ee9565b838152828481830152828601015201611dd5565b60001981146108335760010190565b518051519160019283810180911161083357611e2b90611db1565b926000815b611e53575b5050815151611e4f91611e488286611d87565b5283611d87565b5052565b83518051821015611e885790611e6c81611e8293611d87565b51611e778288611d87565b52611d628187611d87565b81611e30565b50611e3556fea2646970667358221220c8b8f86c8c62eacb482f4ffe6c5d8b41977e32fbb3fe084598b0b4b0c26b904c64736f6c63430008130033";

type OneStepProverMathConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OneStepProverMathConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OneStepProverMath__factory extends ContractFactory {
  constructor(...args: OneStepProverMathConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OneStepProverMath> {
    return super.deploy(overrides || {}) as Promise<OneStepProverMath>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OneStepProverMath {
    return super.attach(address) as OneStepProverMath;
  }
  override connect(signer: Signer): OneStepProverMath__factory {
    return super.connect(signer) as OneStepProverMath__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OneStepProverMathInterface {
    return new utils.Interface(_abi) as OneStepProverMathInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OneStepProverMath {
    return new Contract(address, _abi, signerOrProvider) as OneStepProverMath;
  }
}
