/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  BridgeStub,
  BridgeStubInterface,
} from "../../../src/mocks/BridgeStub";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stored",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "received",
        type: "uint256",
      },
    ],
    name: "BadSequencerMessageNumber",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "outbox",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "BridgeCallTriggered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "inbox",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "InboxToggle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "messageIndex",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "beforeInboxAcc",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "inbox",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "kind",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "messageDataHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "baseFeeL1",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "timestamp",
        type: "uint64",
      },
    ],
    name: "MessageDelivered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "outbox",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "OutboxToggle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "rollup",
        type: "address",
      },
    ],
    name: "RollupUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newSequencerInbox",
        type: "address",
      },
    ],
    name: "SequencerInboxUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptFundsFromOldBridge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "activeOutbox",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allowedDelayedInboxList",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "inbox",
        type: "address",
      },
    ],
    name: "allowedDelayedInboxes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allowedOutboxList",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowedOutboxes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "delayedInboxAccs",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayedMessageCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "kind",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "messageDataHash",
        type: "bytes32",
      },
    ],
    name: "enqueueDelayedMessage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dataHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "afterDelayedMessagesRead",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "prevMessageCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newMessageCount",
        type: "uint256",
      },
    ],
    name: "enqueueSequencerMessage",
    outputs: [
      {
        internalType: "uint256",
        name: "seqMessageIndex",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "beforeAcc",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "delayedAcc",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "acc",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "executeCall",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IOwnable",
        name: "",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "nativeToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nativeTokenDecimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rollup",
    outputs: [
      {
        internalType: "contract IOwnable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "sequencerInbox",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "sequencerInboxAccs",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sequencerMessageCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sequencerReportedSubMessageCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "inbox",
        type: "address",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setDelayedInbox",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    name: "setOutbox",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sequencerInbox",
        type: "address",
      },
    ],
    name: "setSequencerInbox",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "batchPoster",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "dataHash",
        type: "bytes32",
      },
    ],
    name: "submitBatchSpendingReport",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IOwnable",
        name: "",
        type: "address",
      },
    ],
    name: "updateRollupAddress",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610b3a908161001c8239f35b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c91826284120c146107ed5750816316bf5579146107c2578163413b35bd146107a257816347fb24c5146107875781634f61f850146107245781635fca4a16146107055781637a88b107146106e057816386598a561461055f5781638db5993b146103b9578163919cc70614610258578163945e11471461035d5781639e5d4c49146102ec578163ab5d8943146102c3578163ad48cb5e1461029e578163ae60bd131461025d578163c4d66de814610258578163cb23bcb514610243578163cee3d7281461022d578163d5719dc2146101f5578163e1758bd8146101cc578163e76f5c8d1461018b578163e77145f414610179578163eca067ad14610157575063ee35f3271461012c57600080fd5b3461015357816003193601126101535760065490516001600160a01b039091168152602090f35b5080fd5b90503461017557826003193601126101755760209250549051908152f35b8280fd5b83806003193601126101885780f35b80fd5b90503461017557602036600319011261017557359160015483101561018857506101b6602092610855565b905491519160018060a01b039160031b1c168152f35b50503461015357816003193601126101535760085490516001600160a01b039091168152602090f35b8284346101885760203660031901126101885782359254831015610188575061021f60209261083a565b91905490519160031b1c8152f35b83346101885761023c3661088b565b505061090c565b833461018857806003193601121561090c5780fd5b6108ba565b5050346101535760203660031901126101535760209160ff9060019083906001600160a01b0361028b610870565b1681528086522001541690519015158152f35b50503461015357816003193601126101535760209060ff60085460a01c169051908152f35b50503461015357816003193601126101535760035490516001600160a01b039091168152602090f35b9190503461017557606036600319011261017557610308610870565b506044356001600160401b03808211610359573660238301121561035957818401359081116103595736910160240111610175575162461bcd60e51b8152915081906103559082016108e2565b0390fd5b8480fd5b90503461017557602036600319011261017557356002548110156101755760029092527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace9091015490516001600160a01b039091168152602090f35b919050606036600319011261017557813560ff8116036101755760249283356001600160a01b03811603610188573381528060205260ff60018383200154161561052c5782549282516020810183815283602183015283603583015283603d83015283604583015283606583015260443560858301526085825260c082019160018060401b03928181108482111761051a5786525190208391866104e4575b85519160208301938452868301528582526060820190828210908211176104d257855251902091600160401b8510156104c15750602094506001840190556104b96104a28461083a565b819391549060031b91821b91600019901b19161790565b905551908152f35b60418692634e487b7160e01b835252fd5b634e487b7160e01b8552604184528785fd5b91506000198601868111610508576104fb9061083a565b90549060031b1c91610458565b634e487b7160e01b8552601184528785fd5b634e487b7160e01b8652604185528886fd5b506064926020600e92519362461bcd60e51b85528401528201526d09c9ea8be8ca49e9abe929c849eb60931b6044820152fd5b905034610175576080366003190112610175576024928335926044359180809360075481811415806106d7575b806106ce575b6106b3575050606435600755600554958661067d575b80610645575b508251602081018381528635828601526060808301879052825290608081016001600160401b0381118282101761063357855251902094600160401b87101561062157505060809550600185016005558361060b6104a287610809565b9055815194855260208501528301526060820152f35b634e487b7160e01b8252604190528690fd5b634e487b7160e01b8452604188528984fd5b909350600019810190811161066b5761065d9061083a565b90549060031b1c92386105ae565b634e487b7160e01b8452601185528684fd5b915060001986018681116106a15761069490610809565b90549060031b1c916105a8565b634e487b7160e01b8252601186528782fd5b60449189889287519363e2051feb60e01b8552840152820152fd5b50801515610592565b5081151561058c565b505034610153578060031936011261015357906020916106fe610870565b5051908152f35b5050346101535781600319360112610153576020906007549051908152f35b505034610153576020366003190112610153577f8c1e6003ed33ca6748d4ad3dd4ecc949065c89dceb31fdf546a5289202763c6a906020906001600160a01b0361076c610870565b16908160018060a01b0319600654161760065551908152a180f35b83346101885761079f6107993661088b565b90610943565b80f35b8334610188576020366003190112610188576107bc610870565b5061090c565b905034610175576020366003190112610175573591600554831015610188575061021f602092610809565b8490346101535781600319360112610153576020906005548152f35b60055481101561082457600560005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b60045481101561082457600460005260206000200190600090565b60015481101561082457600160005260206000200190600090565b600435906001600160a01b038216820361088657565b600080fd5b6040906003190112610886576004356001600160a01b0381168103610886579060243580151581036108865790565b34610886576020366003190112610886576004356001600160a01b0381161461090c57600080fd5b60609060208152600f60208201526e1393d517d253541311535153951151608a1b60408201520190565b60405162461bcd60e51b815280610355600482016108e2565b919082549060031b9160018060a01b03809116831b921b1916179055565b9060018060a01b039081831660009281845260209084825260409081862060019560ff8783015416845190877f6675ce8882cb71637de5903a193d218cc0544be9c0650cb83e0955f6aa2bf5218885151594858152a2151514610af95715610a415750508354815192908383016001600160401b03811185821017610a2d57918791849388969552845280840195858752825252852090518155019051151560ff80198354169116179055805491600160401b831015610a1957508181610a1192610a179594019055610855565b90610925565b565b634e487b7160e01b81526041600452602490fd5b634e487b7160e01b88526041600452602488fd5b90919480969750939293549060001991828101908111610ae557610a67610a8291610855565b905485610a748554610855565b92909360031b1c1691610925565b5482610a8d82610855565b90549060031b1c1688528785528588205585548015610ad15787949392910190610ab682610855565b909182549160031b1b19169055855582525282208281550155565b634e487b7160e01b88526031600452602488fd5b634e487b7160e01b89526011600452602489fd5b50505050505050505056fea26469706673582212204d703daecdd6a2b5dbfe785576dea2f7e5f71298d4d45a0de54f09d4b8c655f164736f6c63430008130033";

type BridgeStubConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BridgeStubConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BridgeStub__factory extends ContractFactory {
  constructor(...args: BridgeStubConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BridgeStub> {
    return super.deploy(overrides || {}) as Promise<BridgeStub>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BridgeStub {
    return super.attach(address) as BridgeStub;
  }
  override connect(signer: Signer): BridgeStub__factory {
    return super.connect(signer) as BridgeStub__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeStubInterface {
    return new utils.Interface(_abi) as BridgeStubInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgeStub {
    return new Contract(address, _abi, signerOrProvider) as BridgeStub;
  }
}
