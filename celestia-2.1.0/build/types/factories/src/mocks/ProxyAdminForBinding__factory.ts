/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ProxyAdminForBinding,
  ProxyAdminForBindingInterface,
} from "../../../src/mocks/ProxyAdminForBinding";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "changeProxyAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
    ],
    name: "getProxyAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
    ],
    name: "getProxyImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "upgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x6080806040523461005b5760008054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a361060d90816100618239f35b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c90848263204e1c7a146104465750508063715018a6146103fa5780637eff275e146103785780638da5cb5b146103505780639623609d146102345783816399a88ec4146101a357508063f2fde38b146100e95763f3b7dead1461007f57600080fd5b346100e55760203660031901126100e5576001600160a01b039083908190836100a6610485565b86516303e1469160e61b815291165afa926100bf610568565b93156100e257506100da836020808096518301019101610598565b169051908152f35b80fd5b8280fd5b50346100e55760203660031901126100e557610103610485565b83546001600160a01b039291839161011e908316331461051d565b169283156101515750506000548260018060a01b0319821617600055166000805160206105b8833981519152600080a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b929050346102305780600319360112610230576101be610485565b6101c66104a0565b9060018060a01b0380916101de82885416331461051d565b16803b1561022c5785928360249286519788958694631b2ce7f360e11b865216908401525af190811561022357506102135750f35b61021c906104b6565b6100e25780f35b513d84823e3d90fd5b8580fd5b5050fd5b508290606036600319011261034c5761024b610485565b926102546104a0565b91604435906001600160401b038211610348573660238301121561034857818101359161028083610502565b9261028d855194856104df565b80845236602482840101116103445760249291818892602095869301838801378501015285546001600160a01b039788916102cb908316331461051d565b1696873b156103445784519563278f794360e11b87521690850152826024850152815191826044860152855b8381106103305750505082849581606481858983819884010152601f8019910116810103019134905af190811561022357506102135750f35b8181018301518682016064015282016102f7565b8680fd5b8480fd5b5080fd5b50503461034c578160031936011261034c57905490516001600160a01b039091168152602090f35b5090346100e557806003193601126100e55782610393610485565b61039b6104a0565b82546001600160a01b039283916103b5908316331461051d565b1690813b156103f65783602492865197889586946308f2839760e41b865216908401525af190811561022357506103ea575080f35b6103f3906104b6565b80f35b8380fd5b83346100e257806003193601126100e257805481906001600160a01b0381169061042533831461051d565b6001600160a01b03191682556000805160206105b88339815191528280a380f35b9150913461034c57602036600319011261034c576001600160a01b03928291908461046f610485565b635c60da1b60e01b8352165afa926100bf610568565b600435906001600160a01b038216820361049b57565b600080fd5b602435906001600160a01b038216820361049b57565b6001600160401b0381116104c957604052565b634e487b7160e01b600052604160045260246000fd5b601f909101601f19168101906001600160401b038211908210176104c957604052565b6001600160401b0381116104c957601f01601f191660200190565b1561052457565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b3d15610593573d9061057982610502565b9161058760405193846104df565b82523d6000602084013e565b606090565b9081602091031261049b57516001600160a01b038116810361049b579056fe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a264697066735822122088337578ede4b4c6d6b262f24385a62f61cc6ffc72dc5892c63ee223c50adc7c64736f6c63430008130033";

type ProxyAdminForBindingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProxyAdminForBindingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProxyAdminForBinding__factory extends ContractFactory {
  constructor(...args: ProxyAdminForBindingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ProxyAdminForBinding> {
    return super.deploy(overrides || {}) as Promise<ProxyAdminForBinding>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ProxyAdminForBinding {
    return super.attach(address) as ProxyAdminForBinding;
  }
  override connect(signer: Signer): ProxyAdminForBinding__factory {
    return super.connect(signer) as ProxyAdminForBinding__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProxyAdminForBindingInterface {
    return new utils.Interface(_abi) as ProxyAdminForBindingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProxyAdminForBinding {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ProxyAdminForBinding;
  }
}
