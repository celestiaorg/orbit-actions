/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC20RollupEventInbox,
  ERC20RollupEventInboxInterface,
} from "../../../src/rollup/ERC20RollupEventInbox";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyInit",
    type: "error",
  },
  {
    inputs: [],
    name: "HadZeroInit",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "RollupNotChanged",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "messageNum",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "InboxMessageDelivered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "messageNum",
        type: "uint256",
      },
    ],
    name: "InboxMessageDeliveredFromOrigin",
    type: "event",
  },
  {
    inputs: [],
    name: "bridge",
    outputs: [
      {
        internalType: "contract IBridge",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IBridge",
        name: "_bridge",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rollup",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "chainConfig",
        type: "string",
      },
    ],
    name: "rollupInitialized",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateRollupAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0806040523461002357306080526105eb90816100298239608051816102d10152f35b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c9182636ae71f12146103fb57508163c4d66de8146102a3578163cb23bcb51461027a578163cf8d56d614610086575063e78cea921461005c57600080fd5b34610082578160031936011261008257905490516001600160a01b039091168152602090f35b5080fd5b8383346100825780600319360112610082576024906001600160401b0382358181116101fe57366023820112156101fe57808601359182116101fe57368483830101116101fe576001546001600160a01b03908116330361024a5782156102135760848697869786600b94610131606183518a819b60209e8f9c8d8501988b358a52600160f81b9086015289604186015201848401378101868382015203604181018b520189610558565b82541690875190208289519b8c9788966375d81e2560e01b885287015285015260448401528160648401525af19384156102095785946101d6575b508151928084528151918282860152865b8381106101c357505050908282868383957fff64905f73a67fb594e0f940a8075a860db489ad991e032f48c81123eb52d60b97010152601f80199101168101030190a280f35b818101830151868201860152820161017d565b9093508281813d8311610202575b6101ee8183610558565b810103126101fe5751928561016c565b8480fd5b503d6101e4565b82513d87823e3d90fd5b835162461bcd60e51b815260208189015260128187015271454d5054595f434841494e5f434f4e46494760701b6044820152606490fd5b835162461bcd60e51b8152602081890152600b818701526a04f4e4c595f524f4c4c55560ac1b6044820152606490fd5b50503461008257816003193601126100825760015490516001600160a01b039091168152602090f35b9050346103f75760203660031901126103f7576001600160a01b038135818116939192908490036101fe57827f00000000000000000000000000000000000000000000000000000000000000001630146103a057845493838516610391578015610382576001600160a01b031994851681178655825163cb23bcb560e01b81529160209183919082905afa9182156103795750849161034b575b501690600154161760015580f35b61036c915060203d8111610372575b6103648183610558565b810190610591565b3861033d565b503d61035a565b513d86823e3d90fd5b509051631ad0f74360e01b8152fd5b509051633bcd329760e21b8152fd5b6020608492519162461bcd60e51b8352820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152fd5b8280fd5b92915034610554578360031936011261055457600154638da5cb5b60e01b8085526001600160a01b03808316959294929091602091828187818b5afa90811561054a579084918a9161052d575b501633036104c8575083818389541685519283809263cb23bcb560e01b82525afa9182156104be5788926104a1575b5050168094146104945750506001600160a01b0319161760015580f35b5163d054909f60e01b8152fd5b6104b79250803d10610372576103648183610558565b3880610477565b84513d8a823e3d90fd5b8482959793965084518094819382525afa9283156105235760449693610504575b50505192631194af8760e11b84523390840152166024820152fd5b61051b929350803d10610372576103648183610558565b9038806104e9565b82513d88823e3d90fd5b6105449150843d8611610372576103648183610558565b38610448565b85513d8b823e3d90fd5b8380fd5b601f909101601f19168101906001600160401b0382119082101761057b57604052565b634e487b7160e01b600052604160045260246000fd5b908160209103126105b057516001600160a01b03811681036105b05790565b600080fdfea2646970667358221220037faefa0cd83d4f1ffb3cacf83e467a7b3158fbbf04e7026141f46eb8aa0ed364736f6c63430008130033";

type ERC20RollupEventInboxConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20RollupEventInboxConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20RollupEventInbox__factory extends ContractFactory {
  constructor(...args: ERC20RollupEventInboxConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20RollupEventInbox> {
    return super.deploy(overrides || {}) as Promise<ERC20RollupEventInbox>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC20RollupEventInbox {
    return super.attach(address) as ERC20RollupEventInbox;
  }
  override connect(signer: Signer): ERC20RollupEventInbox__factory {
    return super.connect(signer) as ERC20RollupEventInbox__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20RollupEventInboxInterface {
    return new utils.Interface(_abi) as ERC20RollupEventInboxInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20RollupEventInbox {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC20RollupEventInbox;
  }
}
