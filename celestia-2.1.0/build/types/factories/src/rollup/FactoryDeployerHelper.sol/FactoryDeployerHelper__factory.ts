/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  FactoryDeployerHelper,
  FactoryDeployerHelperInterface,
} from "../../../../src/rollup/FactoryDeployerHelper.sol/FactoryDeployerHelper";

const _abi = [
  {
    inputs: [],
    name: "DEPLOY_HELPER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_FEE_PER_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "inbox",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxFeePerGas",
        type: "uint256",
      },
    ],
    name: "deploy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "inbox",
        type: "address",
      },
    ],
    name: "deploy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610588908161001c8239f35b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c91826313a694a91461048c575081634956eaf0146102a85781634c96a389146100825750636d739b421461005157600080fd5b3461007e578160031936011261007e57602090517390d68b056c411015eae3ec0b98ad94e2c91419f18152f35b5080fd5b919050346102a4578260208060031936011261007e576100a06104aa565b83516373c6754960e11b815290946001600160a01b0380871693909281818481885afa90811561027d57849183918891610287575b5084895180978193631c2eb17b60e31b8352165afa93841561027d57869461024e575b5086519163566be81560e11b835285848401526305f5e100928360248201527390d68b056c411015eae3ec0b98ad94e2c91419f19582826044818a5afa91821561024457899261020f575b5089516323b872dd60e01b815293169982918491829161016691338a8501610530565b03818a8d5af18015610205576101ce575b5050823b156101ca5760649285918751988996879563d7c641e760e01b8752860152602485015260448401525af19081156101c157506101b5575080f35b6101be906104c5565b80f35b513d84823e3d90fd5b8480fd5b81813d83116101fe575b6101e281836104ee565b810103126101fa5751801515036101ca573880610177565b8580fd5b503d6101d8565b88513d89823e3d90fd5b91508282813d831161023d575b61022681836104ee565b8101031261023957905190610166610143565b8880fd5b503d61021c565b8a513d8b823e3d90fd5b61026f919450823d8411610276575b61026781836104ee565b810190610511565b92386100f8565b503d61025d565b87513d88823e3d90fd5b61029e9150823d84116102765761026781836104ee565b386100d5565b8280fd5b919050346102a457806003193601126102a457826102c46104aa565b82516373c6754960e11b8152602435946001600160a01b03928084169290919060209081818481885afa9081156102055786918391899161046f575b50848a5180998193631c2eb17b60e31b8352165afa958615610205578796610450575b5087519463566be81560e11b8652838601528860248601527390d68b056c411015eae3ec0b98ad94e2c91419f1948281604481895afa908115610446579088939291849161040f575b50829161038f918b519586809481936323b872dd60e01b83528b338c8501610530565b03928b165af18015610205576103dc575b5050823b156101ca5784906103c887519889968795869463d7c641e760e01b86528501610530565b03925af19081156101c157506101b5575080f35b81813d8311610408575b6103f081836104ee565b810103126101fa5751801515036101ca5738806103a0565b503d6103e6565b809450838092503d831161043f575b61042881836104ee565b8101031261043b5791518792908261036c565b8780fd5b503d61041e565b89513d8a823e3d90fd5b610468919650823d84116102765761026781836104ee565b9438610323565b6104869150823d84116102765761026781836104ee565b38610300565b84903461007e578160031936011261007e57806305f5e10060209252f35b600435906001600160a01b03821682036104c057565b600080fd5b6001600160401b0381116104d857604052565b634e487b7160e01b600052604160045260246000fd5b601f909101601f19168101906001600160401b038211908210176104d857604052565b908160209103126104c057516001600160a01b03811681036104c05790565b6001600160a01b0391821681529116602082015260408101919091526060019056fea2646970667358221220f091a47410e29c226bc67282ca8de33cf49a94aca55ed6f071f2f936be7806aa64736f6c63430008130033";

type FactoryDeployerHelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FactoryDeployerHelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FactoryDeployerHelper__factory extends ContractFactory {
  constructor(...args: FactoryDeployerHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FactoryDeployerHelper> {
    return super.deploy(overrides || {}) as Promise<FactoryDeployerHelper>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FactoryDeployerHelper {
    return super.attach(address) as FactoryDeployerHelper;
  }
  override connect(signer: Signer): FactoryDeployerHelper__factory {
    return super.connect(signer) as FactoryDeployerHelper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FactoryDeployerHelperInterface {
    return new utils.Interface(_abi) as FactoryDeployerHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FactoryDeployerHelper {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as FactoryDeployerHelper;
  }
}
