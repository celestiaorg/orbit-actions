/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IDeployHelper,
  IDeployHelperInterface,
} from "../../../../src/rollup/FactoryDeployerHelper.sol/IDeployHelper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "inbox",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxFeePerGas",
        type: "uint256",
      },
    ],
    name: "getDeploymentTotalCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_inbox",
        type: "address",
      },
      {
        internalType: "address",
        name: "_nativeToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxFeePerGas",
        type: "uint256",
      },
    ],
    name: "perform",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

export class IDeployHelper__factory {
  static readonly abi = _abi;
  static createInterface(): IDeployHelperInterface {
    return new utils.Interface(_abi) as IDeployHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IDeployHelper {
    return new Contract(address, _abi, signerOrProvider) as IDeployHelper;
  }
}
