/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  RollupUserLogic,
  RollupUserLogicInterface,
} from "../../../../src/rollup/RollupUserLogic.sol/RollupUserLogic";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "nodeNum",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "sendRoot",
        type: "bytes32",
      },
    ],
    name: "NodeConfirmed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "nodeNum",
        type: "uint64",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "parentNodeHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "nodeHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "executionHash",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
            ],
            internalType: "struct ExecutionState",
            name: "beforeState",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
            ],
            internalType: "struct ExecutionState",
            name: "afterState",
            type: "tuple",
          },
          {
            internalType: "uint64",
            name: "numBlocks",
            type: "uint64",
          },
        ],
        indexed: false,
        internalType: "struct Assertion",
        name: "assertion",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "afterInboxBatchAcc",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "wasmModuleRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "inboxMaxCount",
        type: "uint256",
      },
    ],
    name: "NodeCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "nodeNum",
        type: "uint64",
      },
    ],
    name: "NodeRejected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "challengeIndex",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "asserter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "challenger",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "challengedNode",
        type: "uint64",
      },
    ],
    name: "RollupChallengeStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "machineHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    name: "RollupInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "UpgradedSecondary",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "initialBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "finalBalance",
        type: "uint256",
      },
    ],
    name: "UserStakeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "initialBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "finalBalance",
        type: "uint256",
      },
    ],
    name: "UserWithdrawableFundsUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "VALIDATOR_AFK_BLOCKS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_stakerMap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountStaked",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "index",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "latestStakedNode",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "currentChallenge",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "isStaked",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakerAddress",
        type: "address",
      },
    ],
    name: "addToDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "amountStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "anyTrustFastConfirmer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bridge",
    outputs: [
      {
        internalType: "contract IBridge",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "challengeManager",
    outputs: [
      {
        internalType: "contract IChallengeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "challengeIndex",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "winningStaker",
        type: "address",
      },
      {
        internalType: "address",
        name: "losingStaker",
        type: "address",
      },
    ],
    name: "completeChallenge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sendRoot",
        type: "bytes32",
      },
    ],
    name: "confirmNextNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "confirmPeriodBlocks",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "nodeNum",
        type: "uint64",
      },
    ],
    name: "countStakedZombies",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "nodeNum",
        type: "uint64",
      },
    ],
    name: "countZombiesStakedOnChildren",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[2]",
        name: "stakers",
        type: "address[2]",
      },
      {
        internalType: "uint64[2]",
        name: "nodeNums",
        type: "uint64[2]",
      },
      {
        internalType: "enum MachineStatus[2]",
        name: "machineStatuses",
        type: "uint8[2]",
      },
      {
        components: [
          {
            internalType: "bytes32[2]",
            name: "bytes32Vals",
            type: "bytes32[2]",
          },
          {
            internalType: "uint64[2]",
            name: "u64Vals",
            type: "uint64[2]",
          },
        ],
        internalType: "struct GlobalState[2]",
        name: "globalStates",
        type: "tuple[2]",
      },
      {
        internalType: "uint64",
        name: "numBlocks",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "secondExecutionHash",
        type: "bytes32",
      },
      {
        internalType: "uint256[2]",
        name: "proposedBlocks",
        type: "uint256[2]",
      },
      {
        internalType: "bytes32[2]",
        name: "wasmModuleRoots",
        type: "bytes32[2]",
      },
    ],
    name: "createChallenge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "currentChallenge",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRequiredStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "extraChallengeTimeBlocks",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sendRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "nodeHash",
        type: "bytes32",
      },
    ],
    name: "fastConfirmNextNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "firstUnresolvedNode",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "nodeNum",
        type: "uint64",
      },
    ],
    name: "getNode",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "challengeHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "confirmData",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "prevNum",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "deadlineBlock",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "noChildConfirmedBeforeBlock",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "stakerCount",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "childStakerCount",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "firstChildBlock",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "latestChildNumber",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "createdAtBlock",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "nodeHash",
            type: "bytes32",
          },
        ],
        internalType: "struct Node",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "nodeNum",
        type: "uint64",
      },
    ],
    name: "getNodeCreationBlockForLogLookup",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "getStaker",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amountStaked",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "index",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "latestStakedNode",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "currentChallenge",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "isStaked",
            type: "bool",
          },
        ],
        internalType: "struct IRollupCore.Staker",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "stakerNum",
        type: "uint64",
      },
    ],
    name: "getStakerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "inbox",
    outputs: [
      {
        internalType: "contract IInboxBase",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakeToken",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isERC20Enabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "isStaked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "isStakedOnLatestConfirmed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isValidator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "isZombie",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastStakeBlock",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestConfirmed",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestNodeCreated",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "latestStakedNode",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "loserStakeEscrow",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimumAssertionPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "nodeNum",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "nodeHash",
        type: "bytes32",
      },
    ],
    name: "newStakeOnExistingNode",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
            ],
            internalType: "struct ExecutionState",
            name: "beforeState",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
            ],
            internalType: "struct ExecutionState",
            name: "afterState",
            type: "tuple",
          },
          {
            internalType: "uint64",
            name: "numBlocks",
            type: "uint64",
          },
        ],
        internalType: "struct Assertion",
        name: "assertion",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "expectedNodeHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "prevNodeInboxMaxCount",
        type: "uint256",
      },
    ],
    name: "newStakeOnNewNode",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "nodeNum",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "nodeHasStaker",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outbox",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "target",
        type: "uint256",
      },
    ],
    name: "reduceDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakerAddress",
        type: "address",
      },
    ],
    name: "rejectNextNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startIndex",
        type: "uint256",
      },
    ],
    name: "removeOldZombies",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeWhitelistAfterFork",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeWhitelistAfterValidatorAfk",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "zombieNum",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxNodes",
        type: "uint256",
      },
    ],
    name: "removeZombie",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nodeNum",
        type: "uint256",
      },
    ],
    name: "requireUnresolved",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "requireUnresolvedExists",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "firstUnresolvedNodeNum",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "latestCreatedNode",
        type: "uint64",
      },
    ],
    name: "requiredStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakerAddress",
        type: "address",
      },
    ],
    name: "returnOldDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rollupDeploymentBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rollupEventInbox",
    outputs: [
      {
        internalType: "contract IRollupEventInbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sequencerInbox",
    outputs: [
      {
        internalType: "contract ISequencerInbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "nodeNum",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "nodeHash",
        type: "bytes32",
      },
    ],
    name: "stakeOnExistingNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
            ],
            internalType: "struct ExecutionState",
            name: "beforeState",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
            ],
            internalType: "struct ExecutionState",
            name: "afterState",
            type: "tuple",
          },
          {
            internalType: "uint64",
            name: "numBlocks",
            type: "uint64",
          },
        ],
        internalType: "struct Assertion",
        name: "assertion",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "expectedNodeHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "prevNodeInboxMaxCount",
        type: "uint256",
      },
    ],
    name: "stakeOnNewNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakerCount",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalWithdrawableFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "validatorUtils",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "validatorWalletCreator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "validatorWhitelistDisabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wasmModuleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawStakerFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "withdrawableFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "zombieNum",
        type: "uint256",
      },
    ],
    name: "zombieAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "zombieCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "zombieNum",
        type: "uint256",
      },
    ],
    name: "zombieLatestStakedNode",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e0604052620000196200003a60201b62002c441760201c565b15156080523060a0524660c0523480156200003357600080fd5b5062000115565b60408051600481526024810182526020810180516001600160e01b03166302881c7960e11b1790529051600091829182916064916200007a9190620000d7565b600060405180830381855afa9150503d8060008114620000b7576040519150601f19603f3d011682016040523d82523d6000602084013e620000bc565b606091505b5091509150818015620000d0575080516020145b9250505090565b6000825160005b81811015620000fa5760208186018101518583015201620000de565b818111156200010a576000828501525b509190910192915050565b60805160a05160c051615ff56200015a60003960006127c90152600081816113310152818161283801526128ab015260008181612b8c0152614dc50152615ff56000f3fe6080604052600436106103205760003560e01c8063014cc92c14610325578063023a96fe146103625780630357aa491461038257806312ab3d3b146103a457806318baaab9146103ce5780631aeb55a0146103e35780631b1689e9146104035780631e83d30f146104275780632b2af0ab146104475780632e7acfa6146104675780632f30cabd146104945780633e96576e146104ca5780633ed57598146104ea57806345c5b2c71461050a57806345e38b641461051d5780634774e576146105335780634ceccfe5146105465780634d26732d1461055c57806351ed6a301461057157806352d1902d1461059157806354ce8961146105a657806355840a58146105c65780635c617e94146105eb5780635c975abb1461060b5780635eb405d51461062357806361373919146106435780636177fd181461065857806363721d6b1461067857806365f7f80d1461068d57806367425daf146106a257806369fd251c146106b75780636b94c33b146106d75780636d08d0a2146106f75780636ddd3744146107175780636f57644e1461073757806371ef232c146107575780637427be511461076d57806376e7e23b1461078d578063771b2f97146107a35780637ba9534a146107ca5780637e2d2155146107df5780638640ce5f146107ff5780638da5cb5b146108245780638ee1a1261461083957806391c657e81461084f57806392c8134c1461086f5780639a8a05921461089c578063a23c44b1146108b2578063aa38a6e7146109be578063aa65af48146109de578063b0ebedc7146109fe578063bc45e0ae14610a1e578063c2c2e68e14610a3e578063c4d66de814610a53578063cd205fda14610a73578063ce11e6ab14610a88578063ced01cfb14610aa8578063d01e660214610abb578063d735e21d14610adb578063dcd030aa14610af0578063dff6978714610b10578063e78cea9214610b25578063e8bd492214610b45578063edfd03ed14610bda578063ee35f32714610bfa578063ef40a67014610c1a578063f065de3f14610c3a578063f33e1fac14610c5a578063f63a434a14610c7a578063facd743b14610c9a578063fb0e722b14610cca575b600080fd5b34801561033157600080fd5b50606f54610345906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561036e57600080fd5b50606e54610345906001600160a01b031681565b34801561038e57600080fd5b506103a261039d36600461534e565b610cea565b005b3480156103b057600080fd5b50607e546103be9060ff1681565b6040519015158152602001610359565b3480156103da57600080fd5b506103a2610dbd565b3480156103ef57600080fd5b506103a26103fe3660046153a5565b610e37565b34801561040f57600080fd5b50610419607d5481565b604051908152602001610359565b34801561043357600080fd5b506103a26104423660046153d1565b610ff7565b34801561045357600080fd5b506103a26104623660046153d1565b61110f565b34801561047357600080fd5b50606554610487906001600160401b031681565b60405161035991906153f7565b3480156104a057600080fd5b506104196104af36600461540b565b6001600160a01b03166000908152607b602052604090205490565b3480156104d657600080fd5b506104876104e536600461540b565b6111b3565b3480156104f657600080fd5b506103a2610505366004615428565b6111e1565b6103a261051836600461540b565b611279565b34801561052957600080fd5b5061041960735481565b6103a2610541366004615454565b6112e2565b34801561055257600080fd5b5061041961b2fa81565b34801561056857600080fd5b506104196112f6565b34801561057d57600080fd5b50607254610345906001600160a01b031681565b34801561059d57600080fd5b50610419611324565b3480156105b257600080fd5b506103a26105c1366004615454565b6113d5565b3480156105d257600080fd5b50607e546103459061010090046001600160a01b031681565b3480156105f757600080fd5b50610419610606366004615491565b611638565b34801561061757600080fd5b5060335460ff166103be565b34801561062f57600080fd5b506103a261063e3660046154ae565b61168c565b34801561064f57600080fd5b506104196116d8565b34801561066457600080fd5b506103be61067336600461540b565b611863565b34801561068457600080fd5b50607a54610419565b34801561069957600080fd5b5061048761188b565b3480156106ae57600080fd5b506103a261189a565b3480156106c357600080fd5b506104876106d236600461540b565b61191a565b3480156106e357600080fd5b506103a26106f236600461540b565b611948565b34801561070357600080fd5b50610419610712366004615491565b611c76565b34801561072357600080fd5b50610345610732366004615491565b611cf9565b34801561074357600080fd5b506103a26107523660046154e1565b611d32565b34801561076357600080fd5b50610419607c5481565b34801561077957600080fd5b506103a261078836600461540b565b612354565b34801561079957600080fd5b5061041960675481565b3480156107af57600080fd5b5060655461048790600160401b90046001600160401b031681565b3480156107d657600080fd5b506104876124b1565b3480156107eb57600080fd5b506103a26107fa3660046154ae565b6124c7565b34801561080b57600080fd5b50607554600160c01b90046001600160401b0316610487565b34801561083057600080fd5b50610345612621565b34801561084557600080fd5b5061041960685481565b34801561085b57600080fd5b506103be61086a36600461540b565b612630565b34801561087b57600080fd5b5061088f61088a366004615491565b612694565b6040516103599190615581565b3480156108a857600080fd5b5061041960665481565b3480156108be57600080fd5b5061096c6108cd36600461540b565b6040805160a081018252600080825260208201819052918101829052606081018290526080810191909152506001600160a01b0316600090815260796020908152604091829020825160a081018452815481526001909101546001600160401b0380821693830193909352600160401b8104831693820193909352600160801b83049091166060820152600160c01b90910460ff161515608082015290565b6040516103599190815181526020808301516001600160401b03908116918301919091526040808401518216908301526060808401519091169082015260809182015115159181019190915260a00190565b3480156109ca57600080fd5b50606d54610345906001600160a01b031681565b3480156109ea57600080fd5b506103be6109f936600461564f565b61274c565b348015610a0a57600080fd5b50610419610a19366004615688565b612783565b348015610a2a57600080fd5b50607054610345906001600160a01b031681565b348015610a4a57600080fd5b506103a26127a3565b348015610a5f57600080fd5b506103a2610a6e36600461540b565b61282d565b348015610a7f57600080fd5b506103be6129c5565b348015610a9457600080fd5b50606b54610345906001600160a01b031681565b6103a2610ab63660046153a5565b6129d6565b348015610ac757600080fd5b50610345610ad63660046153d1565b6129e9565b348015610ae757600080fd5b506104876129fe565b348015610afc57600080fd5b506103be610b0b36600461540b565b612a14565b348015610b1c57600080fd5b50607854610487565b348015610b3157600080fd5b50606a54610345906001600160a01b031681565b348015610b5157600080fd5b50610ba2610b6036600461540b565b607960205260009081526040902080546001909101546001600160401b0380821691600160401b8104821691600160801b82041690600160c01b900460ff1685565b604080519586526001600160401b0394851660208701529284169285019290925290911660608301521515608082015260a001610359565b348015610be657600080fd5b506103a2610bf53660046153d1565b612a57565b348015610c0657600080fd5b50606c54610345906001600160a01b031681565b348015610c2657600080fd5b50610419610c3536600461540b565b612b36565b348015610c4657600080fd5b50607154610345906001600160a01b031681565b348015610c6657600080fd5b50610487610c753660046153d1565b612b51565b348015610c8657600080fd5b50610419610c95366004615491565b612b88565b348015610ca657600080fd5b506103be610cb536600461540b565b60746020526000908152604090205460ff1681565b348015610cd657600080fd5b50606954610345906001600160a01b031681565b60335460ff1615610d165760405162461bcd60e51b8152600401610d0d906156bf565b60405180910390fd5b606e546001600160a01b03163314610d5f5760405162461bcd60e51b815260206004820152600c60248201526b2ba927a723afa9a2a72222a960a11b6044820152606401610d0d565b610d698282612cdc565b6001600160401b03168314610dae5760405162461bcd60e51b815260206004820152600b60248201526a1393d517d25397d0d2105360aa1b6044820152606401610d0d565b610db88282612daa565b505050565b607e5460ff1615610de05760405162461bcd60e51b8152600401610d0d906156e9565b610de8612e5f565b610e285760405162461bcd60e51b815260206004820152601160248201527056414c494441544f525f4e4f545f41464b60781b6044820152606401610d0d565b607e805460ff19166001179055565b3360009081526074602052604090205460ff1680610e575750607e5460ff165b610e735760405162461bcd60e51b8152600401610d0d90615715565b60335460ff1615610e965760405162461bcd60e51b8152600401610d0d906156bf565b610e9f33612a14565b610ebb5760405162461bcd60e51b8152600401610d0d9061573c565b610ec36129fe565b6001600160401b0316826001600160401b031610158015610efd5750610ee76124b1565b6001600160401b0316826001600160401b031611155b610f415760405162461bcd60e51b81526020600482015260156024820152744e4f44455f4e554d5f4f55545f4f465f52414e474560581b6044820152606401610d0d565b6000610f4c83612f69565b905081816005015414610f8e5760405162461bcd60e51b815260206004820152600a6024820152694e4f44455f52454f524760b01b6044820152606401610d0d565b60038101546001600160401b0316610fa5336111b3565b6001600160401b031614610fed5760405162461bcd60e51b815260206004820152600f60248201526e2727aa2fa9aa20a5a2a22fa82922ab60891b6044820152606401610d0d565b610db83384612f83565b3360009081526074602052604090205460ff16806110175750607e5460ff165b6110335760405162461bcd60e51b8152600401610d0d90615715565b60335460ff1615806110c85750606a546040805163cb23bcb560e01b8152905130926001600160a01b03169163cb23bcb5916004808301926020929190829003018186803b15801561108457600080fd5b505afa158015611098573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110bc9190615760565b6001600160a01b031614155b6110e45760405162461bcd60e51b8152600401610d0d9061577d565b6110ed33612fd3565b60006110f76112f6565b905080821015611105578091505b610db83383613043565b6111176129fe565b6001600160401b03168110156111615760405162461bcd60e51b815260206004820152600f60248201526e1053149150511657d11150d2511151608a1b6044820152606401610d0d565b6111696124b1565b6001600160401b03168111156111b05760405162461bcd60e51b815260206004820152600c60248201526b1113d154d39517d1561254d560a21b6044820152606401610d0d565b50565b6001600160a01b0316600090815260796020526040902060010154600160401b90046001600160401b031690565b607e5461010090046001600160a01b031633146112265760405162461bcd60e51b81526020600482015260036024820152624e464360e81b6044820152606401610d0d565b6112366112316129fe565b612f69565b60050154811461126d5760405162461bcd60e51b81526020600482015260026024820152610ae960f31b6044820152606401610d0d565b610db8838360016130f5565b3360009081526074602052604090205460ff16806112995750607e5460ff165b6112b55760405162461bcd60e51b8152600401610d0d90615715565b60335460ff16156112d85760405162461bcd60e51b8152600401610d0d906156bf565b6111b081346133e0565b6112eb34613452565b610db88383836113d5565b6000806113016129fe565b905061131e43826113106124b1565b6001600160401b0316613574565b91505090565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146113c25760405162461bcd60e51b815260206004820152603b60248201527f555550534e6f745570677261646561626c653a206d757374206e6f742062652060448201527a18d85b1b1959081d1a1c9bdd59da0819195b1959d85d1958d85b1b602a1b6064820152608401610d0d565b50600080516020615fa083398151915290565b3360009081526074602052604090205460ff16806113f55750607e5460ff165b6114115760405162461bcd60e51b8152600401610d0d90615715565b60335460ff16156114345760405162461bcd60e51b8152600401610d0d906156bf565b61143d33612a14565b6114595760405162461bcd60e51b8152600401610d0d9061573c565b6000611464336111b3565b9050600061147182612694565b6101400151611489906001600160401b0316436157be565b90506073548110156114ca5760405162461bcd60e51b815260206004820152600a60248201526954494d455f44454c544160b01b6044820152606401610d0d565b60026114de610140870161012088016157fa565b60038111156114ef576114ef6157d5565b148061151d57508261151161150c36889003880160a08901615916565b6137dc565b6001600160401b031610155b6115555760405162461bcd60e51b81526020600482015260096024820152681513d3d7d4d350531360ba1b6044820152606401610d0d565b600061156961016087016101408801615491565b6001600160401b0316116115b15760405162461bcd60e51b815260206004820152600f60248201526e22a6a82a2cafa0a9a9a2a92a24a7a760891b6044820152606401610d0d565b60016115c360a08701608088016157fa565b60038111156115d4576115d46157d5565b146116135760405162461bcd60e51b815260206004820152600f60248201526e4241445f505245565f53544154555360881b6044820152606401610d0d565b50611620848284866137f1565b506116323361162d6124b1565b612f83565b50505050565b600080611644607a5490565b90506000805b828110156116845761165f856109f9836129e9565b15611672578161166e81615932565b9250505b8061167c81615932565b91505061164a565b509392505050565b3360009081526074602052604090205460ff16806116ac5750607e5460ff165b6116c85760405162461bcd60e51b8152600401610d0d90615715565b6116d4828260006130f5565b5050565b3360009081526074602052604081205460ff16806116f85750607e5460ff165b6117145760405162461bcd60e51b8152600401610d0d90615715565b60335460ff1615806117a95750606a546040805163cb23bcb560e01b8152905130926001600160a01b03169163cb23bcb5916004808301926020929190829003018186803b15801561176557600080fd5b505afa158015611779573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061179d9190615760565b6001600160a01b031614155b6117c55760405162461bcd60e51b8152600401610d0d9061577d565b60006117d033613dce565b604051909150600090339083908381818185875af1925050503d8060008114611815576040519150601f19603f3d011682016040523d82523d6000602084013e61181a565b606091505b505090508061185d5760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b6044820152606401610d0d565b50905090565b6001600160a01b0316600090815260796020526040902060010154600160c01b900460ff1690565b6075546001600160401b031690565b60006118a46129fe565b6001600160401b031690506118b761188b565b6001600160401b0316811180156118de57506118d16124b1565b6001600160401b03168111155b6111b05760405162461bcd60e51b815260206004820152600d60248201526c1393d7d553949154d3d3159151609a1b6044820152606401610d0d565b6001600160a01b0316600090815260796020526040902060010154600160801b90046001600160401b031690565b3360009081526074602052604090205460ff16806119685750607e5460ff165b6119845760405162461bcd60e51b8152600401610d0d90615715565b60335460ff16156119a75760405162461bcd60e51b8152600401610d0d906156bf565b6119af61189a565b60006119b961188b565b905060006119c56129fe565b905060006119d282612f69565b60038101549091506001600160401b0384811691161415611c34576119f684612a14565b611a125760405162461bcd60e51b8152600401610d0d9061573c565b611a2c611a1e856111b3565b6001600160401b031661110f565b611a36828561274c565b15611a765760405162461bcd60e51b815260206004820152601060248201526f14d51052d15117d3d397d5105491d15560821b6044820152606401610d0d565b6040805161018081018252825481526001830154602082015260028301549181019190915260038201546001600160401b038082166060840152600160401b80830482166080850152600160801b808404831660a0860152600160c01b93849004831660c0860152600486015480841660e087015291820483166101008601528104821661012085015291909104166101408201526005820154610160820152611b1f90613e3f565b611bd1611b2b84612f69565b6040805161018081018252825481526001830154602082015260028301549181019190915260038201546001600160401b038082166060840152600160401b80830482166080850152600160801b808404831660a0860152600160c01b93849004831660c0860152600486015480841660e08701529182048316610100860152810482166101208501529190910416610140820152600590910154610160820152613e8e565b611bdb6000612a57565b611be482611638565b6003820154600160c01b90046001600160401b031614611c345760405162461bcd60e51b815260206004820152600b60248201526a4841535f5354414b45525360a81b6044820152606401610d0d565b611c3c613ede565b6040516001600160401b038316907feaffa3d968707ec919a2fc9f31d5ab2b86c905881ff561725d5a82fc95ad464090600090a250505050565b600080611c82607a5490565b90506000805b82811015611684576000611c9b82613f25565b80549091506001600160401b03878116600160a01b9092041614801590611cd357508054611cd39087906001600160a01b031661274c565b15611ce65782611ce281615932565b9350505b5080611cf181615932565b915050611c88565b60006078826001600160401b031681548110611d1757611d1761594d565b6000918252602090912001546001600160a01b031692915050565b3360009081526074602052604090205460ff1680611d525750607e5460ff165b611d6e5760405162461bcd60e51b8152600401610d0d90615715565b60335460ff1615611d915760405162461bcd60e51b8152600401610d0d906156bf565b611da16040880160208901615491565b6001600160401b0316611db76020890189615491565b6001600160401b031610611dfb5760405162461bcd60e51b815260206004820152600b60248201526a2ba927a723afa7a92222a960a91b6044820152606401610d0d565b611e036124b1565b6001600160401b0316611e1c6040890160208a01615491565b6001600160401b03161115611e625760405162461bcd60e51b815260206004820152600c60248201526b1393d517d41493d413d4d15160a21b6044820152606401610d0d565b611e6f6020880188615491565b6001600160401b0316611e8061188b565b6001600160401b031610611eca5760405162461bcd60e51b81526020600482015260116024820152701053149150511657d0d3d3919254935151607a1b6044820152606401610d0d565b6000611ee588825b6020020160208101906112319190615491565b90506000611ef4896001611ed2565b600380820154908401549192506001600160401b03918216911614611f475760405162461bcd60e51b81526020600482015260096024820152682224a3232fa82922ab60b91b6044820152606401610d0d565b611f668a60005b602002016020810190611f61919061540b565b612fd3565b611f718a6001611f4e565b611f98611f8160208b018b615491565b8b60005b6020020160208101906109f9919061540b565b611fd95760405162461bcd60e51b815260206004820152601260248201527114d51052d1548c57d393d517d4d51052d15160721b6044820152606401610d0d565b611ff4611fec60408b0160208c01615491565b8b6001611f85565b6120355760405162461bcd60e51b815260206004820152601260248201527114d51052d1548c97d393d517d4d51052d15160721b6044820152606401610d0d565b6040805180820182526120b6916120a691908b90600290839083908082843760009201829052506040805180820190915292508c9150600290835b8282101561209c5761208d60808302850136819003810190615916565b81526020019060010190612070565b5050505089613f4b565b85358560005b6020020135613ff5565b8260010154146120f55760405162461bcd60e51b815260206004820152600a6024820152694348414c5f484153483160b01b6044820152606401610d0d565b6121068560208601358560016120ac565b8160010154146121455760405162461bcd60e51b815260206004820152600a60248201526921a420a62fa420a9a41960b11b6044820152606401610d0d565b60655460038301546000916001600160401b03600160401b91829004811692612173928935929104166157be565b600385015461218a906001600160401b0316612f69565b600401546121a89190600160401b90046001600160401b0316615963565b6121b29190615963565b905060208501358110156121ed576121e56121d060208d018d61540b565b6121e060408e0160208f0161540b565b612daa565b50505061234a565b600061222d8c8b8b8b89600c6122048d358a6157be565b61220e919061597b565b600c61221e60208f01358b6157be565b612228919061597b565b614033565b90506122af61223f60208e018e61540b565b8d6001602002016020810190612255919061540b565b6001600160a01b03918216600090815260796020526040808220600190810180546001600160401b038916600160801b02600160801b600160c01b0319918216811790925594909516835291200180549091169091179055565b6001600160401b0381167f6db7dc2f507647d135035469b27aa79cea90582779d084a7821d6cd092cbd8736122e760208f018f61540b565b8e60016020020160208101906122fd919061540b565b8e60006020020160208101906123139190615491565b604080516001600160a01b0394851681529390921660208401526001600160401b03169082015260600160405180910390a2505050505b5050505050505050565b3360009081526074602052604090205460ff16806123745750607e5460ff165b6123905760405162461bcd60e51b8152600401610d0d90615715565b60335460ff1615806124255750606a546040805163cb23bcb560e01b8152905130926001600160a01b03169163cb23bcb5916004808301926020929190829003018186803b1580156123e157600080fd5b505afa1580156123f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124199190615760565b6001600160a01b031614155b6124415760405162461bcd60e51b8152600401610d0d9061577d565b61244961188b565b6001600160401b031661245b826111b3565b6001600160401b0316111561249f5760405162461bcd60e51b815260206004820152600a6024820152691513d3d7d49150d1539560b21b6044820152606401610d0d565b6124a881612fd3565b6111b0816140f2565b607554600160801b90046001600160401b031690565b3360009081526074602052604090205460ff16806124e75750607e5460ff165b6125035760405162461bcd60e51b8152600401610d0d90615715565b60335460ff16156125265760405162461bcd60e51b8152600401610d0d906156bf565b607a5482106125685760405162461bcd60e51b815260206004820152600e60248201526d4e4f5f535543485f5a4f4d42494560901b6044820152606401610d0d565b6000612573836129e9565b9050600061258084612b51565b905060008061258d61188b565b6001600160401b031690505b80836001600160401b0316101580156125b157508482105b156125f05760006125c184612f69565b90506125cd84866141a1565b60038101546001600160401b03169350826125e781615932565b93505050612599565b80836001600160401b0316101561260f5761260a866142eb565b612619565b61261986846143b1565b505050505050565b600061262b6143fa565b905090565b6000805b607a5481101561268b57607a81815481106126515761265161594d565b6000918252602090912001546001600160a01b03848116911614156126795750600192915050565b8061268381615932565b915050612634565b50600092915050565b61269c615207565b6126a582612f69565b6040805161018081018252825481526001830154602082015260028301549181019190915260038201546001600160401b038082166060840152600160401b80830482166080850152600160801b808404831660a0860152600160c01b93849004831660c0860152600486015480841660e0870152918204831661010086015281048216610120850152919091041661014082015260059091015461016082015292915050565b6001600160401b03821660009081526077602090815260408083206001600160a01b038516845290915290205460ff165b92915050565b60006127998484846001600160401b0316613574565b90505b9392505050565b607e5460ff16156127c65760405162461bcd60e51b8152600401610d0d906156e9565b467f00000000000000000000000000000000000000000000000000000000000000001415610e285760405162461bcd60e51b815260206004820152601460248201527310d210525397d25117d393d517d0d2105391d15160621b6044820152606401610d0d565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156128a95760405162461bcd60e51b815260206004820152602c6024820152600080516020615f6083398151915260448201526b19195b1959d85d1958d85b1b60a21b6064820152608401610d0d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166128db61442d565b6001600160a01b0316146129345760405162461bcd60e51b815260206004820152602c6024820152600080516020615f6083398151915260448201526b6163746976652070726f787960a01b6064820152608401610d0d565b6001600160a01b0381161561297e5760405162461bcd60e51b815260206004820152601060248201526f1393d7d513d2d15397d0531313d5d15160821b6044820152606401610d0d565b6129866129c5565b156111b05760405162461bcd60e51b815260206004820152600f60248201526e046414345545f4e4f545f455243323608c1b6044820152606401610d0d565b6072546001600160a01b0316151590565b6129df34613452565b6116d48282610e37565b6000607a8281548110611d1757611d1761594d565b607554600160401b90046001600160401b031690565b6001600160a01b038116600090815260796020526040812060010154600160c01b900460ff16801561277d575060755461277d906001600160401b03168361274c565b3360009081526074602052604090205460ff1680612a775750607e5460ff165b612a935760405162461bcd60e51b8152600401610d0d90615715565b60335460ff1615612ab65760405162461bcd60e51b8152600401610d0d906156bf565b6000612ac1607a5490565b90506000612acd61188b565b6001600160401b03169050825b82811015611632575b81612aed82612b51565b6001600160401b03161015612b2457612b05816142eb565b82612b0f8161599a565b935050828110612b1f5750505050565b612ae3565b80612b2e81615932565b915050612ada565b6001600160a01b031660009081526079602052604090205490565b6000607a8281548110612b6657612b6661594d565b600091825260209091200154600160a01b90046001600160401b031692915050565b60007f000000000000000000000000000000000000000000000000000000000000000015612be6576001600160401b0382166000908152607f60205260409020548061277d5760405162461bcd60e51b8152600401610d0d906159b1565b6000612bf183612f69565b6003810154909150600160401b90046001600160401b0316612c255760405162461bcd60e51b8152600401610d0d906159b1565b60040154600160c01b90046001600160401b031692915050565b919050565b60408051600481526024810182526020810180516001600160e01b03166302881c7960e11b179052905160009182918291606491612c8291906159d2565b600060405180830381855afa9150503d8060008114612cbd576040519150601f19603f3d011682016040523d82523d6000602084013e612cc2565b606091505b5091509150818015612cd5575080516020145b9250505090565b6001600160a01b03828116600090815260796020526040808220928416825281206001830154919291600160801b90046001600160401b031680612d4c5760405162461bcd60e51b81526020600482015260076024820152661393d7d0d2105360ca1b6044820152606401610d0d565b60018201546001600160401b03828116600160801b9092041614612da15760405162461bcd60e51b815260206004820152600c60248201526b1112519197d25397d0d2105360a21b6044820152606401610d0d565b95945050505050565b6000612db582612b36565b90506000612dc284612b36565b905080821115612de357612dd68382613043565b612de090836157be565b91505b6000612df0600284615a23565b9050612dfc8582614443565b612e0681846157be565b9250612e39856001600160a01b031660009081526079602052604090206001018054600160801b600160c01b0319169055565b607154612e4f906001600160a01b0316846144a9565b612e588461452f565b5050505050565b600080612e6d6112316124b1565b6040805161018081018252825481526001830154602082015260028301549181019190915260038201546001600160401b038082166060840152600160401b80830482166080850152600160801b808404831660a0860152600160c01b93849004831660c0860152600486015480841660e0870152918204831661010086015281048216610120850152919091041661014082018190526005909201546101608201529150612f1e57600091505090565b606554610140820151439161b2fa91612f40916001600160401b031690615a37565b6001600160401b0316612f539190615963565b1015612f6157600191505090565b600091505090565b6001600160401b0316600090815260766020526040902090565b6001600160a01b0382166000908152607960205260409020612fa582846145d5565b60010180546001600160401b03909216600160401b02600160401b600160801b031990921691909117905550565b612fdc81611863565b612ff85760405162461bcd60e51b8152600401610d0d9061573c565b60006130038261191a565b6001600160401b0316146111b05760405162461bcd60e51b8152602060048201526007602482015266125397d0d2105360ca1b6044820152606401610d0d565b6001600160a01b03821660009081526079602052604081208054808411156130a05760405162461bcd60e51b815260206004820152601060248201526f544f4f5f4c4954544c455f5354414b4560801b6044820152606401610d0d565b60006130ac85836157be565b85845590506130bb86826144a9565b856001600160a01b0316600080516020615f4083398151915283876040516130e4929190615a62565b60405180910390a295945050505050565b60335460ff16156131185760405162461bcd60e51b8152600401610d0d906156bf565b61312061189a565b600061312a6129fe565b9050600061313782612f69565b9050826131e7576040805161018081018252825481526001830154602082015260028301549181019190915260038201546001600160401b038082166060840152600160401b80830482166080850152600160801b808404831660a0860152600160c01b93849004831660c0860152600486015480841660e0870152918204831661010086015281048216610120850152919091041661014082015260058201546101608201526131e790613e3f565b6131ef61188b565b60038201546001600160401b0390811691161461320e5761320e615a70565b6003810154600090613228906001600160401b0316612f69565b9050836132d8576040805161018081018252825481526001830154602082015260028301549181019190915260038201546001600160401b038082166060840152600160401b80830482166080850152600160801b808404831660a0860152600160c01b93849004831660c0860152600486015480841660e0870152918204831661010086015281048216610120850152919091041661014082015260058201546101608201526132d890613e8e565b6132e26000612a57565b60006132ed84611638565b6003840154909150600090829061330c906001600160401b0316611c76565b61331691906157be565b6003850154909150600160c01b90046001600160401b031682106133695760405162461bcd60e51b815260206004820152600a6024820152694e4f5f5354414b45525360b01b6044820152606401610d0d565b6003840154613389908290600160c01b90046001600160401b0316615963565b60048401546001600160401b0316146133d55760405162461bcd60e51b815260206004820152600e60248201526d1393d517d0531317d4d51052d15160921b6044820152606401610d0d565b61234a85898961479a565b3360009081526074602052604090205460ff16806134005750607e5460ff165b61341c5760405162461bcd60e51b8152600401610d0d90615715565b60335460ff161561343f5760405162461bcd60e51b8152600401610d0d906156bf565b61344882612fd3565b6116d48282614443565b3360009081526074602052604090205460ff16806134725750607e5460ff165b61348e5760405162461bcd60e51b8152600401610d0d90615715565b60335460ff16156134b15760405162461bcd60e51b8152600401610d0d906156bf565b6134ba33611863565b156134d75760405162461bcd60e51b8152600401610d0d90615a86565b6134e033612630565b156135205760405162461bcd60e51b815260206004820152601060248201526f5354414b45525f49535f5a4f4d42494560801b6044820152606401610d0d565b6135286112f6565b81101561356a5760405162461bcd60e51b815260206004820152601060248201526f4e4f545f454e4f5547485f5354414b4560801b6044820152606401610d0d565b6111b033826148d8565b600081613582600185615aae565b6001600160401b0316141561359a575060675461279c565b60006135a584612f69565b60030154600160401b90046001600160401b03169050808510156135cd57505060675461279c565b6000604051806101400160405280600162ffffff1681526020016201e05b62ffffff1681526020016201f7d162ffffff1681526020016201389162ffffff168152602001620329e162ffffff1681526020016201be4362ffffff1681526020016204cb8c62ffffff1681526020016201fbc462ffffff16815260200162036d3262ffffff1681526020016202797362ffffff1681525090506000604051806101400160405280600162ffffff1681526020016201c03062ffffff1681526020016201b69962ffffff16815260200161fde262ffffff168152602001620265c662ffffff16815260200162013b8e62ffffff168152602001620329e162ffffff1681526020016201389162ffffff1681526020016201f7d162ffffff1681526020016201537562ffffff1681525090506000838861370a91906157be565b6065549091506000906001600160401b031661372783600a61597b565b6137319190615a23565b90506000613740600a83615a23565b61374b906002615bba565b905060008561375b600a85615bc6565b600a811061376b5761376b61594d565b602002015161377f9062ffffff168361597b565b905060008561378f600a86615bc6565b600a811061379f5761379f61594d565b60200201516137b39062ffffff1683615a23565b9050806137be575060015b806067546137cc919061597b565b9c9b505050505050505050505050565b6020810151600090815b602002015192915050565b60006001613807610140870161012088016157fa565b6003811115613818576138186157d5565b148061384657506002613833610140870161012088016157fa565b6003811115613844576138446157d5565b145b6138855760405162461bcd60e51b815260206004820152601060248201526f4241445f41465445525f53544154555360801b6044820152606401610d0d565b61388d61526b565b61389685612694565b6060820152606a54604080516221048360e21b815290516001600160a01b03909216916284120c91600480820192602092909190829003018186803b1580156138de57600080fd5b505afa1580156138f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139169190615bda565b81526060810151516139288786614a30565b146139675760405162461bcd60e51b815260206004820152600f60248201526e0a0a48aacbea6a882a88abe9082a69608b1b6044820152606401610d0d565b600061397e61150c36899003890160a08a01615916565b9050600061399461150c368a90038a018a615916565b9050806001600160401b0316826001600160401b031610156139ea5760405162461bcd60e51b815260206004820152600f60248201526e494e424f585f4241434b574152445360881b6044820152606401610d0d565b806001600160401b0316826001600160401b03161415613a8d57613a1b613a16368a90038a018a615916565b614a8a565b6001600160401b0316613a39613a16368b90038b0160a08c01615916565b6001600160401b03161015613a8d5760405162461bcd60e51b815260206004820152601a602482015279494e424f585f504f535f494e5f4d53475f4241434b574152445360301b6044820152606401610d0d565b6002613aa16101408a016101208b016157fa565b6003811115613ab257613ab26157d5565b1480613adb57506000613ad0613a16368b90038b0160a08c01615916565b6001600160401b0316115b15613aee5781613aea81615bf3565b9250505b82516001600160401b0383161115613b395760405162461bcd60e51b815260206004820152600e60248201526d12539093d617d41054d517d1539160921b6044820152606401610d0d565b6001600160401b03821615613bd657606a546001600160a01b03166316bf5579613b64600185615aae565b6040518263ffffffff1660e01b8152600401613b8091906153f7565b60206040518083038186803b158015613b9857600080fd5b505afa158015613bac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613bd09190615bda565b60e08401525b50613bf09050613beb36889003880188615c59565b614a99565b6040820152606554613c0b906001600160401b031643615a37565b6001600160401b0390811660c0830152606082015161012001511615801560a0830152613c5257613c4481606001516101200151612f69565b600501546080820152613c62565b6060810151610160015160808201525b613c818160a00151826080015183604001518460e00151606854614b38565b915082821480613c8f575082155b613cd25760405162461bcd60e51b81526020600482015260146024820152730aa9c8ab0a08a86a88a88be9c9e888abe9082a6960631b6044820152606401610d0d565b613d1a613ce68760a0018360000151614a30565b613cf7836040015143606854613ff5565b613d0e613d09368b90038b018b615c59565b614ba5565b888560c0015187614bcf565b60208201526000613d296124b1565b613d34906001615a37565b90506000613d4187612f69565b9050613d4d8183614c23565b613d5a8360200151614c92565b50508181606001516101600151613d6f6124b1565b6001600160401b03167f4f4caa9e67fb994e349dd35d1ad0ce23053d4323f83ce11dc817b5435031d09684604001518a8660e001516068548860000151604051613dbd959493929190615d54565b60405180910390a450949350505050565b6001600160a01b0381166000908152607b60205260408120805490829055607c80548291908490613e009084906157be565b92505081905550826001600160a01b0316600080516020615f80833981519152826000604051613e31929190615a62565b60405180910390a292915050565b80608001516001600160401b03164310156111b05760405162461bcd60e51b815260206004820152600f60248201526e4245464f52455f444541444c494e4560881b6044820152606401610d0d565b8060a001516001600160401b03164310156111b05760405162461bcd60e51b815260206004820152601060248201526f10d212531117d513d3d7d49150d1539560821b6044820152606401610d0d565b60758054600160401b90046001600160401b0316906008613efe83615bf3565b91906101000a8154816001600160401b0302191690836001600160401b0316021790555050565b6000607a8281548110613f3a57613f3a61594d565b906000526020600020019050919050565b60408051600280825260608201835260009283929190602083019080368337019050508551909150613f8d90613f888660005b6020020151614e80565b614ef4565b81600081518110613fa057613fa061594d565b6020908102919091010152613fc18560016020020151613f88866001613f7e565b81600181518110613fd457613fd461594d565b602002602001018181525050612da16000846001600160401b031683615018565b6040805160208101859052908101839052606081018290526000906080015b6040516020818303038152906040528051906020012090509392505050565b606e546000906001600160a01b03166314eab5e7853589898961405960208f018f61540b565b8e600160200201602081019061406f919061540b565b8a8a6040518963ffffffff1660e01b8152600401614094989796959493929190615db6565b602060405180830381600087803b1580156140ae57600080fd5b505af11580156140c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906140e69190615e69565b98975050505050505050565b6001600160a01b03811660009081526079602052604081209061411361188b565b905061411f818461274c565b156141545760018201546001600160401b03828116600160401b909204161461414a5761414a615a70565b61415481846141a1565b815461416084826144a9565b6141698461502f565b836001600160a01b0316600080516020615f40833981519152826000604051614193929190615a62565b60405180910390a250505050565b6001600160401b03821660009081526077602090815260408083206001600160a01b038516845290915290205460ff166141ed5760405162461bcd60e51b8152600401610d0d9061573c565b6001600160401b03821660009081526077602090815260408083206001600160a01b03851684529091528120805460ff1916905561422a83612f69565b600381018054919250600160c01b9091046001600160401b031690601861425083615e86565b91906101000a8154816001600160401b0302191690836001600160401b031602179055505060006001600160401b0316836001600160401b03161115610db85760038101546142a7906001600160401b0316612f69565b60040180546001600160401b03169060006142c183615e86565b91906101000a8154816001600160401b0302191690836001600160401b0316021790555050505050565b607a80546142fb906001906157be565b8154811061430b5761430b61594d565b90600052602060002001607a82815481106143285761432861594d565b600091825260209091208254910180546001600160a01b039092166001600160a01b031983168117825592546001600160e01b0319909216909217600160a01b918290046001600160401b0316909102179055607a80548061438c5761438c615ea9565b600082815260209020810160001990810180546001600160e01b031916905501905550565b80607a83815481106143c5576143c561594d565b9060005260206000200160000160146101000a8154816001600160401b0302191690836001600160401b031602179055505050565b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b546001600160a01b0316919050565b6000600080516020615fa083398151915261441e565b6001600160a01b0382166000908152607960205260408120805490916144698483615963565b8084556040519091506001600160a01b03861690600080516020615f408339815191529061449a9085908590615a62565b60405180910390a25050505050565b6001600160a01b0382166000908152607b6020526040812054906144cd8383615963565b6001600160a01b0385166000908152607b60205260408120829055607c805492935085929091906144ff908490615963565b92505081905550836001600160a01b0316600080516020615f808339815191528383604051614193929190615a62565b6001600160a01b03808216600081815260796020908152604080832081518083019092529381526001808501546001600160401b03600160401b9091048116938301938452607a8054928301815590945290517ff0440771a29e57e18c66727944770b82cc77924aef333c927ce6bdd2cdb3ae0390910180549251909316600160a01b026001600160e01b0319909216941693909317929092179091556116d48261502f565b6001600160401b03821660009081526077602090815260408083206001600160a01b038516845290915290205460ff16156146225760405162461bcd60e51b8152600401610d0d90615a86565b6001600160401b03821660009081526077602090815260408083206001600160a01b03851684529091528120805460ff1916600117905561466283612f69565b6003810154909150600160401b90046001600160401b03166146965760405162461bcd60e51b8152600401610d0d906159b1565b6003810154600160c01b90046001600160401b03166146b6816001615a37565b6003830180546001600160c01b0316600160c01b6001600160401b03938416021790558416156116325760038201546000906146fa906001600160401b0316612f69565b6004810180549192506001600160401b0390911690600061471a83615bf3565b91906101000a8154816001600160401b0302191690836001600160401b0316021790555050816001600160401b031660001415612e5857606554612e589061476b906001600160401b031643615a37565b600383018054600160801b600160c01b031916600160801b6001600160401b0390931692909202919091179055565b60006147a584612f69565b90506147b183836151d4565b8160020154146147f25760405162461bcd60e51b815260206004820152600c60248201526b434f4e4649524d5f4441544160a01b6044820152606401610d0d565b606b54604051630502677360e51b81526001600160a01b039091169063a04cee60906148249085908790600401615a62565b600060405180830381600087803b15801561483e57600080fd5b505af1158015614852573d6000803e3d6000fd5b5050607580546001600160401b0319166001600160401b0388161790555061487d9050846001615a37565b60758054600160401b600160801b031916600160401b6001600160401b0393841602179055604051908516907f22ef0479a7ff660660d1c2fe35f1b632cf31675c2d9378db8cec95b00d8ffa3c906141939086908690615a62565b6078805460018082019092557f8dc6fb69531d98d70dc0420e638d2dfd04e09e1ec783ede9aac77da9c5a0dac4810180546001600160a01b0319166001600160a01b0386169081179091556040805160a0810182528581526001600160401b038085166020808401918252607580548416858701908152600060608701818152608088018c81528a835260798652898320985189559551978c0180549351915196519888166001600160801b031990941693909317600160401b9188169190910217600160801b600160c81b031916600160801b9587169590950260ff60c01b191694909417600160c01b961515870217905580548416835260778252858320878452909152848220805460ff191690981790975586546001600160c01b031643909216909202179094555191929091600080516020615f4083398151915291614a23918690615a62565b60405180910390a2505050565b6000614a49614a4436859003850185615916565b614e80565b82614a5a60a08601608087016157fa565b604051602001614a6c93929190615ebf565b60405160208183030381529060405280519060200120905092915050565b602081015160009060016137e6565b6000614aa36152bc565b82516020015181906003811115614abc57614abc6157d5565b90816003811115614acf57614acf6157d5565b905250602083810151810151908201906003811115614af057614af06157d5565b90816003811115614b0357614b036157d5565b905250614b0e6152da565b835151815260208085015151908201526040840151614b309083908390613f4b565b949350505050565b60008086614b47576000614b4a565b60015b6040516001600160f81b031960f883901b1660208201526021810188905260418101879052606181018690526081810185905290915060a1016040516020818303038152906040528051906020012091505095945050505050565b600061277d614bbb8360200151600001516151f0565b602084015151614bca906151fb565b6151d4565b614bd7615207565b614bdf615207565b96875250602086019490945260408501929092526001600160401b0390811660608501529081166080840181905260a0840152431661014083015261016082015290565b6004820154600160401b90046001600160401b0316614c6357600482018054600160401b600160801b031916600160401b436001600160401b0316021790555b600490910180546001600160401b03909216600160801b02600160801b600160c01b0319909216919091179055565b60758054600160801b90046001600160401b0316906010614cb283615bf3565b825461010092830a6001600160401b03818102199092169282160291909117909255607554600160801b908190048316600090815260766020908152604091829020875181559087015160018201559086015160028201556060860151600382018054608089015160a08a015160c08b01519489166001600160801b031993841617600160401b928a168302176001600160801b03908116918a1688026001600160c01b0390811692909217600160c01b968b1687021790945560e08b0151600487018054998d01516101208e01516101408f0151938d169b9096169a909a17998b16909302989098179093169188169095029091161793909416909302919091179055610160830151600590910155507f0000000000000000000000000000000000000000000000000000000000000000156111b05760646001600160a01b031663a3b1b31d6040518163ffffffff1660e01b815260040160206040518083038186803b158015614e2357600080fd5b505afa158015614e37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614e5b9190615bda565b607554600160801b90046001600160401b03166000908152607f602052604090205550565b8051805160209182015192820151805190830151604080516c23b637b130b61039ba30ba329d60991b81870152602d810194909452604d8401959095526001600160c01b031960c092831b8116606d850152911b1660758201528251808203605d018152607d909101909252815191012090565b60006001836003811115614f0a57614f0a6157d5565b1415614f50576040516b213637b1b59039ba30ba329d60a11b6020820152602c8101839052604c015b60405160208183030381529060405280519060200120905061277d565b6002836003811115614f6457614f646157d5565b1415614f9a5760405174213637b1b59039ba30ba32961032b93937b932b21d60591b602082015260358101839052605501614f33565b6003836003811115614fae57614fae6157d5565b1415614fdd5760405174213637b1b59039ba30ba3296103a37b7903330b91d60591b6020820152603501614f33565b60405162461bcd60e51b815260206004820152601060248201526f4241445f424c4f434b5f53544154555360801b6044820152606401610d0d565b600083838360405160200161401493929190615efd565b6001600160a01b03811660009081526079602052604090206001810154600160c01b900460ff166150725760405162461bcd60e51b8152600401610d0d9061573c565b600180820154607880546001600160401b0390921692909161509491906157be565b815481106150a4576150a461594d565b600091825260209091200154607880546001600160a01b03909216916001600160401b0384169081106150d9576150d961594d565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555080607960006078846001600160401b0316815481106151285761512861594d565b6000918252602080832091909101546001600160a01b03168352820192909252604001902060010180546001600160401b0319166001600160401b0392909216919091179055607880548061517f5761517f615ea9565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b03949094168152607990935250506040812090815560010180546001600160c81b0319169055565b6040805160208101849052908101829052600090606001614a6c565b8051600090816137e6565b805160009060016137e6565b6040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081019190915290565b60405180610100016040528060008152602001615286615207565b81526000602082015260400161529a615207565b8152600060208201819052604082018190526060820181905260809091015290565b60405180604001604052806002906020820280368337509192915050565b60405180604001604052806002905b6152f1615307565b8152602001906001900390816152e95790505090565b604051806040016040528061531a6152bc565b81526020016153276152bc565b905290565b6001600160a01b03169052565b6001600160a01b03811681146111b057600080fd5b60008060006060848603121561536357600080fd5b83359250602084013561537581615339565b9150604084013561538581615339565b809150509250925092565b6001600160401b03811681146111b057600080fd5b600080604083850312156153b857600080fd5b82356153c381615390565b946020939093013593505050565b6000602082840312156153e357600080fd5b5035919050565b6001600160401b03169052565b6001600160401b0391909116815260200190565b60006020828403121561541d57600080fd5b813561279c81615339565b60008060006060848603121561543d57600080fd5b505081359360208301359350604090920135919050565b60008060008385036101a081121561546b57600080fd5b6101608082121561547b57600080fd5b9496948701359550505061018085013592915050565b6000602082840312156154a357600080fd5b813561279c81615390565b600080604083850312156154c157600080fd5b50508035926020909101359150565b806040810183101561277d57600080fd5b600080600080600080600080610280898b0312156154fe57600080fd5b6155088a8a6154d0565b97506155178a60408b016154d0565b96506155268a60808b016154d0565b95506101c089018a81111561553a57600080fd5b60c08a0195503561554a81615390565b93506101e089013592506155628a6102008b016154d0565b91506155728a6102408b016154d0565b90509295985092959890939650565b60006101808201905082518252602083015160208301526040830151604083015260608301516155b460608401826153ea565b5060808301516155c760808401826153ea565b5060a08301516155da60a08401826153ea565b5060c08301516155ed60c08401826153ea565b5060e083015161560060e08401826153ea565b5061010080840151615614828501826153ea565b505061012080840151615629828501826153ea565b50506101408084015161563e828501826153ea565b505061016092830151919092015290565b6000806040838503121561566257600080fd5b823561566d81615390565b9150602083013561567d81615339565b809150509250929050565b60008060006060848603121561569d57600080fd5b8335925060208401356156af81615390565b9150604084013561538581615390565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b60208082526012908201527115d2125511531254d517d11254d05093115160721b604082015260600190565b6020808252600d908201526c2727aa2fab20a624a220aa27a960991b604082015260600190565b6020808252600a90820152691393d517d4d51052d15160b21b604082015260600190565b60006020828403121561577257600080fd5b815161279c81615339565b6020808252601190820152705041555345445f414e445f41435449564560781b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000828210156157d0576157d06157a8565b500390565b634e487b7160e01b600052602160045260246000fd5b803560048110612c3f57600080fd5b60006020828403121561580c57600080fd5b61279c826157eb565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b038111828210171561584d5761584d615815565b60405290565b60006080828403121561586557600080fd5b61586d61582b565b905082601f83011261587e57600080fd5b61588661582b565b80604084018581111561589857600080fd5b845b818110156158b257803584526020938401930161589a565b5081845285605f8601126158c557600080fd5b6158cd61582b565b925082915060808501868111156158e357600080fd5b808210156159085781356158f681615390565b845260209384019391909101906158e3565b505060208301525092915050565b60006080828403121561592857600080fd5b61279c8383615853565b6000600019821415615946576159466157a8565b5060010190565b634e487b7160e01b600052603260045260246000fd5b60008219821115615976576159766157a8565b500190565b6000816000190483118215151615615995576159956157a8565b500290565b6000816159a9576159a96157a8565b506000190190565b6020808252600790820152664e4f5f4e4f444560c81b604082015260600190565b6000825160005b818110156159f357602081860181015185830152016159d9565b81811115615a02576000828501525b509190910192915050565b634e487b7160e01b600052601260045260246000fd5b600082615a3257615a32615a0d565b500490565b60006001600160401b03828116848216808303821115615a5957615a596157a8565b01949350505050565b918252602082015260400190565b634e487b7160e01b600052600160045260246000fd5b6020808252600e908201526d1053149150511657d4d51052d15160921b604082015260600190565b60006001600160401b0383811690831681811015615ace57615ace6157a8565b039392505050565b600181815b80851115615b11578160001904821115615af757615af76157a8565b80851615615b0457918102915b93841c9390800290615adb565b509250929050565b600082615b285750600161277d565b81615b355750600061277d565b8160018114615b4b5760028114615b5557615b71565b600191505061277d565b60ff841115615b6657615b666157a8565b50506001821b61277d565b5060208310610133831016604e8410600b8410161715615b94575081810a61277d565b615b9e8383615ad6565b8060001904821115615bb257615bb26157a8565b029392505050565b600061279c8383615b19565b600082615bd557615bd5615a0d565b500690565b600060208284031215615bec57600080fd5b5051919050565b60006001600160401b0382811680821415615c1057615c106157a8565b6001019392505050565b600060a08284031215615c2c57600080fd5b615c3461582b565b9050615c408383615853565b8152615c4e608083016157eb565b602082015292915050565b60006101608284031215615c6c57600080fd5b604051606081016001600160401b0381118282101715615c8e57615c8e615815565b604052615c9b8484615c1a565b8152615caa8460a08501615c1a565b6020820152610140830135615cbe81615390565b60408201529392505050565b604081833760006040838101828152908301915b6002811015612e58578235615cf281615390565b6001600160401b0316825260209283019290910190600101615cde565b60048110615d2d57634e487b7160e01b600052602160045260246000fd5b9052565b615d3b8282615cca565b615d47608082016157eb565b610db86080840182615d0f565b8581526101e08101615d696020830187615d31565b615d7960c0830160a08801615d31565b610140860135615d8881615390565b6001600160401b03166101608301526101808201949094526101a08101929092526101c09091015292915050565b888152610200810160208083018a60005b6002811015615df257615de283615ddd846157eb565b615d0f565b9183019190830190600101615dc7565b50505050606082018860005b6002811015615e2457615e118383615cca565b6080928301929190910190600101615dfe565b505050615e356101608301886153ea565b615e4361018083018761532c565b615e516101a083018661532c565b6101c08201939093526101e001529695505050505050565b600060208284031215615e7b57600080fd5b815161279c81615390565b60006001600160401b03821680615e9f57615e9f6157a8565b6000190192915050565b634e487b7160e01b600052603160045260246000fd5b838152826020820152600060048310615ee857634e487b7160e01b600052602160045260246000fd5b5060f89190911b604082015260410192915050565b83815260006020848184015260408301845182860160005b82811015615f3157815184529284019290840190600101615f15565b50919897505050505050505056feebd093d389ab57f3566918d2c379a2b4d9539e8eb95efad9d5e465457833fde646756e6374696f6e206d7573742062652063616c6c6564207468726f75676820a740af14c56e4e04a617b1de1eb20de73270decbaaead14f142aabf3038e5ae22b1dbce74324248c222f0ec2d5ed7bd323cfc425b336f0253c5ccfda7265546da26469706673582212206b22681a0f302411de8a0350cea20a4422f748fd0e05230e6083a1dad05fcbf264736f6c63430008090033";

type RollupUserLogicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RollupUserLogicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RollupUserLogic__factory extends ContractFactory {
  constructor(...args: RollupUserLogicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RollupUserLogic> {
    return super.deploy(overrides || {}) as Promise<RollupUserLogic>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RollupUserLogic {
    return super.attach(address) as RollupUserLogic;
  }
  override connect(signer: Signer): RollupUserLogic__factory {
    return super.connect(signer) as RollupUserLogic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RollupUserLogicInterface {
    return new utils.Interface(_abi) as RollupUserLogicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RollupUserLogic {
    return new Contract(address, _abi, signerOrProvider) as RollupUserLogic;
  }
}
