/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  RollupAdminLogic,
  RollupAdminLogicInterface,
} from "../../../src/rollup/RollupAdminLogic";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "nodeNum",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "sendRoot",
        type: "bytes32",
      },
    ],
    name: "NodeConfirmed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "nodeNum",
        type: "uint64",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "parentNodeHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "nodeHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "executionHash",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
            ],
            internalType: "struct ExecutionState",
            name: "beforeState",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
            ],
            internalType: "struct ExecutionState",
            name: "afterState",
            type: "tuple",
          },
          {
            internalType: "uint64",
            name: "numBlocks",
            type: "uint64",
          },
        ],
        indexed: false,
        internalType: "struct Assertion",
        name: "assertion",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "afterInboxBatchAcc",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "wasmModuleRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "inboxMaxCount",
        type: "uint256",
      },
    ],
    name: "NodeCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "nodeNum",
        type: "uint64",
      },
    ],
    name: "NodeRejected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "OwnerFunctionCalled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "challengeIndex",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "asserter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "challenger",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "challengedNode",
        type: "uint64",
      },
    ],
    name: "RollupChallengeStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "machineHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    name: "RollupInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "UpgradedSecondary",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "initialBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "finalBalance",
        type: "uint256",
      },
    ],
    name: "UserStakeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "initialBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "finalBalance",
        type: "uint256",
      },
    ],
    name: "UserWithdrawableFundsUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_stakerMap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountStaked",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "index",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "latestStakedNode",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "currentChallenge",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "isStaked",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "amountStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "anyTrustFastConfirmer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bridge",
    outputs: [
      {
        internalType: "contract IBridge",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "challengeManager",
    outputs: [
      {
        internalType: "contract IChallengeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "confirmPeriodBlocks",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
            ],
            internalType: "struct ExecutionState",
            name: "beforeState",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
            ],
            internalType: "struct ExecutionState",
            name: "afterState",
            type: "tuple",
          },
          {
            internalType: "uint64",
            name: "numBlocks",
            type: "uint64",
          },
        ],
        internalType: "struct Assertion",
        name: "assertion",
        type: "tuple",
      },
    ],
    name: "createNitroMigrationGenesis",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "currentChallenge",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "extraChallengeTimeBlocks",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "firstUnresolvedNode",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "nodeNum",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sendRoot",
        type: "bytes32",
      },
    ],
    name: "forceConfirmNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "prevNode",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "prevNodeInboxMaxCount",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
            ],
            internalType: "struct ExecutionState",
            name: "beforeState",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
            ],
            internalType: "struct ExecutionState",
            name: "afterState",
            type: "tuple",
          },
          {
            internalType: "uint64",
            name: "numBlocks",
            type: "uint64",
          },
        ],
        internalType: "struct Assertion",
        name: "assertion",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "expectedNodeHash",
        type: "bytes32",
      },
    ],
    name: "forceCreateNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "staker",
        type: "address[]",
      },
    ],
    name: "forceRefundStaker",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "stakerA",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "stakerB",
        type: "address[]",
      },
    ],
    name: "forceResolveChallenge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "nodeNum",
        type: "uint64",
      },
    ],
    name: "getNode",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "challengeHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "confirmData",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "prevNum",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "deadlineBlock",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "noChildConfirmedBeforeBlock",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "stakerCount",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "childStakerCount",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "firstChildBlock",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "latestChildNumber",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "createdAtBlock",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "nodeHash",
            type: "bytes32",
          },
        ],
        internalType: "struct Node",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "nodeNum",
        type: "uint64",
      },
    ],
    name: "getNodeCreationBlockForLogLookup",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "getStaker",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amountStaked",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "index",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "latestStakedNode",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "currentChallenge",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "isStaked",
            type: "bool",
          },
        ],
        internalType: "struct IRollupCore.Staker",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "stakerNum",
        type: "uint64",
      },
    ],
    name: "getStakerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "inbox",
    outputs: [
      {
        internalType: "contract IInboxBase",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "confirmPeriodBlocks",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "extraChallengeTimeBlocks",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "stakeToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "baseStake",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "wasmModuleRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "loserStakeEscrow",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "chainConfig",
            type: "string",
          },
          {
            internalType: "uint64",
            name: "genesisBlockNum",
            type: "uint64",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "delayBlocks",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "futureBlocks",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "delaySeconds",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "futureSeconds",
                type: "uint256",
              },
            ],
            internalType: "struct ISequencerInbox.MaxTimeVariation",
            name: "sequencerInboxMaxTimeVariation",
            type: "tuple",
          },
        ],
        internalType: "struct Config",
        name: "config",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "contract IBridge",
            name: "bridge",
            type: "address",
          },
          {
            internalType: "contract ISequencerInbox",
            name: "sequencerInbox",
            type: "address",
          },
          {
            internalType: "contract IInboxBase",
            name: "inbox",
            type: "address",
          },
          {
            internalType: "contract IOutbox",
            name: "outbox",
            type: "address",
          },
          {
            internalType: "contract IRollupEventInbox",
            name: "rollupEventInbox",
            type: "address",
          },
          {
            internalType: "contract IChallengeManager",
            name: "challengeManager",
            type: "address",
          },
          {
            internalType: "address",
            name: "rollupAdminLogic",
            type: "address",
          },
          {
            internalType: "contract IRollupUser",
            name: "rollupUserLogic",
            type: "address",
          },
          {
            internalType: "address",
            name: "validatorUtils",
            type: "address",
          },
          {
            internalType: "address",
            name: "validatorWalletCreator",
            type: "address",
          },
        ],
        internalType: "struct ContractDependencies",
        name: "connectedContracts",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "isStaked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "isStakedOnLatestConfirmed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isValidator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "isZombie",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastStakeBlock",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestConfirmed",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestNodeCreated",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "latestStakedNode",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "loserStakeEscrow",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimumAssertionPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "nodeNum",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "nodeHasStaker",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outbox",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_outbox",
        type: "address",
      },
    ],
    name: "removeOldOutbox",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "resume",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rollupDeploymentBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rollupEventInbox",
    outputs: [
      {
        internalType: "contract IRollupEventInbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sequencerInbox",
    outputs: [
      {
        internalType: "contract ISequencerInbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_anyTrustFastConfirmer",
        type: "address",
      },
    ],
    name: "setAnyTrustFastConfirmer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newBaseStake",
        type: "uint256",
      },
    ],
    name: "setBaseStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "newConfirmPeriod",
        type: "uint64",
      },
    ],
    name: "setConfirmPeriodBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_inbox",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_enabled",
        type: "bool",
      },
    ],
    name: "setDelayedInbox",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "newExtraTimeBlocks",
        type: "uint64",
      },
    ],
    name: "setExtraChallengeTimeBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IInboxBase",
        name: "newInbox",
        type: "address",
      },
    ],
    name: "setInbox",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newLoserStakerEscrow",
        type: "address",
      },
    ],
    name: "setLoserStakeEscrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newPeriod",
        type: "uint256",
      },
    ],
    name: "setMinimumAssertionPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IOutbox",
        name: "_outbox",
        type: "address",
      },
    ],
    name: "setOutbox",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sequencerInbox",
        type: "address",
      },
    ],
    name: "setSequencerInbox",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newStakeToken",
        type: "address",
      },
    ],
    name: "setStakeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_validator",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "_val",
        type: "bool[]",
      },
    ],
    name: "setValidator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_validatorWhitelistDisabled",
        type: "bool",
      },
    ],
    name: "setValidatorWhitelistDisabled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "newWasmModuleRoot",
        type: "bytes32",
      },
    ],
    name: "setWasmModuleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakerCount",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalWithdrawableFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beacon",
        type: "address",
      },
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeBeacon",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeSecondaryTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeSecondaryToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "validatorUtils",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "validatorWalletCreator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "validatorWhitelistDisabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wasmModuleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "withdrawableFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "zombieNum",
        type: "uint256",
      },
    ],
    name: "zombieAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "zombieCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "zombieNum",
        type: "uint256",
      },
    ],
    name: "zombieLatestStakedNode",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c03462000138576302881c7960e11b60208201908152600482526001600160401b039160408101838111828210176200012257604052600080928192519060645afa913d1562000118573d818111620001045760405191601f8201601f19908116603f0116830190811183821017620000f0576040528152809160203d92013e5b81620000e3575b506080523060a05260405161585e90816200013e8239608051818181613c8601528181613f350152615135015260a0518181816106f5015281816109d801528181610d110152818161117b015281816113270152611c8e0152f35b6020915051143862000088565b634e487b7160e01b84526041600452602484fd5b634e487b7160e01b83526041600452602483fd5b5050606062000081565b634e487b7160e01b600052604160045260246000fd5b600080fdfe6080604052600436101561001257600080fd5b60003560e01c8063014cc92c146104a7578063023a96fe146104a25780630397d4581461049d578063046f7da21461049857806306ae5851146104935780630d40a0fd1461048e5780630d561b371461048957806312ab3d3b1461048457806313af40351461047f5780631b1689e91461047a57806328ff127a146104755780632e7acfa6146104705780632f30cabd1461046b5780632f7968e8146104665780633659cfe6146104615780633e96576e1461045c57806345e38b6414610457578063470dce4e1461045257806347fb24c51461044d5780634f1ef286146104485780634f61f8501461044357806351ed6a301461043e57806352d1902d1461043957806353b60c4a1461043457806355840a581461042f578063567ca41b1461042a5780635c975abb146104255780636136fe2e146104205780636177fd181461041b57806363721d6b1461041657806365f7f80d1461041157806369fd251c1461040c5780636ddd37441461040757806371ef232c1461040257806376e7e23b146103fd578063771b2f97146103f85780637b83a3fe146103f35780637ba9534a146103ee5780637c75c298146103e95780638456cb59146103e4578063848bf918146103df5780638640ce5f146103da57806389384960146103d55780638ee1a126146103d057806391c657e8146103cb57806392c8134c146103c6578063948d6588146103c15780639846129a146103bc5780639a8a0592146103b7578063a23c44b1146103b2578063a2b4f1d8146103ad578063a3ffb772146103a8578063aa38a6e7146103a3578063aa65af481461039e578063bc45e0ae14610399578063ce11e6ab14610394578063ce66d05c1461038f578063d01e66021461038a578063d735e21d14610385578063dcd030aa14610380578063dff697871461037b578063e78cea9214610376578063e8bd492214610371578063ee35f3271461036c578063ef40a67014610367578063f065de3f14610362578063f33e1fac1461035d578063f38c937914610358578063f63a434a14610353578063facd743b1461034e578063fb0e722b14610349578063fc8ffa03146103445763ff204f3b1461033f57600080fd5b612655565b6125b4565b61258b565b612549565b61251a565b6123d0565b612383565b61235a565b61231d565b6122f4565b612280565b612231565b612208565b61217c565b612151565b612108565b612073565b61204a565b612021565b611fc9565b611fa0565b611efc565b611e6e565b611d7f565b611d61565b611c78565b611c4a565b611b66565b611b35565b611b17565b611ae9565b611ac8565b611a38565b611997565b61189c565b61183f565b61173d565b611712565b6116f4565b6116d6565b61167f565b611634565b61160b565b6115ed565b6115a5565b611543565b611520565b611459565b61142c565b6113d8565b611314565b6112eb565b611263565b611168565b610f54565b610e97565b610e55565b610e07565b610cea565b610b97565b610b49565b610b20565b61098c565b61096e565b610881565b61085e565b610805565b6106cb565b61069d565b610631565b61052b565b6104f1565b6104c8565b60009103126104b757565b600080fd5b6001600160a01b031690565b346104b75760003660031901126104b757606f546040516001600160a01b039091168152602090f35b346104b75760003660031901126104b757606e546040516001600160a01b039091168152602090f35b6001600160a01b038116036104b757565b346104b75760203660031901126104b7576004356105488161051a565b61055660ff60335416613680565b6040516366902fed60e11b815290602082600481305afa91821561062c576105e792610599916000916105fe575b5015156001600160a01b03831615151461379d565b6078546105b9906001600160401b03906105b290610af4565b16156137e1565b6105c5607c5415613821565b607280546001600160a01b0319166001600160a01b0392909216919091179055565b600d600080516020615749833981519152600080a2005b61061f915060203d8111610625575b6106178183611094565b810190613788565b38610584565b503d61060d565b6127dc565b346104b75760008060031936011261069a5760335461065260ff8216613680565b60ff19166033557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a160046000805160206157498339815191528280a280f35b80fd5b346104b75760203660031901126104b757600435606755600c600080516020615749833981519152600080a2005b346104b75760203660031901126104b7576004356106e88161051a565b6001600160a01b0361073a7f0000000000000000000000000000000000000000000000000000000000000000821661072230821415612707565b82600080516020615729833981519152541614612756565b6107426127a5565b9061075c6000805160206156698339815191525460ff1690565b1561076e57505061076c90612be7565b005b916020600493604051948580926352d1902d60e01b825285165afa600093816107d5575b506107b45760405162461bcd60e51b8152806107b060048201612b8e565b0390fd5b6107d06000805160206157e983398151915261076c9414612b26565b612c81565b6107f791945060203d81116107fe575b6107ef8183611094565b8101906127cd565b9238610792565b503d6107e5565b346104b75760203660031901126104b7576004356108228161051a565b607e8054610100600160a81b03191660089290921b610100600160a81b0316919091179055601f600080516020615749833981519152600080a2005b346104b75760003660031901126104b757602060ff607e54166040519015158152f35b346104b75760203660031901126104b75760043561089e8161051a565b6000805160206156c98339815191528054604080516001600160a01b0380841682529094166020850181905292937f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f9190a1811561091a576001600160a01b0319161790556007600080516020615749833981519152600080a2005b60405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b346104b75760003660031901126104b7576020607d54604051908152f35b346104b757600319610160368201126104b757600435906001600160401b0382116104b7576101c09082360301126104b7576101403660231901126104b757610a1d6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811690610a0630831415612707565b600080516020615729833981519152541614612756565b60005460ff8160081c169081600014610aeb5750303b155b15610a8f57610a4e90159182610a64575b600401612ec0565b610a5457005b61076c61ff001960005416600055565b610a7861010061ff00196000541617600055565b610a8a600160ff196000541617600055565b610a46565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b60ff1615610a35565b6001600160401b031690565b6001600160401b03169052565b6001600160401b03909116815260200190565b346104b75760003660031901126104b7576065546040516001600160401b039091168152602090f35b346104b75760203660031901126104b757600435610b668161051a565b60018060a01b0316600052607b6020526020604060002054604051908152f35b6001600160401b038116036104b757565b346104b75760603660031901126104b757600435610bb481610b86565b602435604435610bc860ff60335416613680565b610be86002610bd685613c34565b0154610be28385615520565b1461402f565b606b54610bfd906001600160a01b03166104bc565b90813b156104b757604051630502677360e51b8152600094909285908490818381610c2c8a8960048401612eaf565b03925af192831561062c576000805160206157c983398151915293610cd1575b50607580546001600160401b0319166001600160401b038316179055610c9f610c7482613e9f565b60758054600160401b600160801b03191660409290921b600160401b600160801b0316919091179055565b610cb760405192839260018060401b03169583612eaf565b0390a260186000805160206157498339815191528280a280f35b80610cde610ce492611010565b806104ac565b38610c4c565b346104b75760203660031901126104b757600435610d078161051a565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169190610d4030841415612707565b610d5d600080516020615729833981519152938285541614612756565b610d656127a5565b90610d7f6000805160206156898339815191525460ff1690565b15610d9057505061076c9150612895565b6020600491604094939451928380926352d1902d60e01b825286165afa60009181610de7575b50610dd45760405162461bcd60e51b8152806107b060048201612846565b61076c93610de291146127e8565b612925565b610e0091925060203d81116107fe576107ef8183611094565b9038610db6565b346104b75760203660031901126104b757600435610e248161051a565b6001600160a01b0316600090815260796020908152604091829020600101548251921c6001600160401b0316825290f35b346104b75760003660031901126104b7576020607354604051908152f35b6101609060431901126104b757604490565b6101609060031901126104b757600490565b346104b7576101c03660031901126104b757600435610eb581610b86565b610ebe36610e73565b90610ecd60ff60335416613680565b6075546001600160401b0390811690821603610f0d57610ef5916101a4359160243591614cd0565b506017600080516020615749833981519152600080a2005b60405162461bcd60e51b815260206004820152601560248201527413d3931657d310551154d517d0d3d3919254935151605a1b6044820152606490fd5b801515036104b757565b346104b7576000604036600319011261069a57600435610f738161051a565b81602435610f8081610f4a565b606a546001600160a01b0316803b15610ff6576040516347fb24c560e01b81526001600160a01b0394909416600485015290151560248401528290604490829084905af1801561062c57610fe7575b5060026000805160206157498339815191528280a280f35b610ff090611010565b38610fcf565b8280fd5b634e487b7160e01b600052604160045260246000fd5b6001600160401b03811161102357604052565b610ffa565b60a081019081106001600160401b0382111761102357604052565b604081019081106001600160401b0382111761102357604052565b606081019081106001600160401b0382111761102357604052565b608081019081106001600160401b0382111761102357604052565b601f909101601f19168101906001600160401b0382119082101761102357604052565b6040519061018082016001600160401b0381118382101761102357604052565b6001600160401b03811161102357601f01601f191660200190565b9060406003198301126104b75760043561110b8161051a565b916024356001600160401b0381116104b757816023820112156104b757806004013590611137826110d7565b926111456040519485611094565b828452602483830101116104b75781600092602460209301838601378301015290565b611171366110f2565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169291906111ab30851415612707565b6111c8600080516020615729833981519152948286541614612756565b6000805160206156898339815191525460ff16156111ec57505061076c9150612895565b6020600491604094939451928380926352d1902d60e01b825286165afa60009181611243575b506112305760405162461bcd60e51b8152806107b060048201612846565b61076c9361123e91146127e8565b61297b565b61125c91925060203d81116107fe576107ef8183611094565b9038611212565b346104b7576000602036600319011261069a576004356112828161051a565b606a546001600160a01b0390811691839190833b15610ff6576024908360405195869485936304f61f8560e41b85521660048401525af1801561062c576112dc575b50601b6000805160206157498339815191528280a280f35b6112e590611010565b386112c4565b346104b75760003660031901126104b7576072546040516001600160a01b039091168152602090f35b346104b75760003660031901126104b7577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003611372576040516000805160206157298339815191528152602090f35b0390f35b60405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c6044820152771b1959081d1a1c9bdd59da0819195b1959d85d1958d85b1b60421b6064820152608490fd5b346104b75760203660031901126104b7576004356113f58161051a565b606980546001600160a01b0319166001600160a01b0392909216919091179055601c600080516020615749833981519152600080a2005b346104b75760003660031901126104b757607e5460405160089190911c6001600160a01b03168152602090f35b346104b75760203660031901126104b7576004356114768161051a565b61149f60018060a01b0361149561149082606b54166104bc565b6104bc565b9083161415613647565b6114ad611490606a546104bc565b90813b156104b7576040516319dc7ae560e31b81526001600160a01b039190911660048201526000602482018190529182908290604490829084905af1801561062c5761150d575b5060016000805160206157498339815191528280a280f35b80610cde61151a92611010565b386114f5565b346104b75760003660031901126104b757602060ff603354166040519015158152f35b346104b75760203660031901126104b75761158e60043561156381610b86565b60658054600160401b600160801b03191660409290921b600160401b600160801b0316919091179055565b600a600080516020615749833981519152600080a2005b346104b75760203660031901126104b7576004356115c28161051a565b60018060a01b03166000526079602052602060ff60016040600020015460c01c166040519015158152f35b346104b75760003660031901126104b7576020607a54604051908152f35b346104b75760003660031901126104b7576075546040516001600160401b039091168152602090f35b346104b75760203660031901126104b7576004356116518161051a565b60018060a01b03166000526079602052602060018060401b0360016040600020015460801c16604051908152f35b346104b75760203660031901126104b75760043561169c81610b86565b6078548110156116d157607860005260008051602061578983398151915201546040516001600160a01b039091168152602090f35b613762565b346104b75760003660031901126104b7576020607c54604051908152f35b346104b75760003660031901126104b7576020606754604051908152f35b346104b75760003660031901126104b7576065546040805191901c6001600160401b03168152602090f35b346104b7576101603660031901126104b75761182860a061175d36610e85565b61176b60ff60335416613680565b6117d86001808060401b036117878160755460801c16156138dc565b61179861179385615606565b613922565b6117b7826117a86080870161396b565b6117b1816134b3565b14613975565b6117c560c0850135156139bf565b6117d160e08501612dd7565b16146139ff565b6117f66117f06117eb6101008401612dd7565b610af4565b15613a3e565b6118176001611808610120840161396b565b611811816134b3565b14613a89565b611820816148f0565b50013561406a565b601d600080516020615749833981519152600080a2005b346104b75760003660031901126104b75760755460405160809190911c6001600160401b03168152602090f35b9181601f840112156104b7578235916001600160401b0383116104b7576020808501948460051b0101116104b757565b346104b7576020806003193601126104b7576004356001600160401b0381116104b7576118cd90369060040161186c565b90916118dd60ff60335416613680565b6118e88215156136c3565b60005b828110611909576016600080516020615749833981519152600080a2005b80611918611992928587613778565b356119228161051a565b6001600160a01b0316600090815260798452604090206001015461195b906119559060801c6001600160401b0316610af4565b1561389e565b61197661197161196c838789613778565b612d53565b61420d565b5061198d61198861196c838789613778565b6142ca565b61374e565b6118eb565b346104b75760008060031936011261069a5760335460ff8116611a005760019060ff1916176033557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a160036000805160206157498339815191528280a280f35b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b346104b7576000604036600319011261069a57600435611a578161051a565b8160243591611a658361051a565b6001600160a01b0390811692833b15610ff657602490836040519586948593631b2ce7f360e11b85521660048401525af1801561062c57611ab9575b5060146000805160206157498339815191528280a280f35b611ac290611010565b38611aa1565b346104b75760003660031901126104b757602060755460c01c604051908152f35b346104b75760203660031901126104b757600435606855601a600080516020615749833981519152600080a2005b346104b75760003660031901126104b7576020606854604051908152f35b346104b75760203660031901126104b7576020611b5c600435611b578161051a565b613d2b565b6040519015158152f35b346104b75760203660031901126104b757610180611b8e600435611b8981610b86565b613bba565b60405190805182526020810151602083015260408101516040830152611bbc60608201516060840190610b00565b611bce60808201516080840190610b00565b611be060a082015160a0840190610b00565b611bf260c082015160c0840190610b00565b611c0460e082015160e0840190610b00565b611c176101008083015190840190610b00565b611c2a6101208083015190840190610b00565b611c3d6101408083015190840190610b00565b6101608091015190820152f35b346104b75760203660031901126104b7576004356073556008600080516020615749833981519152600080a2005b611c81366110f2565b6001600160a01b03611cbb7f0000000000000000000000000000000000000000000000000000000000000000821661072230821415612707565b6000805160206156698339815191525460ff1615611cde57505061076c90612be7565b916020600493604051948580926352d1902d60e01b825285165afa60009381611d41575b50611d205760405162461bcd60e51b8152806107b060048201612b8e565b611d3c6000805160206157e983398151915261076c9414612b26565b612cb9565b611d5a91945060203d81116107fe576107ef8183611094565b9238611d02565b346104b75760003660031901126104b7576020606654604051908152f35b346104b75760203660031901126104b75761136e6080600435611da18161051a565b60409182918251611db181611028565b60009281848093528260208201528286820152826060820152015260018060a01b0316815260796020522090611e2760ff6001835194611df086611028565b80548652015460018060401b0380821660208701528082861c16858701528160801c16606086015260c01c16608084019015159052565b519182918291909160808060a08301948051845260018060401b03806020830151166020860152806040830151166040860152606082015116606085015201511515910152565b346104b75760203660031901126104b757600435611e8b81610f4a565b60ff8019607e54169115151617607e55601e600080516020615749833981519152600080a2005b60406003198201126104b7576001600160401b03916004358381116104b75782611ede9160040161186c565b939093926024359182116104b757611ef89160040161186c565b9091565b346104b757611f0a36611eb2565b611f188394929315156136c3565b611f238185146136fd565b60005b848110611f44576006600080516020615749833981519152600080a2005b80611f53611f9b928487613778565b35611f5d81610f4a565b611f68828887613778565b35611f728161051a565b60018060a01b0316600052607460205260406000209060ff80198354169115151617905561374e565b611f26565b346104b75760003660031901126104b757606d546040516001600160a01b039091168152602090f35b346104b75760403660031901126104b757602060ff612015600435611fed81610b86565b60243590611ffa8261051a565b6001600160401b03166000908152607785526040902061225a565b54166040519015158152f35b346104b75760003660031901126104b7576070546040516001600160a01b039091168152602090f35b346104b75760003660031901126104b757606b546040516001600160a01b039091168152602090f35b346104b75760203660031901126104b75760043561209081610b86565b6001600160401b031680156120ca57606580546001600160401b0319169190911790556009600080516020615749833981519152600080a2005b60405162461bcd60e51b81526020600482015260166024820152751253959053125117d0d3d39192549357d411549253d160521b6044820152606490fd5b346104b75760203660031901126104b757600435607a548110156116d157607a6000526000805160206156a983398151915201546040516001600160a01b039091168152602090f35b346104b75760003660031901126104b7576075546040805191901c6001600160401b03168152602090f35b346104b75760203660031901126104b75761136e60043561219c8161051a565b6001600160a01b03811660009081526079602052604090206001015460c01c60ff1690816121d8575b5060405190151581529081906020820190565b6075546001600160401b0316600090815260776020526040902060ff9250612200919061225a565b5416386121c5565b346104b75760003660031901126104b7576078546040516001600160401b039091168152602090f35b346104b75760003660031901126104b757606a546040516001600160a01b039091168152602090f35b9060018060a01b0316600052602052604060002090565b60801c6001600160401b031690565b346104b75760203660031901126104b75760043561229d8161051a565b60018060a01b0316600052607960205260a0604060002060ff6001825492015460405192835260018060401b038082166020850152808260401c1660408501528160801c16606084015260c01c1615156080820152f35b346104b75760003660031901126104b757606c546040516001600160a01b039091168152602090f35b346104b75760203660031901126104b75760043561233a8161051a565b60018060a01b031660005260796020526020604060002054604051908152f35b346104b75760003660031901126104b7576071546040516001600160a01b039091168152602090f35b346104b75760203660031901126104b757600435607a548110156116d157607a6000526000805160206156a9833981519152015460405160a09190911c6001600160401b03168152602090f35b346104b7576123de36611eb2565b906123ed60ff60335416613680565b6123f88315156136c3565b6124038284146136fd565b60005b838110612424576015600080516020615749833981519152600080a2005b61244961243561196c838789613778565b61244361196c848787613778565b9061414d565b9061245e6001600160401b0383161515613863565b61249c61246f61196c83888a613778565b6001600160a01b031660009081526079602052604090206001018054600160801b600160c01b0319169055565b6124ad61246f61196c838787613778565b6124bb611490606e546104bc565b803b156104b7576040516356e9df9760e01b81529260009184918290849082906124e89060048301610b0d565b03925af191821561062c5761250292612507575b5061374e565b612406565b80610cde61251492611010565b386124fc565b346104b75760203660031901126104b757602061254160043561253c81610b86565b613c84565b604051908152f35b346104b75760203660031901126104b7576004356125668161051a565b60018060a01b03166000526074602052602060ff604060002054166040519015158152f35b346104b75760003660031901126104b7576069546040516001600160a01b039091168152602090f35b346104b75760203660031901126104b7576004356125d18161051a565b6000805160206156c9833981519152546001600160a01b039182169116811461261f57607180546001600160a01b0319169190911790556019600080516020615749833981519152600080a2005b60405162461bcd60e51b815260206004820152600e60248201526d494e56414c49445f455343524f5760901b6044820152606490fd5b346104b75760203660031901126104b7576004356126728161051a565b606b80546001600160a01b0319166001600160a01b03929092169182179055606a546126a190611490906104bc565b90813b156104b7576126ce60405180938180946319dc7ae560e31b82526000968795869260048301612d5d565b03925af1801561062c576126f4575b50806000805160206157498339815191528180a280f35b80610cde61270192611010565b386126dd565b1561270e57565b60405162461bcd60e51b815260206004820152602c602482015260008051602061570983398151915260448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b1561275d57565b60405162461bcd60e51b815260206004820152602c602482015260008051602061570983398151915260448201526b6163746976652070726f787960a01b6064820152608490fd5b604051602081016001600160401b038111828210176110235760405260008152906000368137565b908160209103126104b7575190565b6040513d6000823e3d90fd5b156127ef57565b60405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b60809060208152602e60208201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960408201526d6f6e206973206e6f74205555505360901b60608201520190565b803b156128ca5760008051602061572983398151915280546001600160a01b0319166001600160a01b03909216919091179055565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b61292e81612895565b6001600160a01b0381166000805160206157a9833981519152600080a2815115801590612973575b61295e575050565b6129709161296a6129bb565b91612a04565b50565b506000612956565b61298481612895565b6001600160a01b0381166000805160206157a9833981519152600080a28151158015906129b35761295e575050565b506001612956565b604051906129c88261105e565b60278252660819985a5b195960ca1b6040837f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208201520152565b9190823b15612a5757600081612a4c9460208394519201905af43d15612a4f573d90612a2f826110d7565b91612a3d6040519384611094565b82523d6000602084013e612aab565b90565b606090612aab565b60405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608490fd5b90919015612ab7575090565b815115612ac75750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b828510612b0d575050604492506000838284010152601f80199101168101030190fd5b8481018201518686016044015293810193859350612aea565b15612b2d57565b60405162461bcd60e51b815260206004820152603360248201527f45524331393637557067726164653a20756e737570706f72746564207365636f6044820152721b99185c9e481c1c9bde1a58589b1955555251606a1b6064820152608490fd5b60809060208152603860208201527f45524331393637557067726164653a206e6577207365636f6e6461727920696d604082015277706c656d656e746174696f6e206973206e6f74205555505360401b60608201520190565b803b15612c1c576000805160206157e983398151915280546001600160a01b0319166001600160a01b03909216919091179055565b60405162461bcd60e51b815260206004820152603760248201527f455243313936373a206e6577207365636f6e6461727920696d706c656d656e74604482015276185d1a5bdb881a5cc81b9bdd08184818dbdb9d1c9858dd604a1b6064820152608490fd5b612c8a81612be7565b6001600160a01b038116600080516020615769833981519152600080a28151158015906129735761295e575050565b612cc281612be7565b6001600160a01b038116600080516020615769833981519152600080a28151158015906129b35761295e575050565b602435612a4c8161051a565b604435612a4c8161051a565b606435612a4c8161051a565b608435612a4c8161051a565b60a435612a4c8161051a565b61012435612a4c8161051a565b61014435612a4c8161051a565b60c435612a4c8161051a565b35612a4c8161051a565b6001600160a01b0390911681526001602082015260400190565b903590601e19813603018212156104b757018035906001600160401b0382116104b7576020019181360383136104b757565b91926060938192845260406020850152816040850152848401376000828201840152601f01601f1916010190565b35612a4c81610b86565b80546001600160401b0319166001600160401b03909216919091179055565b8054600160401b600160801b03191660409290921b600160401b600160801b0316919091179055565b15612e3057565b60405162461bcd60e51b815260206004820152601460248201527324a72b20a624a22fa2a9a1a927abafa0a226a4a760611b6044820152606490fd5b15612e7357565b60405162461bcd60e51b815260206004820152601460248201527324a72b20a624a22fa2a9a1a927abafa7aba722a960611b6044820152606490fd5b908152602081019190915260400190565b612ec943607d55565b612ef6612ed4612cf1565b606a80546001600160a01b0319166001600160a01b0392909216919091179055565b612f23612f01612cfd565b606c80546001600160a01b0319166001600160a01b0392909216919091179055565b612f2e611490612cf1565b90612f3a611490612d09565b90823b156104b7576040805193846347fb24c560e01b918282526000968791818381612f6a60049b8c8301612d5d565b03925af1801561062c576133fc575b50612f85611490612cf1565b612f90611490612cfd565b813b156133d25783516304f61f8560e41b81526001600160a01b039091168682019081529091879183919082908490829060200103925af1801561062c576133e9575b50613001612fdf612d09565b606980546001600160a01b0319166001600160a01b0392909216919091179055565b61302e61300c612d15565b606b80546001600160a01b0319166001600160a01b0392909216919091179055565b613039611490612cf1565b613044611490612d15565b813b156133d25761306c8792839286519485809481936319dc7ae560e31b83528c8301612d5d565b03925af1801561062c576133d6575b506130a9613087612d21565b606d80546001600160a01b0319166001600160a01b0392909216919091179055565b6130b4611490612cf1565b6130bf611490612d21565b91813b156133d2579186916130e19383865180968195829483528b8301612d5d565b03925af1801561062c576133bf575b506130fc611490612d21565b9260e083013593613111610100850185612d77565b9190813b156133bb5791879161313d938387518096819582946367c6ab6b60e11b84528d8b8501612da9565b03925af1801561062c576133a8575b50613158611490612cfd565b90813b156133a45785916131ae91845197888094819363e0bc972960e01b83528201906000825260c06020830152600060c0830152600160a060e084019382604082015260006060820152600060808201520152565b03925af190811561062c577ffc1b83c11d99d08a938e0b82a0bd45f822f71ff5abf23f999c93c4533d7524649461338c92613391575b506132126131f0612d2d565b606f80546001600160a01b0319166001600160a01b0392909216919091179055565b61323f61321d612d3a565b607080546001600160a01b0319166001600160a01b0392909216919091179055565b61326c61324a612d47565b606e80546001600160a01b0319166001600160a01b0392909216919091179055565b61327c6132776134df565b613ed0565b6132aa61328884612dd7565b606580546001600160401b0319166001600160401b0392909216919091179055565b6132b961156360208501612dd7565b6132c284606655565b6132cf6060840135606755565b6133826105c5826080860135956132e587606855565b6132ef604b607355565b61337c61335a60c0830161196c61330582612d53565b6000805160206156c9833981519152546001600160a01b039161333891839061332f9082166104bc565b91161415612e29565b61334183612d53565b9061335161149060a08901612d53565b91161415612e6c565b607180546001600160a01b0319166001600160a01b0392909216919091179055565b01612d53565b5192839283612eaf565b0390a1565b80610cde61339e92611010565b386131e4565b8580fd5b80610cde6133b592611010565b3861314c565b8780fd5b80610cde6133cc92611010565b386130f0565b8680fd5b80610cde6133e392611010565b3861307b565b80610cde6133f692611010565b38612fd3565b80610cde61340992611010565b38612f79565b6040519061018082016001600160401b0381118382101761102357604052816101606000918281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e08201528261010082015282610120820152826101408201520152565b6040519061348782611043565b8160405161349481611043565b604036823781526020604051916134aa83611043565b60403684370152565b600411156134bd57565b634e487b7160e01b600052602160045260246000fd5b60048210156134bd5752565b6134e761340f565b506134f061347a565b61350f602060405161350181611043565b8381520191600183526155a2565b905160048110156134bd5760405190602082019283526001604083015260f81b60608201526041815261354181611079565b519020436001600160401b031661355661340f565b5061355f61340f565b9182526000602083015260006040830152600060608301528060808301528060a0830152610140820152600061016082015290565b6001600160401b039091169052565b939291906135af61340f565b506135b861340f565b94855260208501526040840152600060608401526001600160401b039081166080840181905260a0840152431661014083015261016082015290565b949392919061360161340f565b5061360a61340f565b958652602086015260408501526001600160401b0390811660608501529081166080840181905260a0840152431661014083015261016082015290565b1561364e57565b60405162461bcd60e51b815260206004820152600a602482015269086aaa4be9eaaa8849eb60b31b6044820152606490fd5b1561368757565b60405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606490fd5b156136ca57565b60405162461bcd60e51b815260206004820152600b60248201526a454d5054595f415252415960a81b6044820152606490fd5b1561370457565b60405162461bcd60e51b815260206004820152600c60248201526b0aea49e9c8ebe988a9c8ea8960a31b6044820152606490fd5b634e487b7160e01b600052601160045260246000fd5b600019811461375d5760010190565b613738565b634e487b7160e01b600052603260045260246000fd5b91908110156116d15760051b0190565b908160209103126104b75751612a4c81610f4a565b156137a457565b60405162461bcd60e51b81526020600482015260156024820152741393d7d554d15497d313d1d250d7d4d5541413d495605a1b6044820152606490fd5b156137e857565b60405162461bcd60e51b81526020600482015260116024820152704e4f5f4143544956455f5354414b45525360781b6044820152606490fd5b1561382857565b60405162461bcd60e51b81526020600482015260136024820152724e4f5f50454e44494e475f574954484452415760681b6044820152606490fd5b1561386a57565b60405162461bcd60e51b815260206004820152600c60248201526b1393d517d25397d0d210531360a21b6044820152606490fd5b156138a557565b60405162461bcd60e51b815260206004820152600f60248201526e14d51052d15497d25397d0d2105313608a1b6044820152606490fd5b156138e357565b60405162461bcd60e51b81526020600482015260176024820152761393d397d1d1539154d254d7d393d11154d7d1561254d5604a1b6044820152606490fd5b1561392957565b60405162461bcd60e51b815260206004820152601060248201526f4e4f545f454d5054595f4245464f524560801b6044820152606490fd5b600411156104b757565b35612a4c81613961565b1561397c57565b60405162461bcd60e51b815260206004820152601b60248201527a10915193d49157d35050d212539157d393d517d192539254d21151602a1b6044820152606490fd5b156139c657565b60405162461bcd60e51b81526020600482015260116024820152701393d517d6915493d7d4d153911493d3d5607a1b6044820152606490fd5b15613a0657565b60405162461bcd60e51b815260206004820152601060248201526f494e424f585f4e4f545f41545f4f4e4560801b6044820152606490fd5b15613a4557565b60405162461bcd60e51b815260206004820152601c60248201527b504f534954494f4e5f494e5f4d4553534147455f4e4f545f5a45524f60201b6044820152606490fd5b15613a9057565b60405162461bcd60e51b815260206004820152601a602482015279105195115497d35050d212539157d393d517d192539254d2115160321b6044820152606490fd5b613ada61340f565b506000805260766020526000805160206158098339815191526005613afd6110b7565b91805483526001810154602084015260028101546040840152613baf6003820154613b6860018060401b0391613b3883821660608901613594565b613b4a838260401c1660808901613594565b613b5c838260801c1660a08901613594565b60c01c60c08701613594565b613ba2600484015491613b8081841660e08901613594565b613b93818460401c166101008901613594565b8260801c166101208701613594565b60c01c6101408501613594565b015461016082015290565b613bc261340f565b506001600160401b039081166000908152607660205260409020600590613baf613bea6110b7565b93825485526001830154602086015260028301546040860152613b686003840154613b3883821660608901613594565b6001600160401b03166000908152607f6020526040902090565b6001600160401b0316600090815260766020526040902090565b15613c5557565b60405162461bcd60e51b81526020600482015260076024820152664e4f5f4e4f444560c81b6044820152606490fd5b7f000000000000000000000000000000000000000000000000000000000000000015613cbf57613cb390613c1a565b54612a4c811515613c4e565b60049060018060401b038091166000526076602052613ced604060002091600383015460401c161515613c4e565b015460c01c90565b607a548110156116d157607a60005260206000200190600090565b6078548110156116d157607860005260206000200190600090565b600090607a8054925b838110613d445750505050600090565b6000828152602090208101546001600160a01b03848116911614613d7057613d6b9061374e565b613d34565b50505050600190565b634e487b7160e01b600052600060045260246000fd5b8054600160801b600160c01b03191660809290921b600160801b600160c01b0316919091179055565b90610160600591805184556020810151600185015560408101516002850155613e5160038501613df4613dee6060850151610af4565b82612de1565b613e0a613e046080850151610af4565b82612e00565b613e20613e1a60a0850151610af4565b82613d8f565b613e2d60c0840151610af4565b9080546001600160c01b031660c09290921b6001600160c01b031916919091179055565b613e9860048501613e68613dee60e0850151610af4565b613e79613e04610100850151610af4565b613e8a613e1a610120850151610af4565b613e2d610140840151610af4565b0151910155565b6001600160401b039081166001019190821161375d57565b6001600160401b03918216908216019190821161375d57565b613f1a90613eee60ff60005460081c16613ee981613fcf565b613fcf565b6033805460ff19169055600080526076602052600080516020615809833981519152613db8565b613db8565b60758054600160401b600160801b031916600160401b1790557f0000000000000000000000000000000000000000000000000000000000000000613f5a57565b60405163a3b1b31d60e01b815260208160048160645afa90811561062c57600091613fb1575b5060008052607f6020527f18b3a2798575d3a428c1f52e616a74b071539854e037e7d7c535365d474f403355565b55565b613fc9915060203d81116107fe576107ef8183611094565b38613f80565b15613fd657565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b1561403657565b60405162461bcd60e51b815260206004820152600c60248201526b434f4e4649524d5f4441544160a01b6044820152606490fd5b6001600090815260766020527fc5f02c1f30a8261d7972547af25a0fdd1ec626a841920af1fd0cd13075f391bc546140a590610be284615502565b6140b3611490606b546104bc565b90813b1561069a57604051630502677360e51b81526000600482015260248101849052918290604490829084905af1801561062c576001926000805160206157c9833981519152926141359261413a575b50607580546001600160801b0319166001600160411b01179055604080519182526000602083015290918291820190565b0390a2565b80610cde61414792611010565b38614104565b6001600160a01b03908116600090815260796020526040808220939092168152206001919091015460801c6001600160401b039081169182156141cf576001015460801c16810361419b5790565b60405162461bcd60e51b815260206004820152600c60248201526b1112519197d25397d0d2105360a21b6044820152606490fd5b60405162461bcd60e51b81526020600482015260076024820152661393d7d0d2105360ca1b6044820152606490fd5b60001981019190821161375d57565b60018060a01b0316600090808252607960205260408220918083549355607b6020526040812054908382019081831161375d5760408185849352607b6020522055607c549084820180921161375d5783927fa740af14c56e4e04a617b1de1eb20de73270decbaaead14f142aabf3038e5ae292607c5561429260405192839283612eaf565b0390a260408051838152600060208201527febd093d389ab57f3566918d2c379a2b4d9539e8eb95efad9d5e465457833fde69190a290565b6001600160a01b038181166000818152607960205260409081902060010154815193949392911c6001600160401b03169061430483611043565b825260208201908152607a54600160401b8110156110235780600161432c9201607a55613cf5565b929092614377575182549151600160a01b600160e01b0360a09190911b166001600160e01b031990921694166001600160a01b03169390931792909217909155614375906143d4565b565b613d79565b60785480156143be5760001981810191808310156116d1576078600081905291016000805160206157898339815191520180546001600160a01b031916905555565b634e487b7160e01b600052603160045260246000fd5b6001600160a01b03811660009081526079602052604090206001015460c081901c60ff16156144ab576143759161449761449f9260018060401b031661446661443e6144296144246078546141fe565b613d10565b905460039190911b1c6001600160a01b031690565b61444783613d10565b90919082549060031b9160018060a01b03809116831b921b1916179055565b600161449161447761442984613d10565b6001600160a01b0316600090815260796020526040902090565b01612de1565b61447761437c565b60016000918281550155565b60405162461bcd60e51b815260206004820152600a6024820152691393d517d4d51052d15160b21b6044820152606490fd5b156144e457565b60405162461bcd60e51b815260206004820152601060248201526f4241445f41465445525f53544154555360801b6044820152606490fd5b6040519061010082016001600160401b0381118382101761102357604052600080835260e08361454a61340f565b602082015282604082015261455d61340f565b60608201528260808201528260a08201528260c08201520152565b1561457f57565b60405162461bcd60e51b815260206004820152600f60248201526e0a0a48aacbea6a882a88abe9082a69608b1b6044820152606490fd5b9190916080818403126104b7576040516145cf81611043565b809380601f840112156104b757604051926145e984611043565b8360408201948386116104b75782905b868210614654575050835281605f820112156104b7576040519361461c85611043565b60808592019283116104b757905b82821061463a5750505060200152565b60208091833561464981610b86565b81520191019061462a565b81358152602091820191016145f9565b1561466b57565b60405162461bcd60e51b815260206004820152600f60248201526e494e424f585f4241434b574152445360881b6044820152606490fd5b156146a957565b60405162461bcd60e51b815260206004820152601a602482015279494e424f585f504f535f494e5f4d53475f4241434b574152445360301b6044820152606490fd5b6001600160401b0390811690811461375d5760010190565b1561470a57565b60405162461bcd60e51b815260206004820152600e60248201526d12539093d617d41054d517d1539160921b6044820152606490fd5b6001600160401b03908116600019019190821161375d57565b91909160a0818403126104b757602060806040519261477784611043565b6147828496826145b6565b845201359161479083613961565b0152565b919091610160818403126104b75760405190606082016001600160401b03811183821017611023576040916101409183526147df84966147d48184614759565b865260a08301614759565b602085015201359161479083610b86565b156147f757565b60405162461bcd60e51b81526020600482015260146024820152730aa9c8ab0a08a86a88a88be9c9e888abe9082a6960631b6044820152606490fd5b604081833760408201604082016000915b6002831061486c57505050608001359061485d82613961565b60048210156134bd5760800152565b600190823561487a81610b86565b828060401b031681526020809101920192019190614844565b91926101406101c09497969592976101e085019885526148b66020860182614833565b6148c660c0860160a08301614833565b01356148d181610b86565b6001600160401b03166101608401526101808301526101a08201520152565b60a08101906101208082019160016149078461396b565b614910816134b3565b148015614cb0575b614921906144dd565b61492961451c565b91614932613ad2565b9360608401948552614948611490606a546104bc565b6040516221048360e21b815260209691908781600481855afa90811561062c57600091614c93575b50865261498861497f866151b2565b83515114614578565b866149a7614996368b6145b6565b60200151516001600160401b031690565b9160026149ea6149bd6117eb614996368c6145b6565b6001600160401b0397908d908b908a908982166149dc82821015614664565b14614c60575b50505061396b565b6149f3816134b3565b148015614c35575b614c25575b8751614a1186851691821115614703565b614bbf575b505050614a2b614a263686614794565b61525f565b9460408101958652614a49614a41606554610af4565b844316613eb7565b93614a5860c083019586613594565b8251810151614a6f906001600160401b0316610af4565b15801560a084019081529190614bad5783510151600590614a98906001600160401b0316613c34565b015460808301525b5115159460808201519187519260e0820197885160685495614ac393879361553e565b998a998a158b8b82159a614b0f614b9f99614b06614b75986000805160206156e98339815191529f97614b3198614ba5575b614afe906147f0565b8a5190615208565b934390516154b3565b614b2b614b24614b1f368c614794565b6154eb565b9251610af4565b926135a3565b908301908152614b6f614b4d614b48607554612271565b613e9f565b6000805260766020526000805160206158098339815191526150ad565b6150ad565b516150e4565b610160614b83607554612271565b9451015197519651606854915192604051968796169886614893565b0390a490565b506001614af5565b50610160835101516080830152614aa0565b614bcb614be793614740565b9060405180809581946316bf557960e01b835260048301610b0d565b03915afa90811561062c57600091614c08575b5060e0860152388681614a16565b614c1f9150873d89116107fe576107ef8183611094565b38614bfa565b91614c2f906146eb565b91614a00565b5084614c58614c44368d6145b6565b60209081015101516001600160401b031690565b1615156149fb565b614c826117eb614c44614c7a614c44614c8b9736906145b6565b9436906145b6565b911610156146a2565b8c8a896149e2565b614caa9150883d8a116107fe576107ef8183611094565b38614970565b506149216002614cbf8561396b565b614cc8816134b3565b149050614918565b9291909161012093848101926001614ce78561396b565b614cf0816134b3565b14801561508d575b614d01906144dd565b614d0961451c565b93614d1386613bba565b6060860152614d26611490606a546104bc565b916040516221048360e21b8152602081600481875afa91821561062c57614d6892614d5c9260009161506e575b50885285615208565b60608701515114614578565b6002614dae614d7d6149963660a088016145b6565b92614d8e6117eb61499636896145b6565b6001600160401b038516614da482821015614664565b146150345761396b565b614db7816134b3565b148015615013575b615005575b84516001600160401b03821690614ddd90821115614703565b614f7f575b50506000805160206156e983398151915290614f26614ed395614e08614a263685614794565b6040870152614b6f614f07614e9a614e33614e24606554610af4565b436001600160401b0316613eb7565b9a614e4260c08b019c8d613594565b60608a01518101518a90614e5e906001600160401b0316610af4565b15801560a083019081529290614f6b57606091909101510151600590614e8c906001600160401b0316613c34565b015460808b01525b51151590565b96608089015184614ebd60408c01519a60e08d019b8c519060685495869361553e565b9c8d9c848e958614908115614f62575b506147f0565b614ef1614ee48d5160a08c01615208565b938d6040439101516154b3565b614f01614b24614b1f368d614794565b936135f4565b9160208801928352614b6a614f20614b48607554612271565b91613c34565b614f31607554612271565b614b9f6101606060870151015195604081015195519060685490519160405195869560018060401b03169886614893565b90501538614ecd565b5060600151610160015160808b0152614e94565b614fab9291614f8f602092614740565b9060405180809681946316bf557960e01b835260048301610b0d565b03915afa91821561062c57614ed3956000805160206156e983398151915293614f2692600091614fe6575b5060e08701529550819250614de2565b614fff915060203d6020116107fe576107ef8183611094565b38614fd6565b61500e906146eb565b614dc4565b506001600160401b0361502c614c443660a087016145b6565b161515614dbf565b615069615047614c443660a08a016145b6565b6150576117eb614c44368b6145b6565b6001600160401b0390911610156146a2565b61396b565b615087915060203d6020116107fe576107ef8183611094565b38614d53565b50614d01600261509c8661396b565b6150a5816134b3565b149050614cf8565b60040180546143759291906001600160401b039060401c8116156150d2575b50613d8f565b6150de90431682612e00565b386150cc565b6075546151339190613f15906001600160401b0390600160801b600160c01b03615113608083901c84166146eb565b60801b1690600160801b600160c01b031916178060755560801c16613c34565b7f000000000000000000000000000000000000000000000000000000000000000061515a57565b60405163a3b1b31d60e01b815260208160048160645afa90811561062c57600091615194575b50613fae61518f607554612271565b613c1a565b6151ac915060203d81116107fe576107ef8183611094565b38615180565b60806151c66151c136846145b6565b6155a2565b9101356151d281613961565b60405190602082019283526001604083015260048110156134bd5760f81b60608201526041815261520281611079565b51902090565b9060806152186151c136856145b6565b92013561522481613961565b6040519160208301938452604083015260048110156134bd5760f81b60608201526041815261520281611079565b5160048110156134bd5790565b604090815161526d81611043565b82368237602061528861528282855101615252565b836134d3565b80830161529782825101615252565b6152a483850191826134d3565b8551916152b083611043565b8360005b88811061538d57505085515183525151948383019586528660018060401b03910151169461530b8751936152e78561105e565b600285526153056152fe878701988b368b37615252565b91516155a2565b906153a1565b918351156116d1576152fe61530591615325948852615252565b918151926001938410156116d1578683969594929301528551948594838601976000895286015260608501905190939260005b828110615377575050505050906152029103601f198101835282611094565b8451865287965094810194938101938301615358565b61539561347a565b818601520184906152b4565b6153aa816134b3565b600181036153ef5750604051615202816153e1602082019485602c916b213637b1b59039ba30ba329d60a11b8252600c8201520190565b03601f198101835282611094565b6153f8816134b3565b600281036154385750604051615202816153e160208201948560359174213637b1b59039ba30ba32961032b93937b932b21d60591b825260158201520190565b60039150615445816134b3565b0361547b5760405174213637b1b59039ba30ba3296103a37b7903330b91d60591b602082019081529061520281603581016153e1565b60405162461bcd60e51b815260206004820152601060248201526f4241445f424c4f434b5f53544154555360801b6044820152606490fd5b91604051916020830193845260408301526060820152606081526080810181811060018060401b038211176110235760405251902090565b6020612a4c91015151516020815191015190615520565b6040516020810191825260006040820152604081526152028161105e565b9060405190602082019283526040820152604081526152028161105e565b9193909290916000901561559c57506001935b60405193602085019560ff60f81b9060f81b16865260218501526041840152606183015260818201526081815260c0810181811060018060401b038211176110235760405251902090565b93615551565b8051906020808351930151910151602081519101516040519260208401946c23b637b130b61039ba30ba329d60991b8652602d850152604d84015260018060c01b0319809260c01b16606d84015260c01b166075820152605d815261520281611079565b803515908161565b575b8161563b575b8161561f575090565b60609150013561562e81610b86565b6001600160401b03161590565b9050604081013561564b81610b86565b6001600160401b03161590615616565b602081013515915061561056fe49bd798cd84788856140a4cd5030756b4d08a9e4d55db725ec195f232d262a894910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143f0440771a29e57e18c66727944770b82cc77924aef333c927ce6bdd2cdb3ae03b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61034f4caa9e67fb994e349dd35d1ad0ce23053d4323f83ce11dc817b5435031d09646756e6374696f6e206d7573742062652063616c6c6564207468726f75676820360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbcea8787f128d10b2cc0317b0c3960f9ad447f7f6c1ed189db1083ccffd20f456ef7eed2a7fabbf1bec8d55ed5e785cc76622376dde5df4ff15470551e030b81348dc6fb69531d98d70dc0420e638d2dfd04e09e1ec783ede9aac77da9c5a0dac4bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b22ef0479a7ff660660d1c2fe35f1b632cf31675c2d9378db8cec95b00d8ffa3c2b1dbce74324248c222f0ec2d5ed7bd323cfc425b336f0253c5ccfda7265546dafbc767fed27552cbeceb3d11150dacedabc53b0cc52ac5aa6285a747a181958a26469706673582212202db7a70b67824ddad1a05b4101a5192e13a2b8972fac8cd70f23d12dab90864964736f6c63430008130033";

type RollupAdminLogicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RollupAdminLogicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RollupAdminLogic__factory extends ContractFactory {
  constructor(...args: RollupAdminLogicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RollupAdminLogic> {
    return super.deploy(overrides || {}) as Promise<RollupAdminLogic>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RollupAdminLogic {
    return super.attach(address) as RollupAdminLogic;
  }
  override connect(signer: Signer): RollupAdminLogic__factory {
    return super.connect(signer) as RollupAdminLogic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RollupAdminLogicInterface {
    return new utils.Interface(_abi) as RollupAdminLogicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RollupAdminLogic {
    return new Contract(address, _abi, signerOrProvider) as RollupAdminLogic;
  }
}
