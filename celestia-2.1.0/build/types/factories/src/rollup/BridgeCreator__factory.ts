/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  BridgeCreator,
  BridgeCreatorInterface,
} from "../../../src/rollup/BridgeCreator";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IBridge",
            name: "bridge",
            type: "address",
          },
          {
            internalType: "contract ISequencerInbox",
            name: "sequencerInbox",
            type: "address",
          },
          {
            internalType: "contract IInboxBase",
            name: "inbox",
            type: "address",
          },
          {
            internalType: "contract IRollupEventInbox",
            name: "rollupEventInbox",
            type: "address",
          },
          {
            internalType: "contract IOutbox",
            name: "outbox",
            type: "address",
          },
        ],
        internalType: "struct BridgeCreator.BridgeContracts",
        name: "_ethBasedTemplates",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "contract IBridge",
            name: "bridge",
            type: "address",
          },
          {
            internalType: "contract ISequencerInbox",
            name: "sequencerInbox",
            type: "address",
          },
          {
            internalType: "contract IInboxBase",
            name: "inbox",
            type: "address",
          },
          {
            internalType: "contract IRollupEventInbox",
            name: "rollupEventInbox",
            type: "address",
          },
          {
            internalType: "contract IOutbox",
            name: "outbox",
            type: "address",
          },
        ],
        internalType: "struct BridgeCreator.BridgeContracts",
        name: "_erc20BasedTemplates",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [],
    name: "ERC20TemplatesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "TemplatesUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "adminProxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "rollup",
        type: "address",
      },
      {
        internalType: "address",
        name: "nativeToken",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "delayBlocks",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "futureBlocks",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "delaySeconds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "futureSeconds",
            type: "uint256",
          },
        ],
        internalType: "struct ISequencerInbox.MaxTimeVariation",
        name: "maxTimeVariation",
        type: "tuple",
      },
    ],
    name: "createBridge",
    outputs: [
      {
        components: [
          {
            internalType: "contract IBridge",
            name: "bridge",
            type: "address",
          },
          {
            internalType: "contract ISequencerInbox",
            name: "sequencerInbox",
            type: "address",
          },
          {
            internalType: "contract IInboxBase",
            name: "inbox",
            type: "address",
          },
          {
            internalType: "contract IRollupEventInbox",
            name: "rollupEventInbox",
            type: "address",
          },
          {
            internalType: "contract IOutbox",
            name: "outbox",
            type: "address",
          },
        ],
        internalType: "struct BridgeCreator.BridgeContracts",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20BasedTemplates",
    outputs: [
      {
        internalType: "contract IBridge",
        name: "bridge",
        type: "address",
      },
      {
        internalType: "contract ISequencerInbox",
        name: "sequencerInbox",
        type: "address",
      },
      {
        internalType: "contract IInboxBase",
        name: "inbox",
        type: "address",
      },
      {
        internalType: "contract IRollupEventInbox",
        name: "rollupEventInbox",
        type: "address",
      },
      {
        internalType: "contract IOutbox",
        name: "outbox",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ethBasedTemplates",
    outputs: [
      {
        internalType: "contract IBridge",
        name: "bridge",
        type: "address",
      },
      {
        internalType: "contract ISequencerInbox",
        name: "sequencerInbox",
        type: "address",
      },
      {
        internalType: "contract IInboxBase",
        name: "inbox",
        type: "address",
      },
      {
        internalType: "contract IRollupEventInbox",
        name: "rollupEventInbox",
        type: "address",
      },
      {
        internalType: "contract IOutbox",
        name: "outbox",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IBridge",
            name: "bridge",
            type: "address",
          },
          {
            internalType: "contract ISequencerInbox",
            name: "sequencerInbox",
            type: "address",
          },
          {
            internalType: "contract IInboxBase",
            name: "inbox",
            type: "address",
          },
          {
            internalType: "contract IRollupEventInbox",
            name: "rollupEventInbox",
            type: "address",
          },
          {
            internalType: "contract IOutbox",
            name: "outbox",
            type: "address",
          },
        ],
        internalType: "struct BridgeCreator.BridgeContracts",
        name: "_newTemplates",
        type: "tuple",
      },
    ],
    name: "updateERC20Templates",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IBridge",
            name: "bridge",
            type: "address",
          },
          {
            internalType: "contract ISequencerInbox",
            name: "sequencerInbox",
            type: "address",
          },
          {
            internalType: "contract IInboxBase",
            name: "inbox",
            type: "address",
          },
          {
            internalType: "contract IRollupEventInbox",
            name: "rollupEventInbox",
            type: "address",
          },
          {
            internalType: "contract IOutbox",
            name: "outbox",
            type: "address",
          },
        ],
        internalType: "struct BridgeCreator.BridgeContracts",
        name: "_newTemplates",
        type: "tuple",
      },
    ],
    name: "updateTemplates",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608034610143576118b43881900390601f8201601f19168301906001600160401b038211848310176101485782916040528339810161014082820312610143578060a061004f610056938561015e565b930161015e565b60005491608060018060a01b0319923384861617600055604051948260018060a01b03948592833391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3828151168760015416176001558260208201511687600254161760025582604082015116876003541617600355826060820151168760045416176004550151168460055416176005558281511684600654161760065582602082015116846007541617600755826040820151168460085416176008558260608201511684600954161760095501511690600a541617600a556116c690816101ee8239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b91908260a0910312610143576040519160a083016001600160401b038111848210176101485760405280516001600160a01b0391849183811681036101435782526020810151838116810361014357602083015260408101518381168103610143576040830152606081015190838216820361014357608091606084015201519182168203610143576080015256fe60808060405260043610156200001457600080fd5b600090813560e01c90816311f022271462000935575080631bb7c6cc1462000861578063715018a6146200081057806376768ab914620007b65780638da5cb5b146200078d578063b4a5cc341462000221578063d94d6e0a14620001455763f2fde38b146200008257600080fd5b346200014257602036600319011262000142576200009f62000987565b81546001600160a01b03918291620000bb9083163314620009a3565b16908115620000ee576000548260018060a01b03198216176000551660008051602062001671833981519152600080a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b80fd5b5034620001425760a0366003190112620001425780546001600160a01b0390620001739082163314620009a3565b6004358181168091036200021957600180546001600160a01b03199081169092179055602435828116908190036200021d578160025416176002556044358281168091036200021d578160035416176003556064358281168091036200021d57816004541617600455608435918216809203620002195760055416176005557fc9d3947d22fa124aaec4c7e8c919f79016e2d7b48eee10568375d98b86460d1b8180a180f35b8280fd5b8380fd5b5034620001425760e036600319011262000142576200023f62000987565b6024356001600160a01b03811681036200021957604435906001600160a01b03821682036200021d5760803660631901126200021d576200027f62000a19565b506001600160a01b03821662000784576001925b6200029d62000a19565b50620002a862000a19565b8454604051919591906001600160a01b0316610bf282016001600160401b038111838210176200077057848392620002e992610bf262000a7f863962000a55565b039087f0801562000765576001600160a01b03908116865260018201546040519116610bf282016001600160401b0381118382101762000770578483926200033a92610bf262000a7f863962000a55565b039087f0801562000765576001600160a01b03908116602087015260028201546040519116610bf282016001600160401b0381118382101762000770578483926200038e92610bf262000a7f863962000a55565b039087f0801562000765576001600160a01b03908116604087810191909152600383015490519116610bf282016001600160401b038111838210176200077057848392620003e592610bf262000a7f863962000a55565b039087f0801562000765576001600160a01b03908116606087015260049190910154604051929116610bf283016001600160401b03811184821017620007515783928894926200043e92610bf262000a7f863962000a55565b039082f092831562000744576001600160a01b0393841660808601908152938116620006d657509060018060a01b0384511690813b15620002195760405163189acdbd60e31b81526001600160a01b0390911660048201529082908290602490829084905af180156200067f57620006be575b50505b6020820151825184916001600160a01b039081169116813b156200021957829160a483926040519485938492630fbd495960e11b84526004840152606435602484015260843560448401528335606484015260c43560848401525af180156200067f57620006a6575b506040830151835160208501516001600160a01b03928316929182169116823b156200021d576044849283604051958694859363485cc95560e01b8552600485015260248401525af180156200067f576200068e575b5050606082015182516001600160a01b0390811691859116803b156200068a5781809160246040518094819363189acdbd60e31b9889845260048401525af180156200067f5762000667575b50825184516001600160a01b0391821693911690833b156200021957602490836040519586948593845260048401525af180156200065c5762000644575b6040805184516001600160a01b039081168252602080870151821690830152828601518116928201929092526060808601518316908201528351909116608082015260a090f35b620006508491620009ef565b620002195782620005fd565b6040513d86823e3d90fd5b6200067290620009ef565b6200021d578338620005bf565b6040513d84823e3d90fd5b5080fd5b6200069990620009ef565b6200021957823862000573565b620006b190620009ef565b620002195782386200051d565b620006c990620009ef565b62000219578238620004b1565b84516001600160a01b031692833b15620002195760405163485cc95560e01b81526001600160a01b03918216600482015291166024820152918290604490829084905af180156200065c576200072e575b50620004b4565b6200073c90939193620009ef565b913862000727565b50604051903d90823e3d90fd5b634e487b7160e01b88526041600452602488fd5b6040513d88823e3d90fd5b634e487b7160e01b89526041600452602489fd5b60069262000293565b50346200014257806003193601126200014257546040516001600160a01b039091168152602090f35b50346200014257806003193601126200014257600654600754600854600954600a54604080516001600160a01b0396871681529486166020860152928516928401929092528316606083015291909116608082015260a090f35b50346200014257806003193601126200014257805481906001600160a01b038116906200083f338314620009a3565b6001600160a01b0319168255600080516020620016718339815191528280a380f35b5034620001425760a0366003190112620001425780546001600160a01b03906200088f9082163314620009a3565b6004358181168091036200021957600680546001600160a01b03199081169092179055602435828116908190036200021d578160075416176007556044358281168091036200021d578160085416176008556064358281168091036200021d578160095416176009556084359182168092036200021957600a541617600a557fa47434bb6d1ddd5521e8980ded6a783513e159f80437d78715b10e6e8b6bba5e8180a180f35b82346200014257806003193601126200014257506001546002546003546004546005546001600160a01b039485168652928416602086015290831660408501528216606084015216608082015260a090f35b600435906001600160a01b03821682036200099e57565b600080fd5b15620009ab57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6001600160401b03811162000a0357604052565b634e487b7160e01b600052604160045260246000fd5b6040519060a082016001600160401b0381118382101762000a035760405260006080838281528260208201528260408201528260608201520152565b6001600160a01b039182168152911660208201526060604082018190526000908201526080019056fe608060405262000bf2803803806200001781620000d5565b9283398101606082820312620000ba57620000328262000101565b91620000416020820162000101565b604082015190916001600160401b038211620000ba57019282601f85011215620000ba578351936200007d620000778662000116565b620000d5565b9385855260208683010111620000ba57620000aa94620000a4916020808701910162000132565b62000157565b60405161075f9081620004938239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b6040519190601f01601f191682016001600160401b03811183821017620000fb57604052565b620000bf565b51906001600160a01b0382168203620000ba57565b6001600160401b038111620000fb57601f01601f191660200190565b60005b838110620001465750506000910152565b818101518382015260200162000135565b91823b156200020c577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b038516908117909155620001e293907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a281511580159062000203575b620001e4575b505062000267565b565b620001fa91620001f362000335565b916200038f565b503880620001da565b506000620001d4565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61038054604080516001600160a01b0380841682529094166020850181905292937f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f9190a18115620002e1576001600160a01b031916179055565b60405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b60405190606082016001600160401b03811183821017620000fb5760405260278252660819985a5b195960ca1b6040837f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208201520152565b9190823b15620003e057600081620003d49460208394519201905af43d15620003d7573d90620003c3620000778362000116565b9182523d6000602084013e62000434565b90565b60609062000434565b60405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608490fd5b9091901562000441575090565b815115620004525750805190602001fd5b6044604051809262461bcd60e51b82526020600483015262000484815180928160248601526020868601910162000132565b601f01601f19168101030190fdfe60806040526004361015610019575b366102e8575b6102e8565b6000803560e01c9081633659cfe61461006c575080634f1ef286146100675780635c60da1b146100625780638f2839701461005d5763f851a4400361000e576102a6565b6101c7565b610178565b6100dc565b346100be5760203660031901126100be576100856100c1565b6000805160206106ca83398151915254336001600160a01b0390911603610014576100bb906100b26103c5565b90838252610429565b80f35b80fd5b600435906001600160a01b03821682036100d757565b600080fd5b60403660031901126100d7576100f06100c1565b6001600160401b0390602435908282116100d757366023830112156100d75781600401359283116100d75736602484840101116100d7576000805160206106ca83398151915254336001600160a01b039091160361001457600060208480602461016461015f6101769961040e565b6103e9565b968288520183870137840101526104f9565b005b346100d75760003660031901126100d7576000805160206106ca833981519152546001600160a01b03903390821603610014576000805160206106ea8339815191525460405191168152602090f35b346100d75760203660031901126100d7576101e06100c1565b6000805160206106ca83398151915280549091906001600160a01b03903390821603610014577f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f604084549281519481851686521693846020820152a18115610252576001600160a01b031916179055005b60405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b346100d75760003660031901126100d7576000805160206106ca83398151915280546001600160a01b0390339082160361001457905460405191168152602090f35b6000805160206106ca833981519152546001600160a01b039081163314610339576000805160206106ea83398151915254166000808092368280378136915af43d82803e15610335573d90f35b3d90fd5b60405162461bcd60e51b815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f78792074617267606482015261195d60f21b608482015260a490fd5b634e487b7160e01b600052604160045260246000fd5b60405190602082016001600160401b038111838210176103e457604052565b6103af565b6040519190601f01601f191682016001600160401b038111838210176103e457604052565b6001600160401b0381116103e457601f01601f191660200190565b803b1561049e576000805160206106ea83398151915280546001600160a01b0319166001600160a01b03831690811790915560008051602061070a833981519152600080a2815115801590610496575b610481575050565b6104939161048d610558565b916105b1565b50565b506000610479565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b803b1561049e576000805160206106ea83398151915280546001600160a01b0319166001600160a01b03831690811790915560008051602061070a833981519152600080a281511580159061055057610481575050565b506001610479565b60405190606082016001600160401b038111838210176103e45760405260278252660819985a5b195960ca1b6040837f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208201520152565b9190823b156105fa576000816105ef9460208394519201905af43d156105f2573d906105df61015f8361040e565b9182523d6000602084013e61064e565b90565b60609061064e565b60405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608490fd5b9091901561065a575090565b81511561066a5750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b8285106106b0575050604492506000838284010152601f80199101168101030190fd5b848101820151868601604401529381019385935061068d56feb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbcbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3ba2646970667358221220639ee3426e22304fe190ed0f063a99817a8fcedbc7a88d86270770c82335573864736f6c634300081300338be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a26469706673582212206a43fb3221d7ccae01a5b5e1a12a891782b3d684036fbfd56fbdeb979696740164736f6c63430008130033";

type BridgeCreatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BridgeCreatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BridgeCreator__factory extends ContractFactory {
  constructor(...args: BridgeCreatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _ethBasedTemplates: BridgeCreator.BridgeContractsStruct,
    _erc20BasedTemplates: BridgeCreator.BridgeContractsStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BridgeCreator> {
    return super.deploy(
      _ethBasedTemplates,
      _erc20BasedTemplates,
      overrides || {}
    ) as Promise<BridgeCreator>;
  }
  override getDeployTransaction(
    _ethBasedTemplates: BridgeCreator.BridgeContractsStruct,
    _erc20BasedTemplates: BridgeCreator.BridgeContractsStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _ethBasedTemplates,
      _erc20BasedTemplates,
      overrides || {}
    );
  }
  override attach(address: string): BridgeCreator {
    return super.attach(address) as BridgeCreator;
  }
  override connect(signer: Signer): BridgeCreator__factory {
    return super.connect(signer) as BridgeCreator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeCreatorInterface {
    return new utils.Interface(_abi) as BridgeCreatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgeCreator {
    return new Contract(address, _abi, signerOrProvider) as BridgeCreator;
  }
}
