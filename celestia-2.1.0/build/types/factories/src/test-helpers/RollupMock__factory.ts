/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RollupMock,
  RollupMockInterface,
} from "../../../src/test-helpers/RollupMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [],
    name: "WithdrawTriggered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "ZombieTriggered",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "removeOldZombies",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawStakerFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60803461007457601f6101a138819003918201601f19168301916001600160401b038311848410176100795780849260209460405283398101031261007457516001600160a01b0381169081900361007457600080546001600160a01b03191691909117905560405161011190816100908239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080806040526004361015601257600080fd5b600090813560e01c9081636137391914609c575080638da5cb5b1460775763edfd03ed14603e57600080fd5b3460745760203660031901126074577fb774f793432a37585a7638b9afe49e91c478887a2c0fef32877508bf2f76429d8180a180f35b80fd5b503460745780600319360112607457546040516001600160a01b039091168152602090f35b90503460d7578160031936011260d757817f1c09fbbf7cfd024f5e4e5472dd87afd5d67ee5db6a0ca715bf508d96abce309f81602094a18152f35b5080fdfea2646970667358221220193bc0e0de1c1f000ebd8fd281f45ff71f1a74c5b2b2110cb0747ff6514b44ef64736f6c63430008130033";

type RollupMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RollupMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RollupMock__factory extends ContractFactory {
  constructor(...args: RollupMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RollupMock> {
    return super.deploy(_owner, overrides || {}) as Promise<RollupMock>;
  }
  override getDeployTransaction(
    _owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  override attach(address: string): RollupMock {
    return super.attach(address) as RollupMock;
  }
  override connect(signer: Signer): RollupMock__factory {
    return super.connect(signer) as RollupMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RollupMockInterface {
    return new utils.Interface(_abi) as RollupMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RollupMock {
    return new Contract(address, _abi, signerOrProvider) as RollupMock;
  }
}
