/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  SequencerInbox,
  SequencerInboxInterface,
} from "../../../src/bridge/SequencerInbox";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxDataSize",
        type: "uint256",
      },
      {
        internalType: "contract IReader4844",
        name: "reader4844_",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isUsingFeeToken",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyInit",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "AlreadyValidDASKeyset",
    type: "error",
  },
  {
    inputs: [],
    name: "BadMaxTimeVariation",
    type: "error",
  },
  {
    inputs: [],
    name: "BadPostUpgradeInit",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stored",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "received",
        type: "uint256",
      },
    ],
    name: "BadSequencerNumber",
    type: "error",
  },
  {
    inputs: [],
    name: "DataBlobsNotSupported",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "dataLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxDataLength",
        type: "uint256",
      },
    ],
    name: "DataTooLarge",
    type: "error",
  },
  {
    inputs: [],
    name: "DelayedBackwards",
    type: "error",
  },
  {
    inputs: [],
    name: "DelayedTooFar",
    type: "error",
  },
  {
    inputs: [],
    name: "Deprecated",
    type: "error",
  },
  {
    inputs: [],
    name: "ForceIncludeBlockTooSoon",
    type: "error",
  },
  {
    inputs: [],
    name: "ForceIncludeTimeTooSoon",
    type: "error",
  },
  {
    inputs: [],
    name: "HadZeroInit",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectMessagePreimage",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "InitParamZero",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCelestiaBatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes1",
        name: "",
        type: "bytes1",
      },
    ],
    name: "InvalidHeaderFlag",
    type: "error",
  },
  {
    inputs: [],
    name: "MissingDataHashes",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeTokenMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "NoSuchKeyset",
    type: "error",
  },
  {
    inputs: [],
    name: "NotBatchPoster",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "NotBatchPosterManager",
    type: "error",
  },
  {
    inputs: [],
    name: "NotForked",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOrigin",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "RollupNotChanged",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "messageNum",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "InboxMessageDelivered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "messageNum",
        type: "uint256",
      },
    ],
    name: "InboxMessageDeliveredFromOrigin",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "keysetHash",
        type: "bytes32",
      },
    ],
    name: "InvalidateKeyset",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "OwnerFunctionCalled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "batchSequenceNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "SequencerBatchData",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "batchSequenceNumber",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "beforeAcc",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "afterAcc",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "delayedAcc",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "afterDelayedMessagesRead",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "minTimestamp",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "maxTimestamp",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "minBlockNumber",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "maxBlockNumber",
            type: "uint64",
          },
        ],
        indexed: false,
        internalType: "struct IBridge.TimeBounds",
        name: "timeBounds",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "enum IBridge.BatchDataLocation",
        name: "dataLocation",
        type: "uint8",
      },
    ],
    name: "SequencerBatchDelivered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "keysetHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "keysetBytes",
        type: "bytes",
      },
    ],
    name: "SetValidKeyset",
    type: "event",
  },
  {
    inputs: [],
    name: "BLOBSTREAM",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BROTLI_MESSAGE_HEADER_FLAG",
    outputs: [
      {
        internalType: "bytes1",
        name: "",
        type: "bytes1",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CELESTIA_MESSAGE_HEADER_FLAG",
    outputs: [
      {
        internalType: "bytes1",
        name: "",
        type: "bytes1",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DAS_MESSAGE_HEADER_FLAG",
    outputs: [
      {
        internalType: "bytes1",
        name: "",
        type: "bytes1",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DATA_AUTHENTICATED_FLAG",
    outputs: [
      {
        internalType: "bytes1",
        name: "",
        type: "bytes1",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DATA_BLOB_HEADER_FLAG",
    outputs: [
      {
        internalType: "bytes1",
        name: "",
        type: "bytes1",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "HEADER_LENGTH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TREE_DAS_MESSAGE_HEADER_FLAG",
    outputs: [
      {
        internalType: "bytes1",
        name: "",
        type: "bytes1",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_HEAVY_MESSAGE_HEADER_FLAG",
    outputs: [
      {
        internalType: "bytes1",
        name: "",
        type: "bytes1",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sequenceNumber",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "afterDelayedMessagesRead",
        type: "uint256",
      },
      {
        internalType: "contract IGasRefunder",
        name: "gasRefunder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "prevMessageCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newMessageCount",
        type: "uint256",
      },
    ],
    name: "addSequencerL2Batch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sequenceNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "afterDelayedMessagesRead",
        type: "uint256",
      },
      {
        internalType: "contract IGasRefunder",
        name: "gasRefunder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "prevMessageCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newMessageCount",
        type: "uint256",
      },
    ],
    name: "addSequencerL2BatchFromBlobs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "contract IGasRefunder",
        name: "",
        type: "address",
      },
    ],
    name: "addSequencerL2BatchFromOrigin",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sequenceNumber",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "afterDelayedMessagesRead",
        type: "uint256",
      },
      {
        internalType: "contract IGasRefunder",
        name: "gasRefunder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "prevMessageCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newMessageCount",
        type: "uint256",
      },
    ],
    name: "addSequencerL2BatchFromOrigin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "batchCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "batchPosterManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bridge",
    outputs: [
      {
        internalType: "contract IBridge",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "dasKeySetInfo",
    outputs: [
      {
        internalType: "bool",
        name: "isValidKeyset",
        type: "bool",
      },
      {
        internalType: "uint64",
        name: "creationBlock",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_totalDelayedMessagesRead",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "kind",
        type: "uint8",
      },
      {
        internalType: "uint64[2]",
        name: "l1BlockAndTime",
        type: "uint64[2]",
      },
      {
        internalType: "uint256",
        name: "baseFeeL1",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "messageDataHash",
        type: "bytes32",
      },
    ],
    name: "forceInclusion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "ksHash",
        type: "bytes32",
      },
    ],
    name: "getKeysetCreationBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "inboxAccs",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IBridge",
        name: "bridge_",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "delayBlocks",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "futureBlocks",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "delaySeconds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "futureSeconds",
            type: "uint256",
          },
        ],
        internalType: "struct ISequencerInbox.MaxTimeVariation",
        name: "maxTimeVariation_",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "ksHash",
        type: "bytes32",
      },
    ],
    name: "invalidateKeysetHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isBatchPoster",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isSequencer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isUsingFeeToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "ksHash",
        type: "bytes32",
      },
    ],
    name: "isValidKeysetHash",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxDataSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxTimeVariation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "postUpgradeInit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reader4844",
    outputs: [
      {
        internalType: "contract IReader4844",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeDelayAfterFork",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rollup",
    outputs: [
      {
        internalType: "contract IOwnable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newBatchPosterManager",
        type: "address",
      },
    ],
    name: "setBatchPosterManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isBatchPoster_",
        type: "bool",
      },
    ],
    name: "setIsBatchPoster",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isSequencer_",
        type: "bool",
      },
    ],
    name: "setIsSequencer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "delayBlocks",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "futureBlocks",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "delaySeconds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "futureSeconds",
            type: "uint256",
          },
        ],
        internalType: "struct ISequencerInbox.MaxTimeVariation",
        name: "maxTimeVariation_",
        type: "tuple",
      },
    ],
    name: "setMaxTimeVariation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "keysetBytes",
        type: "bytes",
      },
    ],
    name: "setValidKeyset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalDelayedMessagesRead",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "updateRollupAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x610160604090808252346200023e57606081620032bc803803809162000026828562000243565b8339810103126200023e578051906020928382015160018060a01b038116928382036200023e578201519283151584036200023e57306080526202000060a0524661010090815283516302881c7960e11b818901908152600482529197916001600160401b03918087018381118282101762000228578752600080928192519060645afa913d156200021d573d90811162000209578651849291620000d5601f8201601f191685018362000243565b81528091833d92013e5b82620001fd575b505061012081815260e09790975215620001be5750620001ad575b60c05261014091825251916130549384620002688539608051848181610fe901526124ba015260a05184611f2b015260c05184818161163201528181611b0b01528181611b7001528181611e2401528181611e760152611ed2015260e0518481816106c20152612d2b015251838181610f7b0152612910015251828181610c09015281816113740152611d7401525181818161116901528181611565015281816120dd01526125250152f35b81516386657a5360e01b8152600490fd5b9015620001cc575062000101565b6064908351906380fc2c0360e01b82526004820152600a60248201526914995859195c8d0e0d0d60b21b6044820152fd5b511490508138620000e6565b634e487b7160e01b82526041600452602482fd5b5050816060620000df565b634e487b7160e01b600052604160045260246000fd5b600080fd5b601f909101601f19168101906001600160401b03821190821017620002285760405256fe608080604052600436101561001357600080fd5b60003560e01c90816302c99275146127035750806306f13056146126825780631637be481461265157806316af91a7146126355780631f7a92b2146124815780631f956632146123d35780631ff64790146122f6578063258f04951461227b57806327957a491461225f5780632cbf74e51461223f5780633e5aa08214611aaf5780635fd9e56d14611a8f5780636ae71f121461196e5780636c8904501461194e5780636d46e9871461190f5780636e7df3e7146118495780636f12b0c9146117f3578063715ea34b146117b157806371c3e6fe146117725780637fa3a40e1461175457806384420860146116615780638d910dde1461161c5780638f111f3c1461118e57806392d9f7821461115157806395fcea7814610fca57806396cc5c7814610f67578063b31761f814610e74578063cb23bcb514610e4b578063cc2a1a0c14610e22578063d1ce8da814610b08578063d9dd67ab14610a84578063dc34654714610a55578063e0bc97291461072e578063e5a358c81461070e578063e78cea92146106e5578063e8eb1dc3146106aa578063ebea461d14610666578063f1981578146101f15763f60a5091146101cc57600080fd5b346101ec5760003660031901126101ec57604051600160ff1b8152602090f35b600080fd5b346101ec5760e03660031901126101ec5760043560249081359160ff831683036101ec57366084116101ec576001600160a01b039260a435919084831683036101ec57600054918285111561052557610248612966565b9161025161297c565b60001987019387851161065157604051916020978884019460ff60f81b9060f81b16855260018060601b03199060601b16602184015260018060c01b0319809260c01b16603584015260c01b16603d820152836045820152608435606582015260c4356085820152608581526102c68161281b565b519020926102d2612966565b600a54976001600160401b0394916102ed90868b169061299f565b85439116101561063f5761030f61030261297c565b8660809b8c1c169061299f565b85429116101561062d57600090600189116105a7575b600154169560405192636ab8cee160e11b84526004840152878386818a5afa9283156104da57600093610578575b506040519088820192835260408201526040815261037081612836565b5190200361056657610380612b93565b5061038a86612bb8565b92908681519101209460405192632fe5250b60e11b84528784600481855afa9384156104da57600094610537575b5088106105255760405163eca067ad60e01b81528781600481855afa9081156104da576000916104f8575b5088116104e657879560006084928b95604051998a96879563432cc52b60e11b8752600487015285015280604485015260648401525af19586156104da57600094600096600095600099610489575b5092849260e09560609386600080516020612fdf8339815191529997600055604051978852818801528184511660408801528301511683860152836040830151169085015201511660a0820152600260c0820152a4005b975097509450809192935085813d83116104d3575b6104a88183612851565b810103126101ec578451848601516040870151606090970151979096919591949392919060e0610432565b503d61049e565b6040513d6000823e3d90fd5b60405163925f8bd360e01b8152600490fd5b90508781813d831161051e575b61050f8183612851565b810103126101ec57518a6103e3565b503d610505565b604051633eb9f37d60e11b8152600490fd5b9093508781813d831161055f575b61054f8183612851565b810103126101ec5751928a6103b8565b503d610545565b6040516313947fd760e01b8152600490fd5b9092508781813d83116105a0575b6105908183612851565b810103126101ec5751918a610353565b503d610586565b8091506001541660011989018981116106185788908660405180948193636ab8cee160e11b835260048301525afa9081156104da576000916105eb575b5090610325565b90508781813d8311610611575b6106028183612851565b810103126101ec57518a6105e4565b503d6105f8565b85634e487b7160e01b60005260116004526000fd5b60405163c76d17e560e01b8152600490fd5b60405163ad3515d960e01b8152600490fd5b83634e487b7160e01b60005260116004526000fd5b346101ec5760003660031901126101ec57608061068161290e565b90926040519360018060401b038094818094168752166020860152166040840152166060820152f35b346101ec5760003660031901126101ec5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346101ec5760003660031901126101ec576001546040516001600160a01b039091168152602090f35b346101ec5760003660031901126101ec57604051600160fe1b8152602090f35b346101ec5761073c36612792565b9594909391935a9533600052600360205260ff604060002054161580610a40575b610a2e5761076c858585612d11565b9260005487106105255760015460405163eca067ad60e01b81526001600160a01b0390911690602081600481855afa9081156104da576000916109fc575b5088116104e65760809260006084926040519d8e95869463432cc52b60e11b865260048601528c6024860152604485015260648401525af19182156104da5760009560009260009a6000956109ae575b508160005580881415806109a2575b610984575060e08798999a7ffe325ca1efe4c5c1062c981c3ee74b781debe4ea9440306a96d2a55759c66c209893600080516020612fdf833981519152936040519283526020830152606060018060401b0391828151166040850152826020820151168285015282604082015116608085015201511660a0820152600160c0820152a461089b60405192839283612b6b565b0390a26001600160a01b0316806108ae57005b36601f810180821161096e5760051c91600683028381046006148415171561096e5761092b946108ef6108f5926108e66020976129f8565b60091c906129b8565b906129b8565b91333214610964575061090c6000925b5a90612992565b600060405180968195829463e3db8a4960e01b84523360048501612b4d565b03925af180156104da5761093c575b005b61093a9060203d60201161095d575b6109558183612851565b810190612b35565b503d61094b565b9161090c90610905565b634e487b7160e01b600052601160045260246000fd5b876044916040519163ac7411c960e01b835260048301526024820152fd5b50600019811415610809565b93509350955097506080813d82116109f4575b816109ce60809383612851565b810103126101ec578051976020820151956060604084015193015199969299938b6107fa565b3d91506109c1565b90506020813d602011610a26575b81610a1760209383612851565b810103126101ec57518c6107aa565b3d9150610a0a565b604051632dd9fc9760e01b8152600490fd5b506002546001600160a01b031633141561075d565b346101ec5760003660031901126101ec57602060405173a8973bdef20fe4112c920582938ef2f022c911f58152f35b346101ec576020806003193601126101ec576001546040516316bf557960e01b81526004803590820152908290829060249082906001600160a01b03165afa9081156104da57600091610adb575b50604051908152f35b90508181813d8311610b01575b610af28183612851565b810103126101ec575182610ad2565b503d610ae8565b346101ec576020806003193601126101ec576001600160401b03906004358281116101ec57610b3b903690600401612765565b600254604051638da5cb5b60e01b8082529293926001600160a01b039283169290918681600481875afa9081156104da57600091610e05575b50163303610d94575050838211610d7e57604051610b9b601f8401601f1916850182612851565b8281528381019036848401116101ec578383833760008585830101525190206040519084820190607f60f91b8252602183015260218252610bdb82612836565b90519020600160ff1b189362010000831015610d4357846000526008845260ff60406000205416610d2a57437f0000000000000000000000000000000000000000000000000000000000000000610ccc575b60087fabca9b7986bc22ad0160eb0cb88ae75411eacfba4052af0b457a9335ef6557229560405193610c5e856127e5565b60018552818501931683528760005252610c8060406000209251151583612fad565b518154610100600160481b03191660089190911b610100600160481b0316179055604051918291610cb2919083612b6b565b0390a26002600080516020612fff833981519152600080a2005b5060405163a3b1b31d60e01b815293808560048160645afa9485156104da57600095610cfa575b5093610c2d565b94508085813d8311610d23575b610d118183612851565b810103126101ec579351936008610cf3565b503d610d07565b604051637d17eeed60e11b815260048101869052602490fd5b60405162461bcd60e51b81526004810185905260136024820152726b657973657420697320746f6f206c6172676560681b6044820152606490fd5b634e487b7160e01b600052604160045260246000fd5b9084809260046040518094819382525afa9081156104da57610dd492600092610dd8575b5050604051631194af8760e11b815291829133600484016128d5565b0390fd5b610df79250803d10610dfe575b610def8183612851565b8101906128ef565b8280610db8565b503d610de5565b610e1c9150873d8911610dfe57610def8183612851565b88610b74565b346101ec5760003660031901126101ec57600b546040516001600160a01b039091168152602090f35b346101ec5760003660031901126101ec576002546040516001600160a01b039091168152602090f35b346101ec5760803660031901126101ec57604051610e9181612800565b6004358152602090602435828201526044356040820152606435606082015260018060a01b0380600254169060405190638da5cb5b60e01b918281528581600481875afa9081156104da57600091610f4a575b50163303610f0b57610ef583612efa565b6000600080516020612fff8339815191528180a2005b8391925060046040518094819382525afa9081156104da57610dd492600092610dd8575050604051631194af8760e11b815291829133600484016128d5565b610f619150863d8811610dfe57610def8183612851565b86610ee4565b346101ec5760003660031901126101ec57467f000000000000000000000000000000000000000000000000000000000000000014610fb8576001600160401b01600160801b01600160c01b01600a55005b604051635180dd8360e11b8152600490fd5b346101ec5760003660031901126101ec576001600160a01b03611011307f000000000000000000000000000000000000000000000000000000000000000083161415612874565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610354908116330361113357600454801580611129575b8061111f575b80611115575b611103576001600160401b0380821180156110f8575b80156110ed575b80156110e2575b6110d057600160401b600160801b0360055460401b16600160801b600160c01b0360065460801b169160018060c01b031960075460c01b169316171717600a556000600455600060055560006006556000600755600080f35b60405163d0afb66160e01b8152600490fd5b508060075411611077565b508060065411611070565b508060055411611069565b604051633bcd329760e21b8152600490fd5b5060075415611053565b506006541561104d565b5060055415611047565b604051631194af8760e11b8152908190610dd49033600484016128d5565b346101ec5760003660031901126101ec5760206040517f000000000000000000000000000000000000000000000000000000000000000015158152f35b346101ec5761119c36612792565b90939194955a9632330361160a5733600052600360205260ff6040600020541615610a2e5784846111cc92612d11565b91909560005486106105255760015460405163eca067ad60e01b81526001600160a01b039091169490602081600481895afa9081156104da576000916115d8575b5087116104e65760846080926000604051978894859363432cc52b60e11b85528d60048601528c6024860152604485015260648401525af19586156104da5760009460009660009560009961158a575b50600055151580611562575b61136f575b508084141580611363575b6113455750600080516020612fdf8339815191529160e0916000546040519283526020830152606060018060401b0391828151166040850152826020820151168285015282604082015116608085015201511660a0820152600060c0820152a46001600160a01b0316806112e957005b601f360180361161096e5760051c9160068302918383046006148415171561096e5761132661090561092b936108ef6020966108e66000996129f8565b60405194858094819363e3db8a4960e01b835236903360048501612b4d565b836044916040519163ac7411c960e01b835260048301526024820152fd5b50600019811415611279565b6000907f00000000000000000000000000000000000000000000000000000000000000006114f4575b6001600160401b0382116114b857600091604051914260208401523260601b6040840152605483015286607483015248609483015260018060c01b03199060c01b1660b4820152609c81526113ec8161281b565b602060018060a01b036001541660448351838501206040519586938492637a88b10760e01b845232600485015260248401525af19182156104da57600092611476575b50600080516020612fbf83398151915290604080518092602082526114638151809281602086015260208686019101612cee565b601f01601f19168101030190a28861126e565b9091506020813d6020116114b0575b8161149260209383612851565b810103126101ec575190600080516020612fbf83398151915261142f565b3d9150611485565b60405162461bcd60e51b8152602060048201526014602482015273115615149057d1d054d7d393d517d55253950d8d60621b6044820152606490fd5b60405163637bef0760e11b8152909150602081600481606c5afa80156104da5760009061152e575b611528915048906129c5565b90611398565b506020813d60201161155a575b8161154860209383612851565b810103126101ec57611528905161151c565b3d915061153b565b507f000000000000000000000000000000000000000000000000000000000000000015611269565b97509750945092506080853d82116115d0575b816115aa60809383612851565b810103126101ec578451926020860151946060604088015197015194959694978b61125d565b3d915061159d565b90506020813d602011611602575b816115f360209383612851565b810103126101ec57518b61120d565b3d91506115e6565b60405163feb3d07160e01b8152600490fd5b346101ec5760003660031901126101ec576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346101ec576020806003193601126101ec57600254604051638da5cb5b60e01b80825260048035936001600160a01b039081169390918690829081875afa9081156104da57600091611737575b50163303610f0b578284816000526008815260ff604060002054161561171f576008908260005252604060002060ff1981541690557f5cb4218b272fd214168ac43e90fb4d05d6c36f0b17ffb4c2dd07c234d744eb2a600080a26003600080516020612fff833981519152600080a2005b60405162f20c5d60e01b815260048101839052602490fd5b61174e9150863d8811610dfe57610def8183612851565b866116ae565b346101ec5760003660031901126101ec576020600054604051908152f35b346101ec5760203660031901126101ec576001600160a01b03611793612720565b166000526003602052602060ff604060002054166040519015158152f35b346101ec5760203660031901126101ec5760043560009081526008602081815260409283902054835160ff821615158152921c6001600160401b031690820152f35b346101ec5760803660031901126101ec576024356001600160401b0381116101ec57611823903690600401612765565b50506064356001600160a01b038116036101ec576040516331cee75f60e21b8152600490fd5b346101ec5761185736612736565b600254604051638da5cb5b60e01b81526001600160a01b03916020908290600490829086165afa80156104da5782916000916118f1575b5016331415806118e3575b6118cb576118b4921660005260036020526040600020612fad565b6001600080516020612fff833981519152600080a2005b6040516333059da160e11b8152336004820152602490fd5b5080600b5416331415611899565b611909915060203d8111610dfe57610def8183612851565b8561188e565b346101ec5760203660031901126101ec576001600160a01b03611930612720565b166000526009602052602060ff604060002054166040519015158152f35b346101ec5760003660031901126101ec57604051600160fb1b8152602090f35b346101ec5760003660031901126101ec57600254604051638da5cb5b60e01b8082526001600160a01b03808416939290916020918281600481895afa80156104da578491600091611a72575b50163303611a36575060048183600154166040519283809263cb23bcb560e01b82525afa9182156104da57600092611a19575b505016809214611a07576001600160a01b03191617600255005b60405163d054909f60e01b8152600490fd5b611a2f9250803d10610dfe57610def8183612851565b84806119ed565b6040519081528181600481885afa9081156104da57610dd492600092610dd8575050604051631194af8760e11b815291829133600484016128d5565b611a899150843d8611610dfe57610def8183612851565b876119ba565b346101ec5760003660031901126101ec57604051606360f81b8152602090f35b346101ec5760a03660031901126101ec576044356001600160a01b03811681036101ec575a9033600052600360205260ff6040600020541615610a2e57611af4612b93565b5060405163741d16c160e11b8152916000836004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9283156104da57600093612222575b5082511561221057611b57602435612bb8565b604051631f6d6ef760e01b8152909491906020816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156104da576000916121de575b508060111b9080820462020000149015171561096e578251611bca916129e5565b91604051602081019182602082519192019060005b8181106121c85750505081611c02611c489360219303601f198101835282612851565b604051938491611c396020611c20818601998a815193849201612cee565b840191600560fc1b602084015251809386840190612cee565b01036001810184520182612851565b5190209048156121c057611c5d9048906129c5565b600054602435106105255760015460405163eca067ad60e01b81526001600160a01b0390911695906020816004818a5afa9081156104da5760009161218e575b50602435116104e657608060009660846040518099819363432cc52b60e11b835288600484015260243560248401526064356044840152833560648401525af19081156104da57600096600091600091600094612142575b5060243560005560043589141580612134575b612114576040805192835260243560208085019190915282516001600160401b039081168584015290830151811660608086019190915291830151811660808501529101511660a0820152600360c082015260043590600080516020612fdf8339815191529060e090a47f0000000000000000000000000000000000000000000000000000000000000000612102573332149485806120da575b611fc7575b5050506001600160a01b038216611dba57005b3690601f820180831161096e5760051c9060068202918083046006148115171561096e57611dee926108e66108ef926129f8565b92611e215750611e089160209161090c6000925a90612992565b03926001600160a01b03165af180156104da5761093c57005b917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611e61575b9160209161090c611e0894610905565b60405163741d16c160e11b81526000816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa60009181611fa2575b50611eb5575b50611e51565b805115611eaf57604051631f6d6ef760e01b8152906020826004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9182156104da57600092611f64575b50611f5a611e0895936108ef60209694611f5561090c955191611f5048937f0000000000000000000000000000000000000000000000000000000000000000906129e5565b6129e5565b6129c5565b9294505091611eaf565b9094929391506020813d602011611f9a575b81611f8360209383612851565b810103126101ec5751919390929190611f5a611f0b565b3d9150611f76565b611fc09192503d806000833e611fb88183612851565b810190612aba565b9085611ea9565b6001600160401b0382116114b8576000916040519160208301944286523260601b60408501526054840152607483015248609483015260018060c01b03199060c01b1660b4820152609c815261201c8161281b565b602060018060a01b03600154166044835186206040519586938492637a88b10760e01b845232600485015260248401525af19182156104da576000926120a5575b50604061209091600080516020612fbf833981519152939482519384926020845251809281602086015285850190612cee565b601f01601f19168101030190a2838080611da7565b91506020823d6020116120d2575b816120c060209383612851565b810103126101ec57905190604061205d565b3d91506120b3565b507f000000000000000000000000000000000000000000000000000000000000000015611da2565b6040516386657a5360e01b8152600490fd5b60405163ac7411c960e01b815260048082018b9052356024820152604490fd5b506004356000191415611d08565b9850925050506080863d8211612186575b8161216060809383612851565b810103126101ec5785519560208101519660606040830151920151909791909289611cf5565b3d9150612153565b90506020813d6020116121b8575b816121a960209383612851565b810103126101ec575187611c9d565b3d915061219c565b506000611c5d565b8251845260209384019390920191600101611bdf565b90506020813d602011612208575b816121f960209383612851565b810103126101ec575186611ba9565b3d91506121ec565b604051631e693f5b60e11b8152600490fd5b6122389193503d806000833e611fb88183612851565b9183611b44565b346101ec5760003660031901126101ec57604051600560fc1b8152602090f35b346101ec5760003660031901126101ec57602060405160288152f35b346101ec5760203660031901126101ec576004358060005260086020526040600020604051906122aa826127e5565b5460ff81161515825260081c6001600160401b0390811660209092018281529091156122de57602092505116604051908152f35b60405162f20c5d60e01b815260048101849052602490fd5b346101ec576020806003193601126101ec57612310612720565b600254604051638da5cb5b60e01b8082526001600160a01b0394928516918381600481865afa80156104da5786916000916123b6575b50163303612379575050501660018060a01b0319600b541617600b556005600080516020612fff833981519152600080a2005b829060046040518094819382525afa9081156104da57610dd492600092610dd8575050604051631194af8760e11b815291829133600484016128d5565b6123cd9150853d8711610dfe57610def8183612851565b87612346565b346101ec576123e136612736565b600254604051638da5cb5b60e01b81526001600160a01b03916020908290600490829086165afa80156104da578291600091612463575b501633141580612455575b6118cb5761243e921660005260096020526040600020612fad565b6004600080516020612fff833981519152600080a2005b5080600b5416331415612423565b61247b915060203d8111610dfe57610def8183612851565b85612418565b346101ec5760a03660031901126101ec576004356001600160a01b03818116918290036101ec5760803660231901126101ec576124e2817f000000000000000000000000000000000000000000000000000000000000000016301415612874565b60015481811661110357821561262357604051631c2eb17b60e31b815260209290600090829085816004818a5afa60009181612604575b506125ef575b505015157f00000000000000000000000000000000000000000000000000000000000000001515036125dd576001600160a01b0319918216841760015560405163cb23bcb560e01b8152938390859060049082905afa80156104da5761093a946000916125c0575b50169060025416176002556040519061259f82612800565b60243582526044359082015260643560408201526084356060820152612efa565b6125d79150843d8611610dfe57610def8183612851565b85612587565b60405163c3e31f8d60e01b8152600490fd5b166125fc575b818661251f565b5060016125f5565b61261c919250873d8911610dfe57610def8183612851565b9088612519565b604051631ad0f74360e01b8152600490fd5b346101ec5760003660031901126101ec57602060405160008152f35b346101ec5760203660031901126101ec576004356000526008602052602060ff604060002054166040519015158152f35b346101ec5760003660031901126101ec576001546040516221048360e21b815290602090829060049082906001600160a01b03165afa80156104da576000906126d1575b602090604051908152f35b506020813d82116126fb575b816126ea60209383612851565b810103126101ec57602090516126c6565b3d91506126dd565b346101ec5760003660031901126101ec57600160fd1b8152602090f35b600435906001600160a01b03821682036101ec57565b60409060031901126101ec576004356001600160a01b03811681036101ec579060243580151581036101ec5790565b9181601f840112156101ec578235916001600160401b0383116101ec57602083818601950101116101ec57565b9060c06003198301126101ec5760043591602435906001600160401b0382116101ec576127c191600401612765565b9091604435906064356001600160a01b03811681036101ec57906084359060a43590565b604081019081106001600160401b03821117610d7e57604052565b608081019081106001600160401b03821117610d7e57604052565b60c081019081106001600160401b03821117610d7e57604052565b606081019081106001600160401b03821117610d7e57604052565b601f909101601f19168101906001600160401b03821190821017610d7e57604052565b1561287b57565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b6001600160a01b0391821681529116602082015260400190565b908160209103126101ec57516001600160a01b03811681036101ec5790565b7f0000000000000000000000000000000000000000000000000000000000000000461461294057600190819082908390565b600a546001600160401b0380821692604083901c821692608081901c9092169160c01c90565b6044356001600160401b03811681036101ec5790565b6064356001600160401b03811681036101ec5790565b9190820391821161096e57565b6001600160401b03918216908216019190821161096e57565b9190820180921161096e57565b81156129cf570490565b634e487b7160e01b600052601260045260246000fd5b8181029291811591840414171561096e57565b6000908015612ab6578080600114612aae57600214612aa6576001918261013383101683600b84101617612a965760028392935b808211612a5957505082600019048211612a4557500290565b634e487b7160e01b81526011600452602490fd5b909380600019048111612a8257818516612a79575b800293811c90612a2c565b80930292612a6e565b634e487b7160e01b83526011600452602483fd5b929150600283910a92612a455750565b509060049150565b505050600190565b5090565b9060209081838203126101ec5782516001600160401b03938482116101ec570181601f820112156101ec578051938411610d7e578360051b9060405194612b0385840187612851565b855283808601928201019283116101ec578301905b828210612b26575050505090565b81518152908301908301612b18565b908160209103126101ec575180151581036101ec5790565b604091949392606082019560018060a01b0316825260208201520152565b90918060409360208452816020850152848401376000828201840152601f01601f1916010190565b60405190612ba082612800565b60006060838281528260208201528260408201520152565b90612bc1612b93565b50612bca612b93565b50612c24612bd6612b93565b92612bdf61290e565b92946001600160401b0394939092918591612c089183908181164211612cbf575b50421661299f565b958160208a01971687528181164311612ca6575b50431661299f565b9182166060860152845192516040860151926040519460018060c01b03199485809481809460c01b1660208a015260c01b16602888015260c01b16603086015260c01b16603884015260c01b16604082015260288152612c8381612836565b6028815103612c90579190565b634e487b7160e01b600052600160045260246000fd5b612cb290824316612cd5565b1660408801528338612c1c565b612ccb90824216612cd5565b168a528238612c00565b6001600160401b03918216908216039190821161096e57565b60005b838110612d015750506000910152565b8181015183820152602001612cf1565b909291612d1c612b93565b50836028018060281161096e577f0000000000000000000000000000000000000000000000000000000000000000808211612edc575050612d5c90612bb8565b93909181158015612daa575b506020612da3916040519384918184612d8a818601998a815193849201612cee565b8401918583013701600083820152038084520182612851565b5190209190565b80612e7a578135906001600160f81b0319821680158015612ecf575b8015612ec2575b8015612eb5575b8015612ea8575b15612e905750612e7a57600160ff1b8116151580612e6f575b612e2e575b606360f81b16151580612e23575b612e115738612d68565b604051633a205f0960e11b8152600490fd5b506059821415612e07565b826021116101ec57600182013580600052600860205260ff6040600020541615612e585750612df9565b6024906040519062f20c5d60e01b82526004820152fd5b506021831015612df4565b634e487b7160e01b600052603260045260246000fd5b6024906040519063359999ab60e11b82526004820152fd5b50600160fd1b8114612ddb565b50601160fb1b8114612dd4565b50606360f81b8114612dcd565b50600160ff1b8114612dc6565b6044925060405191634634691b60e01b835260048301526024820152fd5b80516001600160401b039081108015612fa0575b8015612f93575b8015612f86575b612f7457815160208301516040808501516060909501516001600160c01b031960c09190911b16600160801b600160c01b0360809690961b9590951693909216600160401b600160801b039190921b16171717600a55565b6040516309cfba7560e01b8152600490fd5b5080606083015111612f1c565b5080604083015111612f15565b5080602083015111612f0e565b9060ff80198354169115151617905556feff64905f73a67fb594e0f940a8075a860db489ad991e032f48c81123eb52d60b7394f4a19a13c7b92b5bb71033245305946ef78452f7b4986ac1390b5df4ebd7ea8787f128d10b2cc0317b0c3960f9ad447f7f6c1ed189db1083ccffd20f456ea2646970667358221220ec42187373acc9077b5a7638f63c2d078a091249c7e0e1c309ff0185f413c1cf64736f6c63430008130033";

type SequencerInboxConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SequencerInboxConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SequencerInbox__factory extends ContractFactory {
  constructor(...args: SequencerInboxConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _maxDataSize: PromiseOrValue<BigNumberish>,
    reader4844_: PromiseOrValue<string>,
    _isUsingFeeToken: PromiseOrValue<boolean>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SequencerInbox> {
    return super.deploy(
      _maxDataSize,
      reader4844_,
      _isUsingFeeToken,
      overrides || {}
    ) as Promise<SequencerInbox>;
  }
  override getDeployTransaction(
    _maxDataSize: PromiseOrValue<BigNumberish>,
    reader4844_: PromiseOrValue<string>,
    _isUsingFeeToken: PromiseOrValue<boolean>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _maxDataSize,
      reader4844_,
      _isUsingFeeToken,
      overrides || {}
    );
  }
  override attach(address: string): SequencerInbox {
    return super.attach(address) as SequencerInbox;
  }
  override connect(signer: Signer): SequencerInbox__factory {
    return super.connect(signer) as SequencerInbox__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SequencerInboxInterface {
    return new utils.Interface(_abi) as SequencerInboxInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SequencerInbox {
    return new Contract(address, _abi, signerOrProvider) as SequencerInbox;
  }
}
